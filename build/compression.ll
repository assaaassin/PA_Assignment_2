; ModuleID = '../../cse231-proj1/extra/benchmarks/compression/compression.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.anon = type { i32, i8* }
%struct.mz_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.mz_internal_state*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.mz_internal_state = type opaque
%struct.tdefl_compressor = type { i32 (i8*, i32, i8*)*, i8*, i32, [2 x i32], i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64*, i64*, i32, i8*, i64, i64, [33025 x i8], [3 x [288 x i16]], [3 x [288 x i16]], [3 x [288 x i8]], [65536 x i8], [32768 x i16], [32768 x i16], [85196 x i8] }
%struct.inflate_state = type { %struct.tinfl_decompressor_tag, i32, i32, i32, i32, i32, [32768 x i8], i32 }
%struct.tinfl_decompressor_tag = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i64, i64, [3 x %struct.tinfl_huff_table], [4 x i8], [457 x i8] }
%struct.tinfl_huff_table = type { [288 x i8], [1024 x i16], [576 x i16] }
%struct.tdefl_output_buffer = type { i64, i64, i8*, i32 }
%struct.mz_zip_archive_tag = type { i64, i64, i32, i32, i32, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i8* (i8*, i8*, i64, i64)*, i8*, i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)*, i8*, %struct.mz_zip_internal_state_tag* }
%struct.mz_zip_internal_state_tag = type { %struct.mz_zip_array, %struct.mz_zip_array, %struct.mz_zip_array, %struct._IO_FILE*, i8*, i64, i64 }
%struct.mz_zip_array = type { i8*, i64, i64, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.mz_zip_archive_file_stat = type { i32, i32, i16, i16, i16, i16, i64, i32, i64, i64, i16, i32, i64, i32, [260 x i8], [256 x i8] }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.utimbuf = type { i64, i64 }
%struct.mz_zip_writer_add_state = type { %struct.mz_zip_archive_tag*, i64, i64 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.tdefl_sym_freq = type { i16, i16 }

@mz_crc32.s_crc32 = internal constant [16 x i32] [i32 0, i32 498536548, i32 997073096, i32 651767980, i32 1994146192, i32 1802195444, i32 1303535960, i32 1342533948, i32 -306674912, i32 -267414716, i32 -690576408, i32 -882789492, i32 -1687895376, i32 -2032938284, i32 -1609899400, i32 -1111625188], align 16
@.str = private unnamed_addr constant [7 x i8] c"9.1.15\00", align 1
@mz_error.s_error_descs = internal global [10 x %struct.anon] [%struct.anon { i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i32 0, i32 0) }, %struct.anon { i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0) }, %struct.anon { i32 2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0) }, %struct.anon { i32 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0) }, %struct.anon { i32 -2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0) }, %struct.anon { i32 -3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i32 0, i32 0) }, %struct.anon { i32 -4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0) }, %struct.anon { i32 -5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i32 0, i32 0) }, %struct.anon { i32 -6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i32 0, i32 0) }, %struct.anon { i32 -10000, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i32 0, i32 0) }], align 16
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"stream end\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"need dictionary\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"file error\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"stream error\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"data error\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"buf error\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"version error\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"parameter error\00", align 1
@tinfl_decompress.s_length_base = internal constant [31 x i32] [i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 13, i32 15, i32 17, i32 19, i32 23, i32 27, i32 31, i32 35, i32 43, i32 51, i32 59, i32 67, i32 83, i32 99, i32 115, i32 131, i32 163, i32 195, i32 227, i32 258, i32 0, i32 0], align 16
@tinfl_decompress.s_length_extra = internal constant [31 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 3, i32 3, i32 3, i32 3, i32 4, i32 4, i32 4, i32 4, i32 5, i32 5, i32 5, i32 5, i32 0, i32 0, i32 0], align 16
@tinfl_decompress.s_dist_base = internal constant [32 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5, i32 7, i32 9, i32 13, i32 17, i32 25, i32 33, i32 49, i32 65, i32 97, i32 129, i32 193, i32 257, i32 385, i32 513, i32 769, i32 1025, i32 1537, i32 2049, i32 3073, i32 4097, i32 6145, i32 8193, i32 12289, i32 16385, i32 24577, i32 0, i32 0], align 16
@tinfl_decompress.s_dist_extra = internal constant [32 x i32] [i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 4, i32 4, i32 5, i32 5, i32 6, i32 6, i32 7, i32 7, i32 8, i32 8, i32 9, i32 9, i32 10, i32 10, i32 11, i32 11, i32 12, i32 12, i32 13, i32 13, i32 0, i32 0], align 16
@tinfl_decompress.s_length_dezigzag = internal constant [19 x i8] c"\10\11\12\00\08\07\09\06\0A\05\0B\04\0C\03\0D\02\0E\01\0F", align 16
@tinfl_decompress.s_min_table_sizes = internal constant [3 x i32] [i32 257, i32 1, i32 4], align 4
@.str.11 = private unnamed_addr constant [4 x i8] c"\05\05\04\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"\02\03\07\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"\03\03\0B\00", align 1
@.str.14 = private unnamed_addr constant [19 x i8] c"d->m_pPut_buf_func\00", align 1
@.str.15 = private unnamed_addr constant [56 x i8] c"../../cse231-proj1/extra/benchmarks/compression/miniz.c\00", align 1
@__PRETTY_FUNCTION__.tdefl_compress_buffer = private unnamed_addr constant [90 x i8] c"tdefl_status tdefl_compress_buffer(tdefl_compressor *, const void *, size_t, tdefl_flush)\00", align 1
@s_tdefl_num_probes = internal constant [11 x i32] [i32 0, i32 1, i32 6, i32 32, i32 16, i32 32, i32 128, i32 256, i32 512, i32 768, i32 1500], align 16
@tdefl_write_image_to_png_file_in_memory_ex.s_tdefl_png_num_probes = internal constant [11 x i32] [i32 0, i32 1, i32 6, i32 32, i32 16, i32 32, i32 128, i32 256, i32 512, i32 768, i32 1500], align 16
@tdefl_write_image_to_png_file_in_memory_ex.chans = internal constant [5 x i8] c"\00\00\04\02\06", align 1
@.str.16 = private unnamed_addr constant [17 x i8] c"\00\00\00\00\00\00\00\00IEND\AEB`\82\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"r+b\00", align 1
@.str.20 = private unnamed_addr constant [66 x i8] c"(local_dir_header_ofs & (pZip->m_file_offset_alignment - 1)) == 0\00", align 1
@__PRETTY_FUNCTION__.mz_zip_writer_add_mem_ex = private unnamed_addr constant [143 x i8] c"mz_bool mz_zip_writer_add_mem_ex(mz_zip_archive *, const char *, const void *, size_t, const void *, mz_uint16, mz_uint, mz_uint64, mz_uint32)\00", align 1
@__PRETTY_FUNCTION__.mz_zip_writer_add_file = private unnamed_addr constant [111 x i8] c"mz_bool mz_zip_writer_add_file(mz_zip_archive *, const char *, const char *, const void *, mz_uint16, mz_uint)\00", align 1
@__PRETTY_FUNCTION__.mz_zip_writer_add_from_zip_reader = private unnamed_addr constant [87 x i8] c"mz_bool mz_zip_writer_add_from_zip_reader(mz_zip_archive *, mz_zip_archive *, mz_uint)\00", align 1
@s_pStr = internal global i8* getelementptr inbounds ([491 x i8], [491 x i8]* @.str.43, i32 0, i32 0), align 8
@.str.21 = private unnamed_addr constant [21 x i8] c"miniz.c version: %s\0A\00", align 1
@.str.22 = private unnamed_addr constant [16 x i8] c"Out of memory!\0A\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c"compress() failed!\0A\00", align 1
@.str.24 = private unnamed_addr constant [32 x i8] c"Compressed from %u to %u bytes\0A\00", align 1
@.str.25 = private unnamed_addr constant [48 x i8] c"Simple fuzzy test: step %u total_succeeded: %u\0A\00", align 1
@.str.26 = private unnamed_addr constant [20 x i8] c"uncompress failed!\0A\00", align 1
@.str.27 = private unnamed_addr constant [34 x i8] c"Decompressed from %u to %u bytes\0A\00", align 1
@.str.28 = private unnamed_addr constant [23 x i8] c"Decompression failed!\0A\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"Success.\0A\00", align 1
@.str.30 = private unnamed_addr constant [106 x i8] c"(cur_match_len >= TDEFL_MIN_MATCH_LEN) && (cur_match_dist >= 1) && (cur_match_dist <= TDEFL_LZ_DICT_SIZE)\00", align 1
@__PRETTY_FUNCTION__.tdefl_compress_fast = private unnamed_addr constant [48 x i8] c"mz_bool tdefl_compress_fast(tdefl_compressor *)\00", align 1
@s_tdefl_small_dist_sym = internal constant [512 x i8] calign 16
@s_tdefl_large_dist_sym = internal constant [128 x i8] c"\00\00\12\13\14\14\15\15\16\16\16\16\17\17\17\17\18\18\18\18\18\18\18\18\19\19\19\19\19\19\19\19\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1A\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1B\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D\1D", align 16
@s_tdefl_len_sym = internal constant [256 x i16] [i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 265, i16 266, i16 266, i16 267, i16 267, i16 268, i16 268, i16 269, i16 269, i16 269, i16 269, i16 270, i16 270, i16 270, i16 270, i16 271, i16 271, i16 271, i16 271, i16 272, i16 272, i16 272, i16 272, i16 273, i16 273, i16 273, i16 273, i16 273, i16 273, i16 273, i16 273, i16 274, i16 274, i16 274, i16 274, i16 274, i16 274, i16 274, i16 274, i16 275, i16 275, i16 275, i16 275, i16 275, i16 275, i16 275, i16 275, i16 276, i16 276, i16 276, i16 276, i16 276, i16 276, i16 276, i16 276, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 277, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 278, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 279, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 281, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 283, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 284, i16 285], align 16
@.str.31 = private unnamed_addr constant [32 x i8] c"lookahead_size >= cur_match_len\00", align 1
@.str.32 = private unnamed_addr constant [35 x i8] c"d->m_lookahead_size >= len_to_move\00", align 1
@__PRETTY_FUNCTION__.tdefl_compress_normal = private unnamed_addr constant [50 x i8] c"mz_bool tdefl_compress_normal(tdefl_compressor *)\00", align 1
@.str.33 = private unnamed_addr constant [37 x i8] c"max_match_len <= TDEFL_MAX_MATCH_LEN\00", align 1
@__PRETTY_FUNCTION__.tdefl_find_match = private unnamed_addr constant [91 x i8] c"void tdefl_find_match(tdefl_compressor *, mz_uint, mz_uint, mz_uint, mz_uint *, mz_uint *)\00", align 1
@.str.34 = private unnamed_addr constant [94 x i8] c"(match_len >= TDEFL_MIN_MATCH_LEN) && (match_dist >= 1) && (match_dist <= TDEFL_LZ_DICT_SIZE)\00", align 1
@__PRETTY_FUNCTION__.tdefl_record_match = private unnamed_addr constant [62 x i8] c"void tdefl_record_match(tdefl_compressor *, mz_uint, mz_uint)\00", align 1
@.str.35 = private unnamed_addr constant [29 x i8] c"!d->m_output_flush_remaining\00", align 1
@__PRETTY_FUNCTION__.tdefl_flush_block = private unnamed_addr constant [47 x i8] c"int tdefl_flush_block(tdefl_compressor *, int)\00", align 1
@.str.36 = private unnamed_addr constant [27 x i8] c"bits <= ((1U << len) - 1U)\00", align 1
@.str.37 = private unnamed_addr constant [40 x i8] c"d->m_pOutput_buf < d->m_pOutput_buf_end\00", align 1
@__PRETTY_FUNCTION__.tdefl_start_static_block = private unnamed_addr constant [50 x i8] c"void tdefl_start_static_block(tdefl_compressor *)\00", align 1
@__PRETTY_FUNCTION__.tdefl_start_dynamic_block = private unnamed_addr constant [51 x i8] c"void tdefl_start_dynamic_block(tdefl_compressor *)\00", align 1
@s_tdefl_packed_code_size_syms_swizzle = internal global [19 x i8] c"\10\11\12\00\08\07\09\06\0A\05\0B\04\0C\03\0D\02\0E\01\0F", align 16
@.str.38 = private unnamed_addr constant [32 x i8] c"code < TDEFL_MAX_HUFF_SYMBOLS_2\00", align 1
@.str.39 = private unnamed_addr constant [52 x i8] c"d->m_huff_code_sizes[0][s_tdefl_len_sym[match_len]]\00", align 1
@__PRETTY_FUNCTION__.tdefl_compress_lz_codes = private unnamed_addr constant [52 x i8] c"mz_bool tdefl_compress_lz_codes(tdefl_compressor *)\00", align 1
@s_tdefl_len_extra = internal constant [256 x i8] c"\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\01\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\00", align 16
@mz_bitmasks = internal constant [17 x i32] [i32 0, i32 1, i32 3, i32 7, i32 15, i32 31, i32 63, i32 127, i32 255, i32 511, i32 1023, i32 2047, i32 4095, i32 8191, i32 16383, i32 32767, i32 65535], align 16
@s_tdefl_small_dist_extra = internal constant [512 x i8] c"\00\00\00\00\01\01\01\01\02\02\02\02\02\02\02\02\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07", align 16
@s_tdefl_large_dist_extra = internal constant [128 x i8] c"\00\00\08\08\09\09\09\09\0A\0A\0A\0A\0A\0A\0A\0A\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D", align 16
@.str.40 = private unnamed_addr constant [29 x i8] c"d->m_huff_code_sizes[1][sym]\00", align 1
@.str.41 = private unnamed_addr constant [29 x i8] c"d->m_huff_code_sizes[0][lit]\00", align 1
@.str.42 = private unnamed_addr constant [23 x i8] c"pArray->m_element_size\00", align 1
@__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity = private unnamed_addr constant [88 x i8] c"mz_bool mz_zip_array_ensure_capacity(mz_zip_archive *, mz_zip_array *, size_t, mz_uint)\00", align 1
@.str.43 = private unnamed_addr constant [491 x i8] c"Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.Good morning Dr. Chandra. This is Hal. I am ready for my first lesson.\00", align 1

; Function Attrs: nounwind uwtable
define i64 @mz_adler32(i64 %adler, i8* %ptr, i64 %buf_len) #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %i = alloca i32, align 4
  %s1 = alloca i32, align 4
  %s2 = alloca i32, align 4
  %block_len = alloca i64, align 8
  store i64 %adler, i64* %2, align 8
  store i8* %ptr, i8** %3, align 8
  store i64 %buf_len, i64* %4, align 8
  %5 = load i64, i64* %2, align 8
  %6 = and i64 %5, 65535
  %7 = trunc i64 %6 to i32
  store i32 %7, i32* %s1, align 4
  %8 = load i64, i64* %2, align 8
  %9 = lshr i64 %8, 16
  %10 = trunc i64 %9 to i32
  store i32 %10, i32* %s2, align 4
  %11 = load i64, i64* %4, align 8
  %12 = urem i64 %11, 5552
  store i64 %12, i64* %block_len, align 8
  %13 = load i8*, i8** %3, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %0
  store i64 1, i64* %1, align 8
  br label %138

; <label>:16                                      ; preds = %0
  br label %17

; <label>:17                                      ; preds = %124, %16
  %18 = load i64, i64* %4, align 8
  %19 = icmp ne i64 %18, 0
  br i1 %19, label %20, label %132

; <label>:20                                      ; preds = %17
  store i32 0, i32* %i, align 4
  br label %21

; <label>:21                                      ; preds = %100, %20
  %22 = load i32, i32* %i, align 4
  %23 = add i32 %22, 7
  %24 = zext i32 %23 to i64
  %25 = load i64, i64* %block_len, align 8
  %26 = icmp ult i64 %24, %25
  br i1 %26, label %27, label %105

; <label>:27                                      ; preds = %21
  %28 = load i8*, i8** %3, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 0
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = load i32, i32* %s1, align 4
  %33 = add i32 %32, %31
  store i32 %33, i32* %s1, align 4
  %34 = load i32, i32* %s1, align 4
  %35 = load i32, i32* %s2, align 4
  %36 = add i32 %35, %34
  store i32 %36, i32* %s2, align 4
  %37 = load i8*, i8** %3, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 1
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = load i32, i32* %s1, align 4
  %42 = add i32 %41, %40
  store i32 %42, i32* %s1, align 4
  %43 = load i32, i32* %s1, align 4
  %44 = load i32, i32* %s2, align 4
  %45 = add i32 %44, %43
  store i32 %45, i32* %s2, align 4
  %46 = load i8*, i8** %3, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 2
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = load i32, i32* %s1, align 4
  %51 = add i32 %50, %49
  store i32 %51, i32* %s1, align 4
  %52 = load i32, i32* %s1, align 4
  %53 = load i32, i32* %s2, align 4
  %54 = add i32 %53, %52
  store i32 %54, i32* %s2, align 4
  %55 = load i8*, i8** %3, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 3
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = load i32, i32* %s1, align 4
  %60 = add i32 %59, %58
  store i32 %60, i32* %s1, align 4
  %61 = load i32, i32* %s1, align 4
  %62 = load i32, i32* %s2, align 4
  %63 = add i32 %62, %61
  store i32 %63, i32* %s2, align 4
  %64 = load i8*, i8** %3, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 4
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = load i32, i32* %s1, align 4
  %69 = add i32 %68, %67
  store i32 %69, i32* %s1, align 4
  %70 = load i32, i32* %s1, align 4
  %71 = load i32, i32* %s2, align 4
  %72 = add i32 %71, %70
  store i32 %72, i32* %s2, align 4
  %73 = load i8*, i8** %3, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 5
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = load i32, i32* %s1, align 4
  %78 = add i32 %77, %76
  store i32 %78, i32* %s1, align 4
  %79 = load i32, i32* %s1, align 4
  %80 = load i32, i32* %s2, align 4
  %81 = add i32 %80, %79
  store i32 %81, i32* %s2, align 4
  %82 = load i8*, i8** %3, align 8
  %83 = getelementptr inbounds i8, i8* %82, i64 6
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = load i32, i32* %s1, align 4
  %87 = add i32 %86, %85
  store i32 %87, i32* %s1, align 4
  %88 = load i32, i32* %s1, align 4
  %89 = load i32, i32* %s2, align 4
  %90 = add i32 %89, %88
  store i32 %90, i32* %s2, align 4
  %91 = load i8*, i8** %3, align 8
  %92 = getelementptr inbounds i8, i8* %91, i64 7
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = load i32, i32* %s1, align 4
  %96 = add i32 %95, %94
  store i32 %96, i32* %s1, align 4
  %97 = load i32, i32* %s1, align 4
  %98 = load i32, i32* %s2, align 4
  %99 = add i32 %98, %97
  store i32 %99, i32* %s2, align 4
  br label %100

; <label>:100                                     ; preds = %27
  %101 = load i32, i32* %i, align 4
  %102 = add i32 %101, 8
  store i32 %102, i32* %i, align 4
  %103 = load i8*, i8** %3, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 8
  store i8* %104, i8** %3, align 8
  br label %21

; <label>:105                                     ; preds = %21
  br label %106

; <label>:106                                     ; preds = %121, %105
  %107 = load i32, i32* %i, align 4
  %108 = zext i32 %107 to i64
  %109 = load i64, i64* %block_len, align 8
  %110 = icmp ult i64 %108, %109
  br i1 %110, label %111, label %124

; <label>:111                                     ; preds = %106
  %112 = load i8*, i8** %3, align 8
  %113 = getelementptr inbounds i8, i8* %112, i32 1
  store i8* %113, i8** %3, align 8
  %114 = load i8, i8* %112, align 1
  %115 = zext i8 %114 to i32
  %116 = load i32, i32* %s1, align 4
  %117 = add i32 %116, %115
  store i32 %117, i32* %s1, align 4
  %118 = load i32, i32* %s1, align 4
  %119 = load i32, i32* %s2, align 4
  %120 = add i32 %119, %118
  store i32 %120, i32* %s2, align 4
  br label %121

; <label>:121                                     ; preds = %111
  %122 = load i32, i32* %i, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %i, align 4
  br label %106

; <label>:124                                     ; preds = %106
  %125 = load i32, i32* %s1, align 4
  %126 = urem i32 %125, 65521
  store i32 %126, i32* %s1, align 4
  %127 = load i32, i32* %s2, align 4
  %128 = urem i32 %127, 65521
  store i32 %128, i32* %s2, align 4
  %129 = load i64, i64* %block_len, align 8
  %130 = load i64, i64* %4, align 8
  %131 = sub i64 %130, %129
  store i64 %131, i64* %4, align 8
  store i64 5552, i64* %block_len, align 8
  br label %17

; <label>:132                                     ; preds = %17
  %133 = load i32, i32* %s2, align 4
  %134 = shl i32 %133, 16
  %135 = load i32, i32* %s1, align 4
  %136 = add i32 %134, %135
  %137 = zext i32 %136 to i64
  store i64 %137, i64* %1, align 8
  br label %138

; <label>:138                                     ; preds = %132, %15
  %139 = load i64, i64* %1, align 8
  ret i64 %139
}

; Function Attrs: nounwind uwtable
define i64 @mz_crc32(i64 %crc, i8* %ptr, i64 %buf_len) #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %crcu32 = alloca i32, align 4
  %b = alloca i8, align 1
  store i64 %crc, i64* %2, align 8
  store i8* %ptr, i8** %3, align 8
  store i64 %buf_len, i64* %4, align 8
  %5 = load i64, i64* %2, align 8
  %6 = trunc i64 %5 to i32
  store i32 %6, i32* %crcu32, align 4
  %7 = load i8*, i8** %3, align 8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %10, label %9

; <label>:9                                       ; preds = %0
  store i64 0, i64* %1, align 8
  br label %49

; <label>:10                                      ; preds = %0
  %11 = load i32, i32* %crcu32, align 4
  %12 = xor i32 %11, -1
  store i32 %12, i32* %crcu32, align 4
  br label %13

; <label>:13                                      ; preds = %17, %10
  %14 = load i64, i64* %4, align 8
  %15 = add i64 %14, -1
  store i64 %15, i64* %4, align 8
  %16 = icmp ne i64 %14, 0
  br i1 %16, label %17, label %45

; <label>:17                                      ; preds = %13
  %18 = load i8*, i8** %3, align 8
  %19 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %19, i8** %3, align 8
  %20 = load i8, i8* %18, align 1
  store i8 %20, i8* %b, align 1
  %21 = load i32, i32* %crcu32, align 4
  %22 = lshr i32 %21, 4
  %23 = load i32, i32* %crcu32, align 4
  %24 = and i32 %23, 15
  %25 = load i8, i8* %b, align 1
  %26 = zext i8 %25 to i32
  %27 = and i32 %26, 15
  %28 = xor i32 %24, %27
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds [16 x i32], [16 x i32]* @mz_crc32.s_crc32, i64 0, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = xor i32 %22, %31
  store i32 %32, i32* %crcu32, align 4
  %33 = load i32, i32* %crcu32, align 4
  %34 = lshr i32 %33, 4
  %35 = load i32, i32* %crcu32, align 4
  %36 = and i32 %35, 15
  %37 = load i8, i8* %b, align 1
  %38 = zext i8 %37 to i32
  %39 = ashr i32 %38, 4
  %40 = xor i32 %36, %39
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds [16 x i32], [16 x i32]* @mz_crc32.s_crc32, i64 0, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = xor i32 %34, %43
  store i32 %44, i32* %crcu32, align 4
  br label %13

; <label>:45                                      ; preds = %13
  %46 = load i32, i32* %crcu32, align 4
  %47 = xor i32 %46, -1
  %48 = zext i32 %47 to i64
  store i64 %48, i64* %1, align 8
  br label %49

; <label>:49                                      ; preds = %45, %9
  %50 = load i64, i64* %1, align 8
  ret i64 %50
}

; Function Attrs: nounwind uwtable
define void @mz_free(i8* %p) #0 {
  %1 = alloca i8*, align 8
  store i8* %p, i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  call void @free(i8* %2) #6
  ret void
}

; Function Attrs: nounwind
declare void @free(i8*) #1

; Function Attrs: nounwind uwtable
define i8* @mz_version() #0 {
  ret i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0)
}

; Function Attrs: nounwind uwtable
define i32 @mz_deflateInit(%struct.mz_stream_s* %pStream, i32 %level) #0 {
  %1 = alloca %struct.mz_stream_s*, align 8
  %2 = alloca i32, align 4
  store %struct.mz_stream_s* %pStream, %struct.mz_stream_s** %1, align 8
  store i32 %level, i32* %2, align 4
  %3 = load %struct.mz_stream_s*, %struct.mz_stream_s** %1, align 8
  %4 = load i32, i32* %2, align 4
  %5 = call i32 @mz_deflateInit2(%struct.mz_stream_s* %3, i32 %4, i32 8, i32 15, i32 9, i32 0)
  ret i32 %5
}

; Function Attrs: nounwind uwtable
define i32 @mz_deflateInit2(%struct.mz_stream_s* %pStream, i32 %level, i32 %method, i32 %window_bits, i32 %mem_level, i32 %strategy) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_stream_s*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %pComp = alloca %struct.tdefl_compressor*, align 8
  %comp_flags = alloca i32, align 4
  store %struct.mz_stream_s* %pStream, %struct.mz_stream_s** %2, align 8
  store i32 %level, i32* %3, align 4
  store i32 %method, i32* %4, align 4
  store i32 %window_bits, i32* %5, align 4
  store i32 %mem_level, i32* %6, align 4
  store i32 %strategy, i32* %7, align 4
  %8 = load i32, i32* %3, align 4
  %9 = load i32, i32* %5, align 4
  %10 = load i32, i32* %7, align 4
  %11 = call i32 @tdefl_create_comp_flags_from_zip_params(i32 %8, i32 %9, i32 %10)
  %12 = or i32 8192, %11
  store i32 %12, i32* %comp_flags, align 4
  %13 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %14 = icmp ne %struct.mz_stream_s* %13, null
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %0
  store i32 -2, i32* %1, align 4
  br label %86

; <label>:16                                      ; preds = %0
  %17 = load i32, i32* %4, align 4
  %18 = icmp ne i32 %17, 8
  br i1 %18, label %32, label %19

; <label>:19                                      ; preds = %16
  %20 = load i32, i32* %6, align 4
  %21 = icmp slt i32 %20, 1
  br i1 %21, label %32, label %22

; <label>:22                                      ; preds = %19
  %23 = load i32, i32* %6, align 4
  %24 = icmp sgt i32 %23, 9
  br i1 %24, label %32, label %25

; <label>:25                                      ; preds = %22
  %26 = load i32, i32* %5, align 4
  %27 = icmp ne i32 %26, 15
  br i1 %27, label %28, label %33

; <label>:28                                      ; preds = %25
  %29 = load i32, i32* %5, align 4
  %30 = sub nsw i32 0, %29
  %31 = icmp ne i32 %30, 15
  br i1 %31, label %32, label %33

; <label>:32                                      ; preds = %28, %22, %19, %16
  store i32 -10000, i32* %1, align 4
  br label %86

; <label>:33                                      ; preds = %28, %25
  %34 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %35 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %34, i32 0, i32 11
  store i32 0, i32* %35, align 8
  %36 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %37 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %36, i32 0, i32 12
  store i64 1, i64* %37, align 8
  %38 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %39 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %38, i32 0, i32 6
  store i8* null, i8** %39, align 8
  %40 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %41 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %40, i32 0, i32 13
  store i64 0, i64* %41, align 8
  %42 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %43 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %42, i32 0, i32 2
  store i64 0, i64* %43, align 8
  %44 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %45 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %44, i32 0, i32 5
  store i64 0, i64* %45, align 8
  %46 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %47 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %46, i32 0, i32 8
  %48 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %47, align 8
  %49 = icmp ne i8* (i8*, i64, i64)* %48, null
  br i1 %49, label %53, label %50

; <label>:50                                      ; preds = %33
  %51 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %52 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %51, i32 0, i32 8
  store i8* (i8*, i64, i64)* @def_alloc_func, i8* (i8*, i64, i64)** %52, align 8
  br label %53

; <label>:53                                      ; preds = %50, %33
  %54 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %55 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %54, i32 0, i32 9
  %56 = load void (i8*, i8*)*, void (i8*, i8*)** %55, align 8
  %57 = icmp ne void (i8*, i8*)* %56, null
  br i1 %57, label %61, label %58

; <label>:58                                      ; preds = %53
  %59 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %60 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %59, i32 0, i32 9
  store void (i8*, i8*)* @def_free_func, void (i8*, i8*)** %60, align 8
  br label %61

; <label>:61                                      ; preds = %58, %53
  %62 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %63 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %62, i32 0, i32 8
  %64 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %63, align 8
  %65 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %66 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %65, i32 0, i32 10
  %67 = load i8*, i8** %66, align 8
  %68 = call i8* %64(i8* %67, i64 1, i64 319352)
  %69 = bitcast i8* %68 to %struct.tdefl_compressor*
  store %struct.tdefl_compressor* %69, %struct.tdefl_compressor** %pComp, align 8
  %70 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %71 = icmp ne %struct.tdefl_compressor* %70, null
  br i1 %71, label %73, label %72

; <label>:72                                      ; preds = %61
  store i32 -4, i32* %1, align 4
  br label %86

; <label>:73                                      ; preds = %61
  %74 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %75 = bitcast %struct.tdefl_compressor* %74 to %struct.mz_internal_state*
  %76 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %77 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %76, i32 0, i32 7
  store %struct.mz_internal_state* %75, %struct.mz_internal_state** %77, align 8
  %78 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %79 = load i32, i32* %comp_flags, align 4
  %80 = call i32 @tdefl_init(%struct.tdefl_compressor* %78, i32 (i8*, i32, i8*)* null, i8* null, i32 %79)
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %85

; <label>:82                                      ; preds = %73
  %83 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %84 = call i32 @mz_deflateEnd(%struct.mz_stream_s* %83)
  store i32 -10000, i32* %1, align 4
  br label %86

; <label>:85                                      ; preds = %73
  store i32 0, i32* %1, align 4
  br label %86

; <label>:86                                      ; preds = %85, %82, %72, %32, %15
  %87 = load i32, i32* %1, align 4
  ret i32 %87
}

; Function Attrs: nounwind uwtable
define i32 @tdefl_create_comp_flags_from_zip_params(i32 %level, i32 %window_bits, i32 %strategy) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %comp_flags = alloca i32, align 4
  store i32 %level, i32* %1, align 4
  store i32 %window_bits, i32* %2, align 4
  store i32 %strategy, i32* %3, align 4
  %4 = load i32, i32* %1, align 4
  %5 = icmp sge i32 %4, 0
  br i1 %5, label %6, label %14

; <label>:6                                       ; preds = %0
  %7 = load i32, i32* %1, align 4
  %8 = icmp slt i32 10, %7
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %6
  br label %12

; <label>:10                                      ; preds = %6
  %11 = load i32, i32* %1, align 4
  br label %12

; <label>:12                                      ; preds = %10, %9
  %13 = phi i32 [ 10, %9 ], [ %11, %10 ]
  br label %15

; <label>:14                                      ; preds = %0
  br label %15

; <label>:15                                      ; preds = %14, %12
  %16 = phi i32 [ %13, %12 ], [ 6, %14 ]
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [11 x i32], [11 x i32]* @s_tdefl_num_probes, i64 0, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = load i32, i32* %1, align 4
  %21 = icmp sle i32 %20, 3
  %22 = select i1 %21, i32 16384, i32 0
  %23 = or i32 %19, %22
  store i32 %23, i32* %comp_flags, align 4
  %24 = load i32, i32* %2, align 4
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %29

; <label>:26                                      ; preds = %15
  %27 = load i32, i32* %comp_flags, align 4
  %28 = or i32 %27, 4096
  store i32 %28, i32* %comp_flags, align 4
  br label %29

; <label>:29                                      ; preds = %26, %15
  %30 = load i32, i32* %1, align 4
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %35, label %32

; <label>:32                                      ; preds = %29
  %33 = load i32, i32* %comp_flags, align 4
  %34 = or i32 %33, 524288
  store i32 %34, i32* %comp_flags, align 4
  br label %63

; <label>:35                                      ; preds = %29
  %36 = load i32, i32* %3, align 4
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %41

; <label>:38                                      ; preds = %35
  %39 = load i32, i32* %comp_flags, align 4
  %40 = or i32 %39, 131072
  store i32 %40, i32* %comp_flags, align 4
  br label %62

; <label>:41                                      ; preds = %35
  %42 = load i32, i32* %3, align 4
  %43 = icmp eq i32 %42, 2
  br i1 %43, label %44, label %47

; <label>:44                                      ; preds = %41
  %45 = load i32, i32* %comp_flags, align 4
  %46 = and i32 %45, -4096
  store i32 %46, i32* %comp_flags, align 4
  br label %61

; <label>:47                                      ; preds = %41
  %48 = load i32, i32* %3, align 4
  %49 = icmp eq i32 %48, 4
  br i1 %49, label %50, label %53

; <label>:50                                      ; preds = %47
  %51 = load i32, i32* %comp_flags, align 4
  %52 = or i32 %51, 262144
  store i32 %52, i32* %comp_flags, align 4
  br label %60

; <label>:53                                      ; preds = %47
  %54 = load i32, i32* %3, align 4
  %55 = icmp eq i32 %54, 3
  br i1 %55, label %56, label %59

; <label>:56                                      ; preds = %53
  %57 = load i32, i32* %comp_flags, align 4
  %58 = or i32 %57, 65536
  store i32 %58, i32* %comp_flags, align 4
  br label %59

; <label>:59                                      ; preds = %56, %53
  br label %60

; <label>:60                                      ; preds = %59, %50
  br label %61

; <label>:61                                      ; preds = %60, %44
  br label %62

; <label>:62                                      ; preds = %61, %38
  br label %63

; <label>:63                                      ; preds = %62, %32
  %64 = load i32, i32* %comp_flags, align 4
  ret i32 %64
}

; Function Attrs: nounwind uwtable
define internal i8* @def_alloc_func(i8* %opaque, i64 %items, i64 %size) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  store i8* %opaque, i8** %1, align 8
  store i64 %items, i64* %2, align 8
  store i64 %size, i64* %3, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = load i64, i64* %2, align 8
  %6 = load i64, i64* %3, align 8
  %7 = load i64, i64* %2, align 8
  %8 = load i64, i64* %3, align 8
  %9 = mul i64 %7, %8
  %10 = call noalias i8* @malloc(i64 %9) #6
  ret i8* %10
}

; Function Attrs: nounwind uwtable
define internal void @def_free_func(i8* %opaque, i8* %address) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  store i8* %opaque, i8** %1, align 8
  store i8* %address, i8** %2, align 8
  %3 = load i8*, i8** %1, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = load i8*, i8** %2, align 8
  call void @free(i8* %5) #6
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @tdefl_init(%struct.tdefl_compressor* %d, i32 (i8*, i32, i8*)* %pPut_buf_func, i8* %pPut_buf_user, i32 %flags) #0 {
  %1 = alloca %struct.tdefl_compressor*, align 8
  %2 = alloca i32 (i8*, i32, i8*)*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store %struct.tdefl_compressor* %d, %struct.tdefl_compressor** %1, align 8
  store i32 (i8*, i32, i8*)* %pPut_buf_func, i32 (i8*, i32, i8*)** %2, align 8
  store i8* %pPut_buf_user, i8** %3, align 8
  store i32 %flags, i32* %4, align 4
  %5 = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %2, align 8
  %6 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %7 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %6, i32 0, i32 0
  store i32 (i8*, i32, i8*)* %5, i32 (i8*, i32, i8*)** %7, align 8
  %8 = load i8*, i8** %3, align 8
  %9 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %10 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %9, i32 0, i32 1
  store i8* %8, i8** %10, align 8
  %11 = load i32, i32* %4, align 4
  %12 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %13 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %12, i32 0, i32 2
  store i32 %11, i32* %13, align 8
  %14 = load i32, i32* %4, align 4
  %15 = and i32 %14, 4095
  %16 = add nsw i32 %15, 2
  %17 = sdiv i32 %16, 3
  %18 = add nsw i32 1, %17
  %19 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %20 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %19, i32 0, i32 3
  %21 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i64 0, i64 0
  store i32 %18, i32* %21, align 4
  %22 = load i32, i32* %4, align 4
  %23 = and i32 %22, 16384
  %24 = icmp ne i32 %23, 0
  %25 = zext i1 %24 to i32
  %26 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %27 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %26, i32 0, i32 4
  store i32 %25, i32* %27, align 4
  %28 = load i32, i32* %4, align 4
  %29 = and i32 %28, 4095
  %30 = ashr i32 %29, 2
  %31 = add nsw i32 %30, 2
  %32 = sdiv i32 %31, 3
  %33 = add nsw i32 1, %32
  %34 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %35 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %34, i32 0, i32 3
  %36 = getelementptr inbounds [2 x i32], [2 x i32]* %35, i64 0, i64 1
  store i32 %33, i32* %36, align 4
  %37 = load i32, i32* %4, align 4
  %38 = and i32 %37, 32768
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %44, label %40

; <label>:40                                      ; preds = %0
  %41 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %42 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %41, i32 0, i32 41
  %43 = bitcast [32768 x i16]* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* %43, i8 0, i64 65536, i32 2, i1 false)
  br label %44

; <label>:44                                      ; preds = %40, %0
  %45 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %46 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %45, i32 0, i32 16
  store i32 0, i32* %46, align 4
  %47 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %48 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %47, i32 0, i32 15
  store i32 0, i32* %48, align 8
  %49 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %50 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %49, i32 0, i32 14
  store i32 0, i32* %50, align 4
  %51 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %52 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %51, i32 0, i32 8
  store i32 0, i32* %52, align 4
  %53 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %54 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %53, i32 0, i32 7
  store i32 0, i32* %54, align 8
  %55 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %56 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %55, i32 0, i32 6
  store i32 0, i32* %56, align 4
  %57 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %58 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %57, i32 0, i32 25
  store i32 0, i32* %58, align 8
  %59 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %60 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %59, i32 0, i32 17
  store i32 0, i32* %60, align 8
  %61 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %62 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %61, i32 0, i32 24
  store i32 0, i32* %62, align 4
  %63 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %64 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %63, i32 0, i32 23
  store i32 0, i32* %64, align 8
  %65 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %66 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %65, i32 0, i32 22
  store i32 0, i32* %66, align 4
  %67 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %68 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %67, i32 0, i32 21
  store i32 0, i32* %68, align 8
  %69 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %70 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %69, i32 0, i32 39
  %71 = getelementptr inbounds [65536 x i8], [65536 x i8]* %70, i32 0, i32 0
  %72 = getelementptr inbounds i8, i8* %71, i64 1
  %73 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %74 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %73, i32 0, i32 9
  store i8* %72, i8** %74, align 8
  %75 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %76 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %75, i32 0, i32 39
  %77 = getelementptr inbounds [65536 x i8], [65536 x i8]* %76, i32 0, i32 0
  %78 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %79 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %78, i32 0, i32 10
  store i8* %77, i8** %79, align 8
  %80 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %81 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %80, i32 0, i32 13
  store i32 8, i32* %81, align 8
  %82 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %83 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %82, i32 0, i32 42
  %84 = getelementptr inbounds [85196 x i8], [85196 x i8]* %83, i32 0, i32 0
  %85 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %86 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %85, i32 0, i32 11
  store i8* %84, i8** %86, align 8
  %87 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %88 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %87, i32 0, i32 42
  %89 = getelementptr inbounds [85196 x i8], [85196 x i8]* %88, i32 0, i32 0
  %90 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %91 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %90, i32 0, i32 12
  store i8* %89, i8** %91, align 8
  %92 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %93 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %92, i32 0, i32 26
  store i32 0, i32* %93, align 4
  %94 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %95 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %94, i32 0, i32 20
  store i32 0, i32* %95, align 4
  %96 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %97 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %96, i32 0, i32 19
  store i32 0, i32* %97, align 8
  %98 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %99 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %98, i32 0, i32 18
  store i32 0, i32* %99, align 4
  %100 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %101 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %100, i32 0, i32 5
  store i32 1, i32* %101, align 8
  %102 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %103 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %102, i32 0, i32 27
  store i8* null, i8** %103, align 8
  %104 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %105 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %104, i32 0, i32 28
  store i8* null, i8** %105, align 8
  %106 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %107 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %106, i32 0, i32 29
  store i64* null, i64** %107, align 8
  %108 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %109 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %108, i32 0, i32 30
  store i64* null, i64** %109, align 8
  %110 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %111 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %110, i32 0, i32 31
  store i32 0, i32* %111, align 8
  %112 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %113 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %112, i32 0, i32 32
  store i8* null, i8** %113, align 8
  %114 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %115 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %114, i32 0, i32 33
  store i64 0, i64* %115, align 8
  %116 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %117 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %116, i32 0, i32 34
  store i64 0, i64* %117, align 8
  %118 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %119 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %118, i32 0, i32 36
  %120 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %119, i64 0, i64 0
  %121 = getelementptr inbounds [288 x i16], [288 x i16]* %120, i64 0, i64 0
  %122 = bitcast i16* %121 to i8*
  call void @llvm.memset.p0i8.i64(i8* %122, i8 0, i64 576, i32 2, i1 false)
  %123 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %124 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %123, i32 0, i32 36
  %125 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %124, i64 0, i64 1
  %126 = getelementptr inbounds [288 x i16], [288 x i16]* %125, i64 0, i64 0
  %127 = bitcast i16* %126 to i8*
  call void @llvm.memset.p0i8.i64(i8* %127, i8 0, i64 64, i32 2, i1 false)
  ret i32 0
}

; Function Attrs: nounwind uwtable
define i32 @mz_deflateEnd(%struct.mz_stream_s* %pStream) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_stream_s*, align 8
  store %struct.mz_stream_s* %pStream, %struct.mz_stream_s** %2, align 8
  %3 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %4 = icmp ne %struct.mz_stream_s* %3, null
  br i1 %4, label %6, label %5

; <label>:5                                       ; preds = %0
  store i32 -2, i32* %1, align 4
  br label %25

; <label>:6                                       ; preds = %0
  %7 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %8 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %7, i32 0, i32 7
  %9 = load %struct.mz_internal_state*, %struct.mz_internal_state** %8, align 8
  %10 = icmp ne %struct.mz_internal_state* %9, null
  br i1 %10, label %11, label %24

; <label>:11                                      ; preds = %6
  %12 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %13 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %12, i32 0, i32 9
  %14 = load void (i8*, i8*)*, void (i8*, i8*)** %13, align 8
  %15 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %16 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %15, i32 0, i32 10
  %17 = load i8*, i8** %16, align 8
  %18 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %19 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %18, i32 0, i32 7
  %20 = load %struct.mz_internal_state*, %struct.mz_internal_state** %19, align 8
  %21 = bitcast %struct.mz_internal_state* %20 to i8*
  call void %14(i8* %17, i8* %21)
  %22 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %23 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %22, i32 0, i32 7
  store %struct.mz_internal_state* null, %struct.mz_internal_state** %23, align 8
  br label %24

; <label>:24                                      ; preds = %11, %6
  store i32 0, i32* %1, align 4
  br label %25

; <label>:25                                      ; preds = %24, %5
  %26 = load i32, i32* %1, align 4
  ret i32 %26
}

; Function Attrs: nounwind uwtable
define i32 @mz_deflateReset(%struct.mz_stream_s* %pStream) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_stream_s*, align 8
  store %struct.mz_stream_s* %pStream, %struct.mz_stream_s** %2, align 8
  %3 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %4 = icmp ne %struct.mz_stream_s* %3, null
  br i1 %4, label %5, label %20

; <label>:5                                       ; preds = %0
  %6 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %7 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %6, i32 0, i32 7
  %8 = load %struct.mz_internal_state*, %struct.mz_internal_state** %7, align 8
  %9 = icmp ne %struct.mz_internal_state* %8, null
  br i1 %9, label %10, label %20

; <label>:10                                      ; preds = %5
  %11 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %12 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %11, i32 0, i32 8
  %13 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %12, align 8
  %14 = icmp ne i8* (i8*, i64, i64)* %13, null
  br i1 %14, label %15, label %20

; <label>:15                                      ; preds = %10
  %16 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %17 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %16, i32 0, i32 9
  %18 = load void (i8*, i8*)*, void (i8*, i8*)** %17, align 8
  %19 = icmp ne void (i8*, i8*)* %18, null
  br i1 %19, label %21, label %20

; <label>:20                                      ; preds = %15, %10, %5, %0
  store i32 -2, i32* %1, align 4
  br label %37

; <label>:21                                      ; preds = %15
  %22 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %23 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %22, i32 0, i32 5
  store i64 0, i64* %23, align 8
  %24 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %25 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %24, i32 0, i32 2
  store i64 0, i64* %25, align 8
  %26 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %27 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %26, i32 0, i32 7
  %28 = load %struct.mz_internal_state*, %struct.mz_internal_state** %27, align 8
  %29 = bitcast %struct.mz_internal_state* %28 to %struct.tdefl_compressor*
  %30 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %31 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %30, i32 0, i32 7
  %32 = load %struct.mz_internal_state*, %struct.mz_internal_state** %31, align 8
  %33 = bitcast %struct.mz_internal_state* %32 to %struct.tdefl_compressor*
  %34 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %33, i32 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = call i32 @tdefl_init(%struct.tdefl_compressor* %29, i32 (i8*, i32, i8*)* null, i8* null, i32 %35)
  store i32 0, i32* %1, align 4
  br label %37

; <label>:37                                      ; preds = %21, %20
  %38 = load i32, i32* %1, align 4
  ret i32 %38
}

; Function Attrs: nounwind uwtable
define i32 @mz_deflate(%struct.mz_stream_s* %pStream, i32 %flush) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_stream_s*, align 8
  %3 = alloca i32, align 4
  %in_bytes = alloca i64, align 8
  %out_bytes = alloca i64, align 8
  %orig_total_in = alloca i64, align 8
  %orig_total_out = alloca i64, align 8
  %mz_status = alloca i32, align 4
  %defl_status = alloca i32, align 4
  store %struct.mz_stream_s* %pStream, %struct.mz_stream_s** %2, align 8
  store i32 %flush, i32* %3, align 4
  store i32 0, i32* %mz_status, align 4
  %4 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %5 = icmp ne %struct.mz_stream_s* %4, null
  br i1 %5, label %6, label %22

; <label>:6                                       ; preds = %0
  %7 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %8 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %7, i32 0, i32 7
  %9 = load %struct.mz_internal_state*, %struct.mz_internal_state** %8, align 8
  %10 = icmp ne %struct.mz_internal_state* %9, null
  br i1 %10, label %11, label %22

; <label>:11                                      ; preds = %6
  %12 = load i32, i32* %3, align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %22, label %14

; <label>:14                                      ; preds = %11
  %15 = load i32, i32* %3, align 4
  %16 = icmp sgt i32 %15, 4
  br i1 %16, label %22, label %17

; <label>:17                                      ; preds = %14
  %18 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %19 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %18, i32 0, i32 3
  %20 = load i8*, i8** %19, align 8
  %21 = icmp ne i8* %20, null
  br i1 %21, label %23, label %22

; <label>:22                                      ; preds = %17, %14, %11, %6, %0
  store i32 -2, i32* %1, align 4
  br label %165

; <label>:23                                      ; preds = %17
  %24 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %25 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %24, i32 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %29, label %28

; <label>:28                                      ; preds = %23
  store i32 -5, i32* %1, align 4
  br label %165

; <label>:29                                      ; preds = %23
  %30 = load i32, i32* %3, align 4
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %33

; <label>:32                                      ; preds = %29
  store i32 2, i32* %3, align 4
  br label %33

; <label>:33                                      ; preds = %32, %29
  %34 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %35 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %34, i32 0, i32 7
  %36 = load %struct.mz_internal_state*, %struct.mz_internal_state** %35, align 8
  %37 = bitcast %struct.mz_internal_state* %36 to %struct.tdefl_compressor*
  %38 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %37, i32 0, i32 26
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %45

; <label>:41                                      ; preds = %33
  %42 = load i32, i32* %3, align 4
  %43 = icmp eq i32 %42, 4
  %44 = select i1 %43, i32 1, i32 -5
  store i32 %44, i32* %1, align 4
  br label %165

; <label>:45                                      ; preds = %33
  %46 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %47 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %46, i32 0, i32 2
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %orig_total_in, align 8
  %49 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %50 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %49, i32 0, i32 5
  %51 = load i64, i64* %50, align 8
  store i64 %51, i64* %orig_total_out, align 8
  br label %52

; <label>:52                                      ; preds = %162, %45
  %53 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %54 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %53, i32 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = zext i32 %55 to i64
  store i64 %56, i64* %in_bytes, align 8
  %57 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %58 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %57, i32 0, i32 4
  %59 = load i32, i32* %58, align 8
  %60 = zext i32 %59 to i64
  store i64 %60, i64* %out_bytes, align 8
  %61 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %62 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %61, i32 0, i32 7
  %63 = load %struct.mz_internal_state*, %struct.mz_internal_state** %62, align 8
  %64 = bitcast %struct.mz_internal_state* %63 to %struct.tdefl_compressor*
  %65 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %66 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %65, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %69 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %68, i32 0, i32 3
  %70 = load i8*, i8** %69, align 8
  %71 = load i32, i32* %3, align 4
  %72 = call i32 @tdefl_compress(%struct.tdefl_compressor* %64, i8* %67, i64* %in_bytes, i8* %70, i64* %out_bytes, i32 %71)
  store i32 %72, i32* %defl_status, align 4
  %73 = load i64, i64* %in_bytes, align 8
  %74 = trunc i64 %73 to i32
  %75 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %76 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %75, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = zext i32 %74 to i64
  %79 = getelementptr inbounds i8, i8* %77, i64 %78
  store i8* %79, i8** %76, align 8
  %80 = load i64, i64* %in_bytes, align 8
  %81 = trunc i64 %80 to i32
  %82 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %83 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %82, i32 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = sub i32 %84, %81
  store i32 %85, i32* %83, align 8
  %86 = load i64, i64* %in_bytes, align 8
  %87 = trunc i64 %86 to i32
  %88 = zext i32 %87 to i64
  %89 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %90 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %89, i32 0, i32 2
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, %88
  store i64 %92, i64* %90, align 8
  %93 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %94 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %93, i32 0, i32 7
  %95 = load %struct.mz_internal_state*, %struct.mz_internal_state** %94, align 8
  %96 = bitcast %struct.mz_internal_state* %95 to %struct.tdefl_compressor*
  %97 = call i32 @tdefl_get_adler32(%struct.tdefl_compressor* %96)
  %98 = zext i32 %97 to i64
  %99 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %100 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %99, i32 0, i32 12
  store i64 %98, i64* %100, align 8
  %101 = load i64, i64* %out_bytes, align 8
  %102 = trunc i64 %101 to i32
  %103 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %104 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %103, i32 0, i32 3
  %105 = load i8*, i8** %104, align 8
  %106 = zext i32 %102 to i64
  %107 = getelementptr inbounds i8, i8* %105, i64 %106
  store i8* %107, i8** %104, align 8
  %108 = load i64, i64* %out_bytes, align 8
  %109 = trunc i64 %108 to i32
  %110 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %111 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %110, i32 0, i32 4
  %112 = load i32, i32* %111, align 8
  %113 = sub i32 %112, %109
  store i32 %113, i32* %111, align 8
  %114 = load i64, i64* %out_bytes, align 8
  %115 = trunc i64 %114 to i32
  %116 = zext i32 %115 to i64
  %117 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %118 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %117, i32 0, i32 5
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, %116
  store i64 %120, i64* %118, align 8
  %121 = load i32, i32* %defl_status, align 4
  %122 = icmp slt i32 %121, 0
  br i1 %122, label %123, label %124

; <label>:123                                     ; preds = %52
  store i32 -2, i32* %mz_status, align 4
  br label %163

; <label>:124                                     ; preds = %52
  %125 = load i32, i32* %defl_status, align 4
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %128

; <label>:127                                     ; preds = %124
  store i32 1, i32* %mz_status, align 4
  br label %163

; <label>:128                                     ; preds = %124
  %129 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %130 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %129, i32 0, i32 4
  %131 = load i32, i32* %130, align 8
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %134, label %133

; <label>:133                                     ; preds = %128
  br label %163

; <label>:134                                     ; preds = %128
  %135 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %136 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %135, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %159, label %139

; <label>:139                                     ; preds = %134
  %140 = load i32, i32* %3, align 4
  %141 = icmp ne i32 %140, 4
  br i1 %141, label %142, label %159

; <label>:142                                     ; preds = %139
  %143 = load i32, i32* %3, align 4
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %157, label %145

; <label>:145                                     ; preds = %142
  %146 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %147 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %146, i32 0, i32 2
  %148 = load i64, i64* %147, align 8
  %149 = load i64, i64* %orig_total_in, align 8
  %150 = icmp ne i64 %148, %149
  br i1 %150, label %157, label %151

; <label>:151                                     ; preds = %145
  %152 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %153 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %152, i32 0, i32 5
  %154 = load i64, i64* %153, align 8
  %155 = load i64, i64* %orig_total_out, align 8
  %156 = icmp ne i64 %154, %155
  br i1 %156, label %157, label %158

; <label>:157                                     ; preds = %151, %145, %142
  br label %163

; <label>:158                                     ; preds = %151
  store i32 -5, i32* %1, align 4
  br label %165

; <label>:159                                     ; preds = %139, %134
  br label %160

; <label>:160                                     ; preds = %159
  br label %161

; <label>:161                                     ; preds = %160
  br label %162

; <label>:162                                     ; preds = %161
  br label %52

; <label>:163                                     ; preds = %157, %133, %127, %123
  %164 = load i32, i32* %mz_status, align 4
  store i32 %164, i32* %1, align 4
  br label %165

; <label>:165                                     ; preds = %163, %158, %41, %28, %22
  %166 = load i32, i32* %1, align 4
  ret i32 %166
}

; Function Attrs: nounwind uwtable
define i32 @tdefl_compress(%struct.tdefl_compressor* %d, i8* %pIn_buf, i64* %pIn_buf_size, i8* %pOut_buf, i64* %pOut_buf_size, i32 %flush) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.tdefl_compressor*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i32, align 4
  store %struct.tdefl_compressor* %d, %struct.tdefl_compressor** %2, align 8
  store i8* %pIn_buf, i8** %3, align 8
  store i64* %pIn_buf_size, i64** %4, align 8
  store i8* %pOut_buf, i8** %5, align 8
  store i64* %pOut_buf_size, i64** %6, align 8
  store i32 %flush, i32* %7, align 4
  %8 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %9 = icmp ne %struct.tdefl_compressor* %8, null
  br i1 %9, label %21, label %10

; <label>:10                                      ; preds = %0
  %11 = load i64*, i64** %4, align 8
  %12 = icmp ne i64* %11, null
  br i1 %12, label %13, label %15

; <label>:13                                      ; preds = %10
  %14 = load i64*, i64** %4, align 8
  store i64 0, i64* %14, align 8
  br label %15

; <label>:15                                      ; preds = %13, %10
  %16 = load i64*, i64** %6, align 8
  %17 = icmp ne i64* %16, null
  br i1 %17, label %18, label %20

; <label>:18                                      ; preds = %15
  %19 = load i64*, i64** %6, align 8
  store i64 0, i64* %19, align 8
  br label %20

; <label>:20                                      ; preds = %18, %15
  store i32 -2, i32* %1, align 4
  br label %246

; <label>:21                                      ; preds = %0
  %22 = load i8*, i8** %3, align 8
  %23 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %24 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %23, i32 0, i32 27
  store i8* %22, i8** %24, align 8
  %25 = load i64*, i64** %4, align 8
  %26 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %27 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %26, i32 0, i32 29
  store i64* %25, i64** %27, align 8
  %28 = load i8*, i8** %5, align 8
  %29 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %30 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %29, i32 0, i32 28
  store i8* %28, i8** %30, align 8
  %31 = load i64*, i64** %6, align 8
  %32 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %33 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %32, i32 0, i32 30
  store i64* %31, i64** %33, align 8
  %34 = load i8*, i8** %3, align 8
  %35 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %36 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %35, i32 0, i32 32
  store i8* %34, i8** %36, align 8
  %37 = load i64*, i64** %4, align 8
  %38 = icmp ne i64* %37, null
  br i1 %38, label %39, label %42

; <label>:39                                      ; preds = %21
  %40 = load i64*, i64** %4, align 8
  %41 = load i64, i64* %40, align 8
  br label %43

; <label>:42                                      ; preds = %21
  br label %43

; <label>:43                                      ; preds = %42, %39
  %44 = phi i64 [ %41, %39 ], [ 0, %42 ]
  %45 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %46 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %45, i32 0, i32 33
  store i64 %44, i64* %46, align 8
  %47 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %48 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %47, i32 0, i32 34
  store i64 0, i64* %48, align 8
  %49 = load i32, i32* %7, align 4
  %50 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %51 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %50, i32 0, i32 31
  store i32 %49, i32* %51, align 8
  %52 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %53 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %52, i32 0, i32 0
  %54 = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %53, align 8
  %55 = icmp ne i32 (i8*, i32, i8*)* %54, null
  %56 = zext i1 %55 to i32
  %57 = load i8*, i8** %5, align 8
  %58 = icmp ne i8* %57, null
  br i1 %58, label %62, label %59

; <label>:59                                      ; preds = %43
  %60 = load i64*, i64** %6, align 8
  %61 = icmp ne i64* %60, null
  br label %62

; <label>:62                                      ; preds = %59, %43
  %63 = phi i1 [ true, %43 ], [ %61, %59 ]
  %64 = zext i1 %63 to i32
  %65 = icmp eq i32 %56, %64
  br i1 %65, label %99, label %66

; <label>:66                                      ; preds = %62
  %67 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %68 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %67, i32 0, i32 26
  %69 = load i32, i32* %68, align 4
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %99, label %71

; <label>:71                                      ; preds = %66
  %72 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %73 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %72, i32 0, i32 25
  %74 = load i32, i32* %73, align 8
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %79

; <label>:76                                      ; preds = %71
  %77 = load i32, i32* %7, align 4
  %78 = icmp ne i32 %77, 4
  br i1 %78, label %99, label %79

; <label>:79                                      ; preds = %76, %71
  %80 = load i64*, i64** %4, align 8
  %81 = icmp ne i64* %80, null
  br i1 %81, label %82, label %89

; <label>:82                                      ; preds = %79
  %83 = load i64*, i64** %4, align 8
  %84 = load i64, i64* %83, align 8
  %85 = icmp ne i64 %84, 0
  br i1 %85, label %86, label %89

; <label>:86                                      ; preds = %82
  %87 = load i8*, i8** %3, align 8
  %88 = icmp ne i8* %87, null
  br i1 %88, label %89, label %99

; <label>:89                                      ; preds = %86, %82, %79
  %90 = load i64*, i64** %6, align 8
  %91 = icmp ne i64* %90, null
  br i1 %91, label %92, label %112

; <label>:92                                      ; preds = %89
  %93 = load i64*, i64** %6, align 8
  %94 = load i64, i64* %93, align 8
  %95 = icmp ne i64 %94, 0
  br i1 %95, label %96, label %112

; <label>:96                                      ; preds = %92
  %97 = load i8*, i8** %5, align 8
  %98 = icmp ne i8* %97, null
  br i1 %98, label %112, label %99

; <label>:99                                      ; preds = %96, %86, %76, %66, %62
  %100 = load i64*, i64** %4, align 8
  %101 = icmp ne i64* %100, null
  br i1 %101, label %102, label %104

; <label>:102                                     ; preds = %99
  %103 = load i64*, i64** %4, align 8
  store i64 0, i64* %103, align 8
  br label %104

; <label>:104                                     ; preds = %102, %99
  %105 = load i64*, i64** %6, align 8
  %106 = icmp ne i64* %105, null
  br i1 %106, label %107, label %109

; <label>:107                                     ; preds = %104
  %108 = load i64*, i64** %6, align 8
  store i64 0, i64* %108, align 8
  br label %109

; <label>:109                                     ; preds = %107, %104
  %110 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %111 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %110, i32 0, i32 26
  store i32 -2, i32* %111, align 4
  store i32 -2, i32* %1, align 4
  br label %246

; <label>:112                                     ; preds = %96, %92, %89
  %113 = load i32, i32* %7, align 4
  %114 = icmp eq i32 %113, 4
  %115 = zext i1 %114 to i32
  %116 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %117 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %116, i32 0, i32 25
  %118 = load i32, i32* %117, align 8
  %119 = or i32 %118, %115
  store i32 %119, i32* %117, align 8
  %120 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %121 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %120, i32 0, i32 22
  %122 = load i32, i32* %121, align 4
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %129, label %124

; <label>:124                                     ; preds = %112
  %125 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %126 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %125, i32 0, i32 23
  %127 = load i32, i32* %126, align 8
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %129, label %134

; <label>:129                                     ; preds = %124, %112
  %130 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %131 = call i32 @tdefl_flush_output_buffer(%struct.tdefl_compressor* %130)
  %132 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %133 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %132, i32 0, i32 26
  store i32 %131, i32* %133, align 4
  store i32 %131, i32* %1, align 4
  br label %246

; <label>:134                                     ; preds = %124
  %135 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %136 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %135, i32 0, i32 2
  %137 = load i32, i32* %136, align 8
  %138 = and i32 %137, 4095
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %161

; <label>:140                                     ; preds = %134
  %141 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %142 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %141, i32 0, i32 2
  %143 = load i32, i32* %142, align 8
  %144 = and i32 %143, 16384
  %145 = icmp ne i32 %144, 0
  br i1 %145, label %146, label %161

; <label>:146                                     ; preds = %140
  %147 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %148 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %147, i32 0, i32 2
  %149 = load i32, i32* %148, align 8
  %150 = and i32 %149, 720896
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %161

; <label>:152                                     ; preds = %146
  %153 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %154 = call i32 @tdefl_compress_fast(%struct.tdefl_compressor* %153)
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %160, label %156

; <label>:156                                     ; preds = %152
  %157 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %158 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %157, i32 0, i32 26
  %159 = load i32, i32* %158, align 4
  store i32 %159, i32* %1, align 4
  br label %246

; <label>:160                                     ; preds = %152
  br label %170

; <label>:161                                     ; preds = %146, %140, %134
  %162 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %163 = call i32 @tdefl_compress_normal(%struct.tdefl_compressor* %162)
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %169, label %165

; <label>:165                                     ; preds = %161
  %166 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %167 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %166, i32 0, i32 26
  %168 = load i32, i32* %167, align 4
  store i32 %168, i32* %1, align 4
  br label %246

; <label>:169                                     ; preds = %161
  br label %170

; <label>:170                                     ; preds = %169, %160
  %171 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %172 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %171, i32 0, i32 2
  %173 = load i32, i32* %172, align 8
  %174 = and i32 %173, 12288
  %175 = icmp ne i32 %174, 0
  br i1 %175, label %176, label %196

; <label>:176                                     ; preds = %170
  %177 = load i8*, i8** %3, align 8
  %178 = icmp ne i8* %177, null
  br i1 %178, label %179, label %196

; <label>:179                                     ; preds = %176
  %180 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %181 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %180, i32 0, i32 5
  %182 = load i32, i32* %181, align 8
  %183 = zext i32 %182 to i64
  %184 = load i8*, i8** %3, align 8
  %185 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %186 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %185, i32 0, i32 32
  %187 = load i8*, i8** %186, align 8
  %188 = load i8*, i8** %3, align 8
  %189 = ptrtoint i8* %187 to i64
  %190 = ptrtoint i8* %188 to i64
  %191 = sub i64 %189, %190
  %192 = call i64 @mz_adler32(i64 %183, i8* %184, i64 %191)
  %193 = trunc i64 %192 to i32
  %194 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %195 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %194, i32 0, i32 5
  store i32 %193, i32* %195, align 8
  br label %196

; <label>:196                                     ; preds = %179, %176, %170
  %197 = load i32, i32* %7, align 4
  %198 = icmp ne i32 %197, 0
  br i1 %198, label %199, label %241

; <label>:199                                     ; preds = %196
  %200 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %201 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %200, i32 0, i32 7
  %202 = load i32, i32* %201, align 8
  %203 = icmp ne i32 %202, 0
  br i1 %203, label %241, label %204

; <label>:204                                     ; preds = %199
  %205 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %206 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %205, i32 0, i32 33
  %207 = load i64, i64* %206, align 8
  %208 = icmp ne i64 %207, 0
  br i1 %208, label %241, label %209

; <label>:209                                     ; preds = %204
  %210 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %211 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %210, i32 0, i32 22
  %212 = load i32, i32* %211, align 4
  %213 = icmp ne i32 %212, 0
  br i1 %213, label %241, label %214

; <label>:214                                     ; preds = %209
  %215 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %216 = load i32, i32* %7, align 4
  %217 = call i32 @tdefl_flush_block(%struct.tdefl_compressor* %215, i32 %216)
  %218 = icmp slt i32 %217, 0
  br i1 %218, label %219, label %223

; <label>:219                                     ; preds = %214
  %220 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %221 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %220, i32 0, i32 26
  %222 = load i32, i32* %221, align 4
  store i32 %222, i32* %1, align 4
  br label %246

; <label>:223                                     ; preds = %214
  %224 = load i32, i32* %7, align 4
  %225 = icmp eq i32 %224, 4
  %226 = zext i1 %225 to i32
  %227 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %228 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %227, i32 0, i32 23
  store i32 %226, i32* %228, align 8
  %229 = load i32, i32* %7, align 4
  %230 = icmp eq i32 %229, 3
  br i1 %230, label %231, label %240

; <label>:231                                     ; preds = %223
  %232 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %233 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %232, i32 0, i32 41
  %234 = bitcast [32768 x i16]* %233 to i8*
  call void @llvm.memset.p0i8.i64(i8* %234, i8 0, i64 65536, i32 2, i1 false)
  %235 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %236 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %235, i32 0, i32 40
  %237 = bitcast [32768 x i16]* %236 to i8*
  call void @llvm.memset.p0i8.i64(i8* %237, i8 0, i64 65536, i32 2, i1 false)
  %238 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %239 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %238, i32 0, i32 8
  store i32 0, i32* %239, align 4
  br label %240

; <label>:240                                     ; preds = %231, %223
  br label %241

; <label>:241                                     ; preds = %240, %209, %204, %199, %196
  %242 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %243 = call i32 @tdefl_flush_output_buffer(%struct.tdefl_compressor* %242)
  %244 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %245 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %244, i32 0, i32 26
  store i32 %243, i32* %245, align 4
  store i32 %243, i32* %1, align 4
  br label %246

; <label>:246                                     ; preds = %241, %219, %165, %156, %129, %109, %20
  %247 = load i32, i32* %1, align 4
  ret i32 %247
}

; Function Attrs: nounwind uwtable
define i32 @tdefl_get_adler32(%struct.tdefl_compressor* %d) #0 {
  %1 = alloca %struct.tdefl_compressor*, align 8
  store %struct.tdefl_compressor* %d, %struct.tdefl_compressor** %1, align 8
  %2 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %3 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %2, i32 0, i32 5
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define i64 @mz_deflateBound(%struct.mz_stream_s* %pStream, i64 %source_len) #0 {
  %1 = alloca %struct.mz_stream_s*, align 8
  %2 = alloca i64, align 8
  store %struct.mz_stream_s* %pStream, %struct.mz_stream_s** %1, align 8
  store i64 %source_len, i64* %2, align 8
  %3 = load %struct.mz_stream_s*, %struct.mz_stream_s** %1, align 8
  %4 = load i64, i64* %2, align 8
  %5 = mul i64 %4, 110
  %6 = udiv i64 %5, 100
  %7 = add i64 128, %6
  %8 = load i64, i64* %2, align 8
  %9 = add i64 128, %8
  %10 = load i64, i64* %2, align 8
  %11 = udiv i64 %10, 31744
  %12 = add i64 %11, 1
  %13 = mul i64 %12, 5
  %14 = add i64 %9, %13
  %15 = icmp ugt i64 %7, %14
  br i1 %15, label %16, label %21

; <label>:16                                      ; preds = %0
  %17 = load i64, i64* %2, align 8
  %18 = mul i64 %17, 110
  %19 = udiv i64 %18, 100
  %20 = add i64 128, %19
  br label %29

; <label>:21                                      ; preds = %0
  %22 = load i64, i64* %2, align 8
  %23 = add i64 128, %22
  %24 = load i64, i64* %2, align 8
  %25 = udiv i64 %24, 31744
  %26 = add i64 %25, 1
  %27 = mul i64 %26, 5
  %28 = add i64 %23, %27
  br label %29

; <label>:29                                      ; preds = %21, %16
  %30 = phi i64 [ %20, %16 ], [ %28, %21 ]
  ret i64 %30
}

; Function Attrs: nounwind uwtable
define i32 @mz_compress2(i8* %pDest, i64* %pDest_len, i8* %pSource, i64 %source_len, i32 %level) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i64*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %status = alloca i32, align 4
  %stream = alloca %struct.mz_stream_s, align 8
  store i8* %pDest, i8** %2, align 8
  store i64* %pDest_len, i64** %3, align 8
  store i8* %pSource, i8** %4, align 8
  store i64 %source_len, i64* %5, align 8
  store i32 %level, i32* %6, align 4
  %7 = bitcast %struct.mz_stream_s* %stream to i8*
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 112, i32 8, i1 false)
  %8 = load i64, i64* %5, align 8
  %9 = load i64*, i64** %3, align 8
  %10 = load i64, i64* %9, align 8
  %11 = or i64 %8, %10
  %12 = icmp ugt i64 %11, 4294967295
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %0
  store i32 -10000, i32* %1, align 4
  br label %50

; <label>:14                                      ; preds = %0
  %15 = load i8*, i8** %4, align 8
  %16 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %stream, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = load i64, i64* %5, align 8
  %18 = trunc i64 %17 to i32
  %19 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %stream, i32 0, i32 1
  store i32 %18, i32* %19, align 8
  %20 = load i8*, i8** %2, align 8
  %21 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %stream, i32 0, i32 3
  store i8* %20, i8** %21, align 8
  %22 = load i64*, i64** %3, align 8
  %23 = load i64, i64* %22, align 8
  %24 = trunc i64 %23 to i32
  %25 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %stream, i32 0, i32 4
  store i32 %24, i32* %25, align 8
  %26 = load i32, i32* %6, align 4
  %27 = call i32 @mz_deflateInit(%struct.mz_stream_s* %stream, i32 %26)
  store i32 %27, i32* %status, align 4
  %28 = load i32, i32* %status, align 4
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %32

; <label>:30                                      ; preds = %14
  %31 = load i32, i32* %status, align 4
  store i32 %31, i32* %1, align 4
  br label %50

; <label>:32                                      ; preds = %14
  %33 = call i32 @mz_deflate(%struct.mz_stream_s* %stream, i32 4)
  store i32 %33, i32* %status, align 4
  %34 = load i32, i32* %status, align 4
  %35 = icmp ne i32 %34, 1
  br i1 %35, label %36, label %45

; <label>:36                                      ; preds = %32
  %37 = call i32 @mz_deflateEnd(%struct.mz_stream_s* %stream)
  %38 = load i32, i32* %status, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

; <label>:40                                      ; preds = %36
  br label %43

; <label>:41                                      ; preds = %36
  %42 = load i32, i32* %status, align 4
  br label %43

; <label>:43                                      ; preds = %41, %40
  %44 = phi i32 [ -5, %40 ], [ %42, %41 ]
  store i32 %44, i32* %1, align 4
  br label %50

; <label>:45                                      ; preds = %32
  %46 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %stream, i32 0, i32 5
  %47 = load i64, i64* %46, align 8
  %48 = load i64*, i64** %3, align 8
  store i64 %47, i64* %48, align 8
  %49 = call i32 @mz_deflateEnd(%struct.mz_stream_s* %stream)
  store i32 %49, i32* %1, align 4
  br label %50

; <label>:50                                      ; preds = %45, %43, %30, %13
  %51 = load i32, i32* %1, align 4
  ret i32 %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define i32 @mz_compress(i8* %pDest, i64* %pDest_len, i8* %pSource, i64 %source_len) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i64*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %pDest, i8** %1, align 8
  store i64* %pDest_len, i64** %2, align 8
  store i8* %pSource, i8** %3, align 8
  store i64 %source_len, i64* %4, align 8
  %5 = load i8*, i8** %1, align 8
  %6 = load i64*, i64** %2, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = load i64, i64* %4, align 8
  %9 = call i32 @mz_compress2(i8* %5, i64* %6, i8* %7, i64 %8, i32 -1)
  ret i32 %9
}

; Function Attrs: nounwind uwtable
define i64 @mz_compressBound(i64 %source_len) #0 {
  %1 = alloca i64, align 8
  store i64 %source_len, i64* %1, align 8
  %2 = load i64, i64* %1, align 8
  %3 = call i64 @mz_deflateBound(%struct.mz_stream_s* null, i64 %2)
  ret i64 %3
}

; Function Attrs: nounwind uwtable
define i32 @mz_inflateInit2(%struct.mz_stream_s* %pStream, i32 %window_bits) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_stream_s*, align 8
  %3 = alloca i32, align 4
  %pDecomp = alloca %struct.inflate_state*, align 8
  store %struct.mz_stream_s* %pStream, %struct.mz_stream_s** %2, align 8
  store i32 %window_bits, i32* %3, align 4
  %4 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %5 = icmp ne %struct.mz_stream_s* %4, null
  br i1 %5, label %7, label %6

; <label>:6                                       ; preds = %0
  store i32 -2, i32* %1, align 4
  br label %78

; <label>:7                                       ; preds = %0
  %8 = load i32, i32* %3, align 4
  %9 = icmp ne i32 %8, 15
  br i1 %9, label %10, label %15

; <label>:10                                      ; preds = %7
  %11 = load i32, i32* %3, align 4
  %12 = sub nsw i32 0, %11
  %13 = icmp ne i32 %12, 15
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %10
  store i32 -10000, i32* %1, align 4
  br label %78

; <label>:15                                      ; preds = %10, %7
  %16 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %17 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %16, i32 0, i32 11
  store i32 0, i32* %17, align 8
  %18 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %19 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %18, i32 0, i32 12
  store i64 0, i64* %19, align 8
  %20 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %21 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %20, i32 0, i32 6
  store i8* null, i8** %21, align 8
  %22 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %23 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %22, i32 0, i32 2
  store i64 0, i64* %23, align 8
  %24 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %25 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %24, i32 0, i32 5
  store i64 0, i64* %25, align 8
  %26 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %27 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %26, i32 0, i32 13
  store i64 0, i64* %27, align 8
  %28 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %29 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %28, i32 0, i32 8
  %30 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %29, align 8
  %31 = icmp ne i8* (i8*, i64, i64)* %30, null
  br i1 %31, label %35, label %32

; <label>:32                                      ; preds = %15
  %33 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %34 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %33, i32 0, i32 8
  store i8* (i8*, i64, i64)* @def_alloc_func, i8* (i8*, i64, i64)** %34, align 8
  br label %35

; <label>:35                                      ; preds = %32, %15
  %36 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %37 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %36, i32 0, i32 9
  %38 = load void (i8*, i8*)*, void (i8*, i8*)** %37, align 8
  %39 = icmp ne void (i8*, i8*)* %38, null
  br i1 %39, label %43, label %40

; <label>:40                                      ; preds = %35
  %41 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %42 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %41, i32 0, i32 9
  store void (i8*, i8*)* @def_free_func, void (i8*, i8*)** %42, align 8
  br label %43

; <label>:43                                      ; preds = %40, %35
  %44 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %45 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %44, i32 0, i32 8
  %46 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %45, align 8
  %47 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %48 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %47, i32 0, i32 10
  %49 = load i8*, i8** %48, align 8
  %50 = call i8* %46(i8* %49, i64 1, i64 43792)
  %51 = bitcast i8* %50 to %struct.inflate_state*
  store %struct.inflate_state* %51, %struct.inflate_state** %pDecomp, align 8
  %52 = load %struct.inflate_state*, %struct.inflate_state** %pDecomp, align 8
  %53 = icmp ne %struct.inflate_state* %52, null
  br i1 %53, label %55, label %54

; <label>:54                                      ; preds = %43
  store i32 -4, i32* %1, align 4
  br label %78

; <label>:55                                      ; preds = %43
  %56 = load %struct.inflate_state*, %struct.inflate_state** %pDecomp, align 8
  %57 = bitcast %struct.inflate_state* %56 to %struct.mz_internal_state*
  %58 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %59 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %58, i32 0, i32 7
  store %struct.mz_internal_state* %57, %struct.mz_internal_state** %59, align 8
  br label %60

; <label>:60                                      ; preds = %55
  %61 = load %struct.inflate_state*, %struct.inflate_state** %pDecomp, align 8
  %62 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %61, i32 0, i32 0
  %63 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %62, i32 0, i32 0
  store i32 0, i32* %63, align 8
  br label %64

; <label>:64                                      ; preds = %60
  %65 = load %struct.inflate_state*, %struct.inflate_state** %pDecomp, align 8
  %66 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %65, i32 0, i32 1
  store i32 0, i32* %66, align 8
  %67 = load %struct.inflate_state*, %struct.inflate_state** %pDecomp, align 8
  %68 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %67, i32 0, i32 2
  store i32 0, i32* %68, align 4
  %69 = load %struct.inflate_state*, %struct.inflate_state** %pDecomp, align 8
  %70 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %69, i32 0, i32 7
  store i32 1, i32* %70, align 4
  %71 = load %struct.inflate_state*, %struct.inflate_state** %pDecomp, align 8
  %72 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %71, i32 0, i32 3
  store i32 1, i32* %72, align 8
  %73 = load %struct.inflate_state*, %struct.inflate_state** %pDecomp, align 8
  %74 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %73, i32 0, i32 4
  store i32 0, i32* %74, align 4
  %75 = load i32, i32* %3, align 4
  %76 = load %struct.inflate_state*, %struct.inflate_state** %pDecomp, align 8
  %77 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %76, i32 0, i32 5
  store i32 %75, i32* %77, align 8
  store i32 0, i32* %1, align 4
  br label %78

; <label>:78                                      ; preds = %64, %54, %14, %6
  %79 = load i32, i32* %1, align 4
  ret i32 %79
}

; Function Attrs: nounwind uwtable
define i32 @mz_inflateInit(%struct.mz_stream_s* %pStream) #0 {
  %1 = alloca %struct.mz_stream_s*, align 8
  store %struct.mz_stream_s* %pStream, %struct.mz_stream_s** %1, align 8
  %2 = load %struct.mz_stream_s*, %struct.mz_stream_s** %1, align 8
  %3 = call i32 @mz_inflateInit2(%struct.mz_stream_s* %2, i32 15)
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @mz_inflate(%struct.mz_stream_s* %pStream, i32 %flush) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_stream_s*, align 8
  %3 = alloca i32, align 4
  %pState = alloca %struct.inflate_state*, align 8
  %n = alloca i32, align 4
  %first_call = alloca i32, align 4
  %decomp_flags = alloca i32, align 4
  %in_bytes = alloca i64, align 8
  %out_bytes = alloca i64, align 8
  %orig_avail_in = alloca i64, align 8
  %status = alloca i32, align 4
  store %struct.mz_stream_s* %pStream, %struct.mz_stream_s** %2, align 8
  store i32 %flush, i32* %3, align 4
  store i32 8, i32* %decomp_flags, align 4
  %4 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %5 = icmp ne %struct.mz_stream_s* %4, null
  br i1 %5, label %6, label %11

; <label>:6                                       ; preds = %0
  %7 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %8 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %7, i32 0, i32 7
  %9 = load %struct.mz_internal_state*, %struct.mz_internal_state** %8, align 8
  %10 = icmp ne %struct.mz_internal_state* %9, null
  br i1 %10, label %12, label %11

; <label>:11                                      ; preds = %6, %0
  store i32 -2, i32* %1, align 4
  br label %433

; <label>:12                                      ; preds = %6
  %13 = load i32, i32* %3, align 4
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %16

; <label>:15                                      ; preds = %12
  store i32 2, i32* %3, align 4
  br label %16

; <label>:16                                      ; preds = %15, %12
  %17 = load i32, i32* %3, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %26

; <label>:19                                      ; preds = %16
  %20 = load i32, i32* %3, align 4
  %21 = icmp ne i32 %20, 2
  br i1 %21, label %22, label %26

; <label>:22                                      ; preds = %19
  %23 = load i32, i32* %3, align 4
  %24 = icmp ne i32 %23, 4
  br i1 %24, label %25, label %26

; <label>:25                                      ; preds = %22
  store i32 -2, i32* %1, align 4
  br label %433

; <label>:26                                      ; preds = %22, %19, %16
  %27 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %28 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %27, i32 0, i32 7
  %29 = load %struct.mz_internal_state*, %struct.mz_internal_state** %28, align 8
  %30 = bitcast %struct.mz_internal_state* %29 to %struct.inflate_state*
  store %struct.inflate_state* %30, %struct.inflate_state** %pState, align 8
  %31 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %32 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %31, i32 0, i32 5
  %33 = load i32, i32* %32, align 8
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %38

; <label>:35                                      ; preds = %26
  %36 = load i32, i32* %decomp_flags, align 4
  %37 = or i32 %36, 1
  store i32 %37, i32* %decomp_flags, align 4
  br label %38

; <label>:38                                      ; preds = %35, %26
  %39 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %40 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %39, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = zext i32 %41 to i64
  store i64 %42, i64* %orig_avail_in, align 8
  %43 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %44 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %43, i32 0, i32 3
  %45 = load i32, i32* %44, align 8
  store i32 %45, i32* %first_call, align 4
  %46 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %47 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %46, i32 0, i32 3
  store i32 0, i32* %47, align 8
  %48 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %49 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %48, i32 0, i32 7
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %52, label %53

; <label>:52                                      ; preds = %38
  store i32 -3, i32* %1, align 4
  br label %433

; <label>:53                                      ; preds = %38
  %54 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %55 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %54, i32 0, i32 4
  %56 = load i32, i32* %55, align 4
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %62

; <label>:58                                      ; preds = %53
  %59 = load i32, i32* %3, align 4
  %60 = icmp ne i32 %59, 4
  br i1 %60, label %61, label %62

; <label>:61                                      ; preds = %58
  store i32 -2, i32* %1, align 4
  br label %433

; <label>:62                                      ; preds = %58, %53
  %63 = load i32, i32* %3, align 4
  %64 = icmp eq i32 %63, 4
  %65 = zext i1 %64 to i32
  %66 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %67 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %66, i32 0, i32 4
  %68 = load i32, i32* %67, align 4
  %69 = or i32 %68, %65
  store i32 %69, i32* %67, align 4
  %70 = load i32, i32* %3, align 4
  %71 = icmp eq i32 %70, 4
  br i1 %71, label %72, label %160

; <label>:72                                      ; preds = %62
  %73 = load i32, i32* %first_call, align 4
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %160

; <label>:75                                      ; preds = %72
  %76 = load i32, i32* %decomp_flags, align 4
  %77 = or i32 %76, 4
  store i32 %77, i32* %decomp_flags, align 4
  %78 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %79 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = zext i32 %80 to i64
  store i64 %81, i64* %in_bytes, align 8
  %82 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %83 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %82, i32 0, i32 4
  %84 = load i32, i32* %83, align 8
  %85 = zext i32 %84 to i64
  store i64 %85, i64* %out_bytes, align 8
  %86 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %87 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %86, i32 0, i32 0
  %88 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %89 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %88, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %92 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %91, i32 0, i32 3
  %93 = load i8*, i8** %92, align 8
  %94 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %95 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %94, i32 0, i32 3
  %96 = load i8*, i8** %95, align 8
  %97 = load i32, i32* %decomp_flags, align 4
  %98 = call i32 @tinfl_decompress(%struct.tinfl_decompressor_tag* %87, i8* %90, i64* %in_bytes, i8* %93, i8* %96, i64* %out_bytes, i32 %97)
  store i32 %98, i32* %status, align 4
  %99 = load i32, i32* %status, align 4
  %100 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %101 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %100, i32 0, i32 7
  store i32 %99, i32* %101, align 4
  %102 = load i64, i64* %in_bytes, align 8
  %103 = trunc i64 %102 to i32
  %104 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %105 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %104, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = zext i32 %103 to i64
  %108 = getelementptr inbounds i8, i8* %106, i64 %107
  store i8* %108, i8** %105, align 8
  %109 = load i64, i64* %in_bytes, align 8
  %110 = trunc i64 %109 to i32
  %111 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %112 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %111, i32 0, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = sub i32 %113, %110
  store i32 %114, i32* %112, align 8
  %115 = load i64, i64* %in_bytes, align 8
  %116 = trunc i64 %115 to i32
  %117 = zext i32 %116 to i64
  %118 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %119 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %118, i32 0, i32 2
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, %117
  store i64 %121, i64* %119, align 8
  %122 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %123 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %122, i32 0, i32 0
  %124 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %123, i32 0, i32 7
  %125 = load i32, i32* %124, align 4
  %126 = zext i32 %125 to i64
  %127 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %128 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %127, i32 0, i32 12
  store i64 %126, i64* %128, align 8
  %129 = load i64, i64* %out_bytes, align 8
  %130 = trunc i64 %129 to i32
  %131 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %132 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %131, i32 0, i32 3
  %133 = load i8*, i8** %132, align 8
  %134 = zext i32 %130 to i64
  %135 = getelementptr inbounds i8, i8* %133, i64 %134
  store i8* %135, i8** %132, align 8
  %136 = load i64, i64* %out_bytes, align 8
  %137 = trunc i64 %136 to i32
  %138 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %139 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %138, i32 0, i32 4
  %140 = load i32, i32* %139, align 8
  %141 = sub i32 %140, %137
  store i32 %141, i32* %139, align 8
  %142 = load i64, i64* %out_bytes, align 8
  %143 = trunc i64 %142 to i32
  %144 = zext i32 %143 to i64
  %145 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %146 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %145, i32 0, i32 5
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, %144
  store i64 %148, i64* %146, align 8
  %149 = load i32, i32* %status, align 4
  %150 = icmp slt i32 %149, 0
  br i1 %150, label %151, label %152

; <label>:151                                     ; preds = %75
  store i32 -3, i32* %1, align 4
  br label %433

; <label>:152                                     ; preds = %75
  %153 = load i32, i32* %status, align 4
  %154 = icmp ne i32 %153, 0
  br i1 %154, label %155, label %158

; <label>:155                                     ; preds = %152
  %156 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %157 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %156, i32 0, i32 7
  store i32 -1, i32* %157, align 4
  store i32 -5, i32* %1, align 4
  br label %433

; <label>:158                                     ; preds = %152
  br label %159

; <label>:159                                     ; preds = %158
  store i32 1, i32* %1, align 4
  br label %433

; <label>:160                                     ; preds = %72, %62
  %161 = load i32, i32* %3, align 4
  %162 = icmp ne i32 %161, 4
  br i1 %162, label %163, label %166

; <label>:163                                     ; preds = %160
  %164 = load i32, i32* %decomp_flags, align 4
  %165 = or i32 %164, 2
  store i32 %165, i32* %decomp_flags, align 4
  br label %166

; <label>:166                                     ; preds = %163, %160
  %167 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %168 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %167, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = icmp ne i32 %169, 0
  br i1 %170, label %171, label %245

; <label>:171                                     ; preds = %166
  %172 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %173 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %172, i32 0, i32 2
  %174 = load i32, i32* %173, align 4
  %175 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %176 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %175, i32 0, i32 4
  %177 = load i32, i32* %176, align 8
  %178 = icmp ult i32 %174, %177
  br i1 %178, label %179, label %183

; <label>:179                                     ; preds = %171
  %180 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %181 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %180, i32 0, i32 2
  %182 = load i32, i32* %181, align 4
  br label %187

; <label>:183                                     ; preds = %171
  %184 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %185 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %184, i32 0, i32 4
  %186 = load i32, i32* %185, align 8
  br label %187

; <label>:187                                     ; preds = %183, %179
  %188 = phi i32 [ %182, %179 ], [ %186, %183 ]
  store i32 %188, i32* %n, align 4
  %189 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %190 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %189, i32 0, i32 3
  %191 = load i8*, i8** %190, align 8
  %192 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %193 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %192, i32 0, i32 6
  %194 = getelementptr inbounds [32768 x i8], [32768 x i8]* %193, i32 0, i32 0
  %195 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %196 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %195, i32 0, i32 1
  %197 = load i32, i32* %196, align 8
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds i8, i8* %194, i64 %198
  %200 = load i32, i32* %n, align 4
  %201 = zext i32 %200 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %191, i8* %199, i64 %201, i32 1, i1 false)
  %202 = load i32, i32* %n, align 4
  %203 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %204 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %203, i32 0, i32 3
  %205 = load i8*, i8** %204, align 8
  %206 = zext i32 %202 to i64
  %207 = getelementptr inbounds i8, i8* %205, i64 %206
  store i8* %207, i8** %204, align 8
  %208 = load i32, i32* %n, align 4
  %209 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %210 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %209, i32 0, i32 4
  %211 = load i32, i32* %210, align 8
  %212 = sub i32 %211, %208
  store i32 %212, i32* %210, align 8
  %213 = load i32, i32* %n, align 4
  %214 = zext i32 %213 to i64
  %215 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %216 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %215, i32 0, i32 5
  %217 = load i64, i64* %216, align 8
  %218 = add i64 %217, %214
  store i64 %218, i64* %216, align 8
  %219 = load i32, i32* %n, align 4
  %220 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %221 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %220, i32 0, i32 2
  %222 = load i32, i32* %221, align 4
  %223 = sub i32 %222, %219
  store i32 %223, i32* %221, align 4
  %224 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %225 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %224, i32 0, i32 1
  %226 = load i32, i32* %225, align 8
  %227 = load i32, i32* %n, align 4
  %228 = add i32 %226, %227
  %229 = and i32 %228, 32767
  %230 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %231 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %230, i32 0, i32 1
  store i32 %229, i32* %231, align 8
  %232 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %233 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %232, i32 0, i32 7
  %234 = load i32, i32* %233, align 4
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %242

; <label>:236                                     ; preds = %187
  %237 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %238 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %237, i32 0, i32 2
  %239 = load i32, i32* %238, align 4
  %240 = icmp ne i32 %239, 0
  %241 = xor i1 %240, true
  br label %242

; <label>:242                                     ; preds = %236, %187
  %243 = phi i1 [ false, %187 ], [ %241, %236 ]
  %244 = select i1 %243, i32 1, i32 0
  store i32 %244, i32* %1, align 4
  br label %433

; <label>:245                                     ; preds = %166
  br label %246

; <label>:246                                     ; preds = %420, %245
  %247 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %248 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %247, i32 0, i32 1
  %249 = load i32, i32* %248, align 8
  %250 = zext i32 %249 to i64
  store i64 %250, i64* %in_bytes, align 8
  %251 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %252 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %251, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = sub i32 32768, %253
  %255 = zext i32 %254 to i64
  store i64 %255, i64* %out_bytes, align 8
  %256 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %257 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %256, i32 0, i32 0
  %258 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %259 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %258, i32 0, i32 0
  %260 = load i8*, i8** %259, align 8
  %261 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %262 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %261, i32 0, i32 6
  %263 = getelementptr inbounds [32768 x i8], [32768 x i8]* %262, i32 0, i32 0
  %264 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %265 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %264, i32 0, i32 6
  %266 = getelementptr inbounds [32768 x i8], [32768 x i8]* %265, i32 0, i32 0
  %267 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %268 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %267, i32 0, i32 1
  %269 = load i32, i32* %268, align 8
  %270 = zext i32 %269 to i64
  %271 = getelementptr inbounds i8, i8* %266, i64 %270
  %272 = load i32, i32* %decomp_flags, align 4
  %273 = call i32 @tinfl_decompress(%struct.tinfl_decompressor_tag* %257, i8* %260, i64* %in_bytes, i8* %263, i8* %271, i64* %out_bytes, i32 %272)
  store i32 %273, i32* %status, align 4
  %274 = load i32, i32* %status, align 4
  %275 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %276 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %275, i32 0, i32 7
  store i32 %274, i32* %276, align 4
  %277 = load i64, i64* %in_bytes, align 8
  %278 = trunc i64 %277 to i32
  %279 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %280 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %279, i32 0, i32 0
  %281 = load i8*, i8** %280, align 8
  %282 = zext i32 %278 to i64
  %283 = getelementptr inbounds i8, i8* %281, i64 %282
  store i8* %283, i8** %280, align 8
  %284 = load i64, i64* %in_bytes, align 8
  %285 = trunc i64 %284 to i32
  %286 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %287 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %286, i32 0, i32 1
  %288 = load i32, i32* %287, align 8
  %289 = sub i32 %288, %285
  store i32 %289, i32* %287, align 8
  %290 = load i64, i64* %in_bytes, align 8
  %291 = trunc i64 %290 to i32
  %292 = zext i32 %291 to i64
  %293 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %294 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %293, i32 0, i32 2
  %295 = load i64, i64* %294, align 8
  %296 = add i64 %295, %292
  store i64 %296, i64* %294, align 8
  %297 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %298 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %297, i32 0, i32 0
  %299 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %298, i32 0, i32 7
  %300 = load i32, i32* %299, align 4
  %301 = zext i32 %300 to i64
  %302 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %303 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %302, i32 0, i32 12
  store i64 %301, i64* %303, align 8
  %304 = load i64, i64* %out_bytes, align 8
  %305 = trunc i64 %304 to i32
  %306 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %307 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %306, i32 0, i32 2
  store i32 %305, i32* %307, align 4
  %308 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %309 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %308, i32 0, i32 2
  %310 = load i32, i32* %309, align 4
  %311 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %312 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %311, i32 0, i32 4
  %313 = load i32, i32* %312, align 8
  %314 = icmp ult i32 %310, %313
  br i1 %314, label %315, label %319

; <label>:315                                     ; preds = %246
  %316 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %317 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %316, i32 0, i32 2
  %318 = load i32, i32* %317, align 4
  br label %323

; <label>:319                                     ; preds = %246
  %320 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %321 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %320, i32 0, i32 4
  %322 = load i32, i32* %321, align 8
  br label %323

; <label>:323                                     ; preds = %319, %315
  %324 = phi i32 [ %318, %315 ], [ %322, %319 ]
  store i32 %324, i32* %n, align 4
  %325 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %326 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %325, i32 0, i32 3
  %327 = load i8*, i8** %326, align 8
  %328 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %329 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %328, i32 0, i32 6
  %330 = getelementptr inbounds [32768 x i8], [32768 x i8]* %329, i32 0, i32 0
  %331 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %332 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %331, i32 0, i32 1
  %333 = load i32, i32* %332, align 8
  %334 = zext i32 %333 to i64
  %335 = getelementptr inbounds i8, i8* %330, i64 %334
  %336 = load i32, i32* %n, align 4
  %337 = zext i32 %336 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %327, i8* %335, i64 %337, i32 1, i1 false)
  %338 = load i32, i32* %n, align 4
  %339 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %340 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %339, i32 0, i32 3
  %341 = load i8*, i8** %340, align 8
  %342 = zext i32 %338 to i64
  %343 = getelementptr inbounds i8, i8* %341, i64 %342
  store i8* %343, i8** %340, align 8
  %344 = load i32, i32* %n, align 4
  %345 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %346 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %345, i32 0, i32 4
  %347 = load i32, i32* %346, align 8
  %348 = sub i32 %347, %344
  store i32 %348, i32* %346, align 8
  %349 = load i32, i32* %n, align 4
  %350 = zext i32 %349 to i64
  %351 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %352 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %351, i32 0, i32 5
  %353 = load i64, i64* %352, align 8
  %354 = add i64 %353, %350
  store i64 %354, i64* %352, align 8
  %355 = load i32, i32* %n, align 4
  %356 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %357 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %356, i32 0, i32 2
  %358 = load i32, i32* %357, align 4
  %359 = sub i32 %358, %355
  store i32 %359, i32* %357, align 4
  %360 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %361 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %360, i32 0, i32 1
  %362 = load i32, i32* %361, align 8
  %363 = load i32, i32* %n, align 4
  %364 = add i32 %362, %363
  %365 = and i32 %364, 32767
  %366 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %367 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %366, i32 0, i32 1
  store i32 %365, i32* %367, align 8
  %368 = load i32, i32* %status, align 4
  %369 = icmp slt i32 %368, 0
  br i1 %369, label %370, label %371

; <label>:370                                     ; preds = %323
  store i32 -3, i32* %1, align 4
  br label %433

; <label>:371                                     ; preds = %323
  %372 = load i32, i32* %status, align 4
  %373 = icmp eq i32 %372, 1
  br i1 %373, label %374, label %378

; <label>:374                                     ; preds = %371
  %375 = load i64, i64* %orig_avail_in, align 8
  %376 = icmp ne i64 %375, 0
  br i1 %376, label %378, label %377

; <label>:377                                     ; preds = %374
  store i32 -5, i32* %1, align 4
  br label %433

; <label>:378                                     ; preds = %374, %371
  %379 = load i32, i32* %3, align 4
  %380 = icmp eq i32 %379, 4
  br i1 %380, label %381, label %398

; <label>:381                                     ; preds = %378
  %382 = load i32, i32* %status, align 4
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %384, label %390

; <label>:384                                     ; preds = %381
  %385 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %386 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %385, i32 0, i32 2
  %387 = load i32, i32* %386, align 4
  %388 = icmp ne i32 %387, 0
  %389 = select i1 %388, i32 -5, i32 1
  store i32 %389, i32* %1, align 4
  br label %433

; <label>:390                                     ; preds = %381
  %391 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %392 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %391, i32 0, i32 4
  %393 = load i32, i32* %392, align 8
  %394 = icmp ne i32 %393, 0
  br i1 %394, label %396, label %395

; <label>:395                                     ; preds = %390
  store i32 -5, i32* %1, align 4
  br label %433

; <label>:396                                     ; preds = %390
  br label %397

; <label>:397                                     ; preds = %396
  br label %418

; <label>:398                                     ; preds = %378
  %399 = load i32, i32* %status, align 4
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %416, label %401

; <label>:401                                     ; preds = %398
  %402 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %403 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %402, i32 0, i32 1
  %404 = load i32, i32* %403, align 8
  %405 = icmp ne i32 %404, 0
  br i1 %405, label %406, label %416

; <label>:406                                     ; preds = %401
  %407 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %408 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %407, i32 0, i32 4
  %409 = load i32, i32* %408, align 8
  %410 = icmp ne i32 %409, 0
  br i1 %410, label %411, label %416

; <label>:411                                     ; preds = %406
  %412 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %413 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %412, i32 0, i32 2
  %414 = load i32, i32* %413, align 4
  %415 = icmp ne i32 %414, 0
  br i1 %415, label %416, label %417

; <label>:416                                     ; preds = %411, %406, %401, %398
  br label %421

; <label>:417                                     ; preds = %411
  br label %418

; <label>:418                                     ; preds = %417, %397
  br label %419

; <label>:419                                     ; preds = %418
  br label %420

; <label>:420                                     ; preds = %419
  br label %246

; <label>:421                                     ; preds = %416
  %422 = load i32, i32* %status, align 4
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %424, label %430

; <label>:424                                     ; preds = %421
  %425 = load %struct.inflate_state*, %struct.inflate_state** %pState, align 8
  %426 = getelementptr inbounds %struct.inflate_state, %struct.inflate_state* %425, i32 0, i32 2
  %427 = load i32, i32* %426, align 4
  %428 = icmp ne i32 %427, 0
  %429 = xor i1 %428, true
  br label %430

; <label>:430                                     ; preds = %424, %421
  %431 = phi i1 [ false, %421 ], [ %429, %424 ]
  %432 = select i1 %431, i32 1, i32 0
  store i32 %432, i32* %1, align 4
  br label %433

; <label>:433                                     ; preds = %430, %395, %384, %377, %370, %242, %159, %155, %151, %61, %52, %25, %11
  %434 = load i32, i32* %1, align 4
  ret i32 %434
}

; Function Attrs: nounwind uwtable
define i32 @tinfl_decompress(%struct.tinfl_decompressor_tag* %r, i8* %pIn_buf_next, i64* %pIn_buf_size, i8* %pOut_buf_start, i8* %pOut_buf_next, i64* %pOut_buf_size, i32 %decomp_flags) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.tinfl_decompressor_tag*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i32, align 4
  %status = alloca i32, align 4
  %num_bits = alloca i32, align 4
  %dist = alloca i32, align 4
  %counter = alloca i32, align 4
  %num_extra = alloca i32, align 4
  %bit_buf = alloca i64, align 8
  %pIn_buf_cur = alloca i8*, align 8
  %pIn_buf_end = alloca i8*, align 8
  %pOut_buf_cur = alloca i8*, align 8
  %pOut_buf_end = alloca i8*, align 8
  %out_buf_size_mask = alloca i64, align 8
  %dist_from_out_buf_start = alloca i64, align 8
  %c = alloca i32, align 4
  %c1 = alloca i32, align 4
  %c2 = alloca i32, align 4
  %c3 = alloca i32, align 4
  %n = alloca i64, align 8
  %p = alloca i8*, align 8
  %i = alloca i32, align 4
  %c4 = alloca i32, align 4
  %s = alloca i32, align 4
  %c5 = alloca i32, align 4
  %tree_next = alloca i32, align 4
  %tree_cur = alloca i32, align 4
  %pTable = alloca %struct.tinfl_huff_table*, align 8
  %i6 = alloca i32, align 4
  %j = alloca i32, align 4
  %used_syms = alloca i32, align 4
  %total = alloca i32, align 4
  %sym_index = alloca i32, align 4
  %next_code = alloca [17 x i32], align 16
  %total_syms = alloca [16 x i32], align 16
  %rev_code = alloca i32, align 4
  %l = alloca i32, align 4
  %cur_code = alloca i32, align 4
  %code_size = alloca i32, align 4
  %k = alloca i16, align 2
  %s7 = alloca i32, align 4
  %temp = alloca i32, align 4
  %code_len = alloca i32, align 4
  %c8 = alloca i32, align 4
  %c9 = alloca i32, align 4
  %pSrc = alloca i8*, align 8
  %temp10 = alloca i32, align 4
  %code_len11 = alloca i32, align 4
  %c12 = alloca i32, align 4
  %sym2 = alloca i32, align 4
  %code_len13 = alloca i32, align 4
  %extra_bits = alloca i32, align 4
  %c14 = alloca i32, align 4
  %temp15 = alloca i32, align 4
  %code_len16 = alloca i32, align 4
  %c17 = alloca i32, align 4
  %extra_bits18 = alloca i32, align 4
  %c19 = alloca i32, align 4
  %pSrc_end = alloca i8*, align 8
  %c20 = alloca i32, align 4
  %s21 = alloca i32, align 4
  %c22 = alloca i32, align 4
  %ptr = alloca i8*, align 8
  %buf_len = alloca i64, align 8
  %i23 = alloca i32, align 4
  %s1 = alloca i32, align 4
  %s2 = alloca i32, align 4
  %block_len = alloca i64, align 8
  store %struct.tinfl_decompressor_tag* %r, %struct.tinfl_decompressor_tag** %2, align 8
  store i8* %pIn_buf_next, i8** %3, align 8
  store i64* %pIn_buf_size, i64** %4, align 8
  store i8* %pOut_buf_start, i8** %5, align 8
  store i8* %pOut_buf_next, i8** %6, align 8
  store i64* %pOut_buf_size, i64** %7, align 8
  store i32 %decomp_flags, i32* %8, align 4
  store i32 -1, i32* %status, align 4
  %9 = load i8*, i8** %3, align 8
  store i8* %9, i8** %pIn_buf_cur, align 8
  %10 = load i8*, i8** %3, align 8
  %11 = load i64*, i64** %4, align 8
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 %12
  store i8* %13, i8** %pIn_buf_end, align 8
  %14 = load i8*, i8** %6, align 8
  store i8* %14, i8** %pOut_buf_cur, align 8
  %15 = load i8*, i8** %6, align 8
  %16 = load i64*, i64** %7, align 8
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %15, i64 %17
  store i8* %18, i8** %pOut_buf_end, align 8
  %19 = load i32, i32* %8, align 4
  %20 = and i32 %19, 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %23

; <label>:22                                      ; preds = %0
  br label %33

; <label>:23                                      ; preds = %0
  %24 = load i8*, i8** %6, align 8
  %25 = load i8*, i8** %5, align 8
  %26 = ptrtoint i8* %24 to i64
  %27 = ptrtoint i8* %25 to i64
  %28 = sub i64 %26, %27
  %29 = load i64*, i64** %7, align 8
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %28, %30
  %32 = sub i64 %31, 1
  br label %33

; <label>:33                                      ; preds = %23, %22
  %34 = phi i64 [ -1, %22 ], [ %32, %23 ]
  store i64 %34, i64* %out_buf_size_mask, align 8
  %35 = load i64, i64* %out_buf_size_mask, align 8
  %36 = add i64 %35, 1
  %37 = load i64, i64* %out_buf_size_mask, align 8
  %38 = and i64 %36, %37
  %39 = icmp ne i64 %38, 0
  br i1 %39, label %44, label %40

; <label>:40                                      ; preds = %33
  %41 = load i8*, i8** %6, align 8
  %42 = load i8*, i8** %5, align 8
  %43 = icmp ult i8* %41, %42
  br i1 %43, label %44, label %47

; <label>:44                                      ; preds = %40, %33
  %45 = load i64*, i64** %7, align 8
  store i64 0, i64* %45, align 8
  %46 = load i64*, i64** %4, align 8
  store i64 0, i64* %46, align 8
  store i32 -3, i32* %1, align 4
  br label %2988

; <label>:47                                      ; preds = %40
  %48 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %49 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %48, i32 0, i32 1
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %num_bits, align 4
  %51 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %52 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %51, i32 0, i32 12
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %bit_buf, align 8
  %54 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %55 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %54, i32 0, i32 8
  %56 = load i32, i32* %55, align 8
  store i32 %56, i32* %dist, align 4
  %57 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %58 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %57, i32 0, i32 9
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %counter, align 4
  %60 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %61 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %60, i32 0, i32 10
  %62 = load i32, i32* %61, align 8
  store i32 %62, i32* %num_extra, align 4
  %63 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %64 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %63, i32 0, i32 13
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %dist_from_out_buf_start, align 8
  %66 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %67 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %66, i32 0, i32 0
  %68 = load i32, i32* %67, align 8
  switch i32 %68, label %2796 [
    i32 0, label %69
    i32 1, label %95
    i32 2, label %135
    i32 36, label %223
    i32 3, label %247
    i32 5, label %323
    i32 6, label %395
    i32 7, label %457
    i32 39, label %528
    i32 51, label %559
    i32 52, label %610
    i32 9, label %632
    i32 38, label %647
    i32 40, label %655
    i32 10, label %744
    i32 11, label %837
    i32 14, label %955
    i32 35, label %1102
    i32 16, label %1367
    i32 17, label %1497
    i32 18, label %1526
    i32 21, label %1629
    i32 23, label %1774
    i32 24, label %1893
    i32 25, label %2069
    i32 26, label %2210
    i32 27, label %2347
    i32 37, label %2421
    i32 53, label %2461
    i32 32, label %2624
    i32 41, label %2696
    i32 42, label %2753
    i32 34, label %2793
  ]

; <label>:69                                      ; preds = %47
  %70 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %71 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %70, i32 0, i32 3
  store i32 0, i32* %71, align 4
  %72 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %73 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %72, i32 0, i32 2
  store i32 0, i32* %73, align 8
  store i32 0, i32* %num_extra, align 4
  store i32 0, i32* %counter, align 4
  store i32 0, i32* %dist, align 4
  store i32 0, i32* %num_bits, align 4
  store i64 0, i64* %bit_buf, align 8
  %74 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %75 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %74, i32 0, i32 7
  store i32 1, i32* %75, align 4
  %76 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %77 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %76, i32 0, i32 4
  store i32 1, i32* %77, align 8
  %78 = load i32, i32* %8, align 4
  %79 = and i32 %78, 1
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %81, label %227

; <label>:81                                      ; preds = %69
  br label %82

; <label>:82                                      ; preds = %81
  %83 = load i8*, i8** %pIn_buf_cur, align 8
  %84 = load i8*, i8** %pIn_buf_end, align 8
  %85 = icmp uge i8* %83, %84
  br i1 %85, label %86, label %113

; <label>:86                                      ; preds = %82
  br label %87

; <label>:87                                      ; preds = %111, %86
  %88 = load i32, i32* %8, align 4
  %89 = and i32 %88, 2
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %91, label %108

; <label>:91                                      ; preds = %87
  br label %92

; <label>:92                                      ; preds = %91
  store i32 1, i32* %status, align 4
  %93 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %94 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %93, i32 0, i32 0
  store i32 1, i32* %94, align 8
  br label %2797

; <label>:95                                      ; preds = %47
  br label %96

; <label>:96                                      ; preds = %95
  %97 = load i8*, i8** %pIn_buf_cur, align 8
  %98 = load i8*, i8** %pIn_buf_end, align 8
  %99 = icmp ult i8* %97, %98
  br i1 %99, label %100, label %107

; <label>:100                                     ; preds = %96
  %101 = load i8*, i8** %pIn_buf_cur, align 8
  %102 = getelementptr inbounds i8, i8* %101, i32 1
  store i8* %102, i8** %pIn_buf_cur, align 8
  %103 = load i8, i8* %101, align 1
  %104 = zext i8 %103 to i32
  %105 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %106 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %105, i32 0, i32 2
  store i32 %104, i32* %106, align 8
  br label %112

; <label>:107                                     ; preds = %96
  br label %111

; <label>:108                                     ; preds = %87
  %109 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %110 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %109, i32 0, i32 2
  store i32 0, i32* %110, align 8
  br label %112

; <label>:111                                     ; preds = %107
  br label %87

; <label>:112                                     ; preds = %108, %100
  br label %120

; <label>:113                                     ; preds = %82
  %114 = load i8*, i8** %pIn_buf_cur, align 8
  %115 = getelementptr inbounds i8, i8* %114, i32 1
  store i8* %115, i8** %pIn_buf_cur, align 8
  %116 = load i8, i8* %114, align 1
  %117 = zext i8 %116 to i32
  %118 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %119 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %118, i32 0, i32 2
  store i32 %117, i32* %119, align 8
  br label %120

; <label>:120                                     ; preds = %113, %112
  br label %121

; <label>:121                                     ; preds = %120
  br label %122

; <label>:122                                     ; preds = %121
  %123 = load i8*, i8** %pIn_buf_cur, align 8
  %124 = load i8*, i8** %pIn_buf_end, align 8
  %125 = icmp uge i8* %123, %124
  br i1 %125, label %126, label %153

; <label>:126                                     ; preds = %122
  br label %127

; <label>:127                                     ; preds = %151, %126
  %128 = load i32, i32* %8, align 4
  %129 = and i32 %128, 2
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %131, label %148

; <label>:131                                     ; preds = %127
  br label %132

; <label>:132                                     ; preds = %131
  store i32 1, i32* %status, align 4
  %133 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %134 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %133, i32 0, i32 0
  store i32 2, i32* %134, align 8
  br label %2797

; <label>:135                                     ; preds = %47
  br label %136

; <label>:136                                     ; preds = %135
  %137 = load i8*, i8** %pIn_buf_cur, align 8
  %138 = load i8*, i8** %pIn_buf_end, align 8
  %139 = icmp ult i8* %137, %138
  br i1 %139, label %140, label %147

; <label>:140                                     ; preds = %136
  %141 = load i8*, i8** %pIn_buf_cur, align 8
  %142 = getelementptr inbounds i8, i8* %141, i32 1
  store i8* %142, i8** %pIn_buf_cur, align 8
  %143 = load i8, i8* %141, align 1
  %144 = zext i8 %143 to i32
  %145 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %146 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %145, i32 0, i32 3
  store i32 %144, i32* %146, align 4
  br label %152

; <label>:147                                     ; preds = %136
  br label %151

; <label>:148                                     ; preds = %127
  %149 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %150 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %149, i32 0, i32 3
  store i32 0, i32* %150, align 4
  br label %152

; <label>:151                                     ; preds = %147
  br label %127

; <label>:152                                     ; preds = %148, %140
  br label %160

; <label>:153                                     ; preds = %122
  %154 = load i8*, i8** %pIn_buf_cur, align 8
  %155 = getelementptr inbounds i8, i8* %154, i32 1
  store i8* %155, i8** %pIn_buf_cur, align 8
  %156 = load i8, i8* %154, align 1
  %157 = zext i8 %156 to i32
  %158 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %159 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %158, i32 0, i32 3
  store i32 %157, i32* %159, align 4
  br label %160

; <label>:160                                     ; preds = %153, %152
  br label %161

; <label>:161                                     ; preds = %160
  %162 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %163 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %162, i32 0, i32 2
  %164 = load i32, i32* %163, align 8
  %165 = mul i32 %164, 256
  %166 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %167 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %166, i32 0, i32 3
  %168 = load i32, i32* %167, align 4
  %169 = add i32 %165, %168
  %170 = urem i32 %169, 31
  %171 = icmp ne i32 %170, 0
  br i1 %171, label %184, label %172

; <label>:172                                     ; preds = %161
  %173 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %174 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %173, i32 0, i32 3
  %175 = load i32, i32* %174, align 4
  %176 = and i32 %175, 32
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %184, label %178

; <label>:178                                     ; preds = %172
  %179 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %180 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %179, i32 0, i32 2
  %181 = load i32, i32* %180, align 8
  %182 = and i32 %181, 15
  %183 = icmp ne i32 %182, 8
  br label %184

; <label>:184                                     ; preds = %178, %172, %161
  %185 = phi i1 [ true, %172 ], [ true, %161 ], [ %183, %178 ]
  %186 = zext i1 %185 to i32
  store i32 %186, i32* %counter, align 4
  %187 = load i32, i32* %8, align 4
  %188 = and i32 %187, 4
  %189 = icmp ne i32 %188, 0
  br i1 %189, label %214, label %190

; <label>:190                                     ; preds = %184
  %191 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %192 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %191, i32 0, i32 2
  %193 = load i32, i32* %192, align 8
  %194 = lshr i32 %193, 4
  %195 = add i32 8, %194
  %196 = shl i32 1, %195
  %197 = icmp ugt i32 %196, 32768
  br i1 %197, label %209, label %198

; <label>:198                                     ; preds = %190
  %199 = load i64, i64* %out_buf_size_mask, align 8
  %200 = add i64 %199, 1
  %201 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %202 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %201, i32 0, i32 2
  %203 = load i32, i32* %202, align 8
  %204 = lshr i32 %203, 4
  %205 = add i32 8, %204
  %206 = shl i32 1, %205
  %207 = zext i32 %206 to i64
  %208 = icmp ult i64 %200, %207
  br label %209

; <label>:209                                     ; preds = %198, %190
  %210 = phi i1 [ true, %190 ], [ %208, %198 ]
  %211 = zext i1 %210 to i32
  %212 = load i32, i32* %counter, align 4
  %213 = or i32 %212, %211
  store i32 %213, i32* %counter, align 4
  br label %214

; <label>:214                                     ; preds = %209, %184
  %215 = load i32, i32* %counter, align 4
  %216 = icmp ne i32 %215, 0
  br i1 %216, label %217, label %226

; <label>:217                                     ; preds = %214
  br label %218

; <label>:218                                     ; preds = %217
  br label %219

; <label>:219                                     ; preds = %224, %218
  br label %220

; <label>:220                                     ; preds = %219
  store i32 -1, i32* %status, align 4
  %221 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %222 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %221, i32 0, i32 0
  store i32 36, i32* %222, align 8
  br label %2797

; <label>:223                                     ; preds = %47
  br label %224

; <label>:224                                     ; preds = %223
  br label %219
                                                  ; No predecessors!
  br label %226

; <label>:226                                     ; preds = %225, %214
  br label %227

; <label>:227                                     ; preds = %226, %69
  br label %228

; <label>:228                                     ; preds = %2592, %227
  br label %229

; <label>:229                                     ; preds = %228
  %230 = load i32, i32* %num_bits, align 4
  %231 = icmp ult i32 %230, 3
  br i1 %231, label %232, label %281

; <label>:232                                     ; preds = %229
  br label %233

; <label>:233                                     ; preds = %277, %232
  br label %234

; <label>:234                                     ; preds = %233
  %235 = load i8*, i8** %pIn_buf_cur, align 8
  %236 = load i8*, i8** %pIn_buf_end, align 8
  %237 = icmp uge i8* %235, %236
  br i1 %237, label %238, label %261

; <label>:238                                     ; preds = %234
  br label %239

; <label>:239                                     ; preds = %259, %238
  %240 = load i32, i32* %8, align 4
  %241 = and i32 %240, 2
  %242 = icmp ne i32 %241, 0
  br i1 %242, label %243, label %258

; <label>:243                                     ; preds = %239
  br label %244

; <label>:244                                     ; preds = %243
  store i32 1, i32* %status, align 4
  %245 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %246 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %245, i32 0, i32 0
  store i32 3, i32* %246, align 8
  br label %2797

; <label>:247                                     ; preds = %47
  br label %248

; <label>:248                                     ; preds = %247
  %249 = load i8*, i8** %pIn_buf_cur, align 8
  %250 = load i8*, i8** %pIn_buf_end, align 8
  %251 = icmp ult i8* %249, %250
  br i1 %251, label %252, label %257

; <label>:252                                     ; preds = %248
  %253 = load i8*, i8** %pIn_buf_cur, align 8
  %254 = getelementptr inbounds i8, i8* %253, i32 1
  store i8* %254, i8** %pIn_buf_cur, align 8
  %255 = load i8, i8* %253, align 1
  %256 = zext i8 %255 to i32
  store i32 %256, i32* %c, align 4
  br label %260

; <label>:257                                     ; preds = %248
  br label %259

; <label>:258                                     ; preds = %239
  store i32 0, i32* %c, align 4
  br label %260

; <label>:259                                     ; preds = %257
  br label %239

; <label>:260                                     ; preds = %258, %252
  br label %266

; <label>:261                                     ; preds = %234
  %262 = load i8*, i8** %pIn_buf_cur, align 8
  %263 = getelementptr inbounds i8, i8* %262, i32 1
  store i8* %263, i8** %pIn_buf_cur, align 8
  %264 = load i8, i8* %262, align 1
  %265 = zext i8 %264 to i32
  store i32 %265, i32* %c, align 4
  br label %266

; <label>:266                                     ; preds = %261, %260
  br label %267

; <label>:267                                     ; preds = %266
  %268 = load i32, i32* %c, align 4
  %269 = zext i32 %268 to i64
  %270 = load i32, i32* %num_bits, align 4
  %271 = zext i32 %270 to i64
  %272 = shl i64 %269, %271
  %273 = load i64, i64* %bit_buf, align 8
  %274 = or i64 %273, %272
  store i64 %274, i64* %bit_buf, align 8
  %275 = load i32, i32* %num_bits, align 4
  %276 = add i32 %275, 8
  store i32 %276, i32* %num_bits, align 4
  br label %277

; <label>:277                                     ; preds = %267
  %278 = load i32, i32* %num_bits, align 4
  %279 = icmp ult i32 %278, 3
  br i1 %279, label %233, label %280

; <label>:280                                     ; preds = %277
  br label %281

; <label>:281                                     ; preds = %280, %229
  %282 = load i64, i64* %bit_buf, align 8
  %283 = and i64 %282, 7
  %284 = trunc i64 %283 to i32
  %285 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %286 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %285, i32 0, i32 5
  store i32 %284, i32* %286, align 4
  %287 = load i64, i64* %bit_buf, align 8
  %288 = lshr i64 %287, 3
  store i64 %288, i64* %bit_buf, align 8
  %289 = load i32, i32* %num_bits, align 4
  %290 = sub i32 %289, 3
  store i32 %290, i32* %num_bits, align 4
  br label %291

; <label>:291                                     ; preds = %281
  %292 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %293 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %292, i32 0, i32 5
  %294 = load i32, i32* %293, align 4
  %295 = lshr i32 %294, 1
  %296 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %297 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %296, i32 0, i32 6
  store i32 %295, i32* %297, align 8
  %298 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %299 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %298, i32 0, i32 6
  %300 = load i32, i32* %299, align 8
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %733

; <label>:302                                     ; preds = %291
  br label %303

; <label>:303                                     ; preds = %302
  %304 = load i32, i32* %num_bits, align 4
  %305 = load i32, i32* %num_bits, align 4
  %306 = and i32 %305, 7
  %307 = icmp ult i32 %304, %306
  br i1 %307, label %308, label %359

; <label>:308                                     ; preds = %303
  br label %309

; <label>:309                                     ; preds = %353, %308
  br label %310

; <label>:310                                     ; preds = %309
  %311 = load i8*, i8** %pIn_buf_cur, align 8
  %312 = load i8*, i8** %pIn_buf_end, align 8
  %313 = icmp uge i8* %311, %312
  br i1 %313, label %314, label %337

; <label>:314                                     ; preds = %310
  br label %315

; <label>:315                                     ; preds = %335, %314
  %316 = load i32, i32* %8, align 4
  %317 = and i32 %316, 2
  %318 = icmp ne i32 %317, 0
  br i1 %318, label %319, label %334

; <label>:319                                     ; preds = %315
  br label %320

; <label>:320                                     ; preds = %319
  store i32 1, i32* %status, align 4
  %321 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %322 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %321, i32 0, i32 0
  store i32 5, i32* %322, align 8
  br label %2797

; <label>:323                                     ; preds = %47
  br label %324

; <label>:324                                     ; preds = %323
  %325 = load i8*, i8** %pIn_buf_cur, align 8
  %326 = load i8*, i8** %pIn_buf_end, align 8
  %327 = icmp ult i8* %325, %326
  br i1 %327, label %328, label %333

; <label>:328                                     ; preds = %324
  %329 = load i8*, i8** %pIn_buf_cur, align 8
  %330 = getelementptr inbounds i8, i8* %329, i32 1
  store i8* %330, i8** %pIn_buf_cur, align 8
  %331 = load i8, i8* %329, align 1
  %332 = zext i8 %331 to i32
  store i32 %332, i32* %c1, align 4
  br label %336

; <label>:333                                     ; preds = %324
  br label %335

; <label>:334                                     ; preds = %315
  store i32 0, i32* %c1, align 4
  br label %336

; <label>:335                                     ; preds = %333
  br label %315

; <label>:336                                     ; preds = %334, %328
  br label %342

; <label>:337                                     ; preds = %310
  %338 = load i8*, i8** %pIn_buf_cur, align 8
  %339 = getelementptr inbounds i8, i8* %338, i32 1
  store i8* %339, i8** %pIn_buf_cur, align 8
  %340 = load i8, i8* %338, align 1
  %341 = zext i8 %340 to i32
  store i32 %341, i32* %c1, align 4
  br label %342

; <label>:342                                     ; preds = %337, %336
  br label %343

; <label>:343                                     ; preds = %342
  %344 = load i32, i32* %c1, align 4
  %345 = zext i32 %344 to i64
  %346 = load i32, i32* %num_bits, align 4
  %347 = zext i32 %346 to i64
  %348 = shl i64 %345, %347
  %349 = load i64, i64* %bit_buf, align 8
  %350 = or i64 %349, %348
  store i64 %350, i64* %bit_buf, align 8
  %351 = load i32, i32* %num_bits, align 4
  %352 = add i32 %351, 8
  store i32 %352, i32* %num_bits, align 4
  br label %353

; <label>:353                                     ; preds = %343
  %354 = load i32, i32* %num_bits, align 4
  %355 = load i32, i32* %num_bits, align 4
  %356 = and i32 %355, 7
  %357 = icmp ult i32 %354, %356
  br i1 %357, label %309, label %358

; <label>:358                                     ; preds = %353
  br label %359

; <label>:359                                     ; preds = %358, %303
  %360 = load i32, i32* %num_bits, align 4
  %361 = and i32 %360, 7
  %362 = load i64, i64* %bit_buf, align 8
  %363 = zext i32 %361 to i64
  %364 = lshr i64 %362, %363
  store i64 %364, i64* %bit_buf, align 8
  %365 = load i32, i32* %num_bits, align 4
  %366 = and i32 %365, 7
  %367 = load i32, i32* %num_bits, align 4
  %368 = sub i32 %367, %366
  store i32 %368, i32* %num_bits, align 4
  br label %369

; <label>:369                                     ; preds = %359
  store i32 0, i32* %counter, align 4
  br label %370

; <label>:370                                     ; preds = %492, %369
  %371 = load i32, i32* %counter, align 4
  %372 = icmp ult i32 %371, 4
  br i1 %372, label %373, label %495

; <label>:373                                     ; preds = %370
  %374 = load i32, i32* %num_bits, align 4
  %375 = icmp ne i32 %374, 0
  br i1 %375, label %376, label %443

; <label>:376                                     ; preds = %373
  br label %377

; <label>:377                                     ; preds = %376
  %378 = load i32, i32* %num_bits, align 4
  %379 = icmp ult i32 %378, 8
  br i1 %379, label %380, label %429

; <label>:380                                     ; preds = %377
  br label %381

; <label>:381                                     ; preds = %425, %380
  br label %382

; <label>:382                                     ; preds = %381
  %383 = load i8*, i8** %pIn_buf_cur, align 8
  %384 = load i8*, i8** %pIn_buf_end, align 8
  %385 = icmp uge i8* %383, %384
  br i1 %385, label %386, label %409

; <label>:386                                     ; preds = %382
  br label %387

; <label>:387                                     ; preds = %407, %386
  %388 = load i32, i32* %8, align 4
  %389 = and i32 %388, 2
  %390 = icmp ne i32 %389, 0
  br i1 %390, label %391, label %406

; <label>:391                                     ; preds = %387
  br label %392

; <label>:392                                     ; preds = %391
  store i32 1, i32* %status, align 4
  %393 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %394 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %393, i32 0, i32 0
  store i32 6, i32* %394, align 8
  br label %2797

; <label>:395                                     ; preds = %47
  br label %396

; <label>:396                                     ; preds = %395
  %397 = load i8*, i8** %pIn_buf_cur, align 8
  %398 = load i8*, i8** %pIn_buf_end, align 8
  %399 = icmp ult i8* %397, %398
  br i1 %399, label %400, label %405

; <label>:400                                     ; preds = %396
  %401 = load i8*, i8** %pIn_buf_cur, align 8
  %402 = getelementptr inbounds i8, i8* %401, i32 1
  store i8* %402, i8** %pIn_buf_cur, align 8
  %403 = load i8, i8* %401, align 1
  %404 = zext i8 %403 to i32
  store i32 %404, i32* %c2, align 4
  br label %408

; <label>:405                                     ; preds = %396
  br label %407

; <label>:406                                     ; preds = %387
  store i32 0, i32* %c2, align 4
  br label %408

; <label>:407                                     ; preds = %405
  br label %387

; <label>:408                                     ; preds = %406, %400
  br label %414

; <label>:409                                     ; preds = %382
  %410 = load i8*, i8** %pIn_buf_cur, align 8
  %411 = getelementptr inbounds i8, i8* %410, i32 1
  store i8* %411, i8** %pIn_buf_cur, align 8
  %412 = load i8, i8* %410, align 1
  %413 = zext i8 %412 to i32
  store i32 %413, i32* %c2, align 4
  br label %414

; <label>:414                                     ; preds = %409, %408
  br label %415

; <label>:415                                     ; preds = %414
  %416 = load i32, i32* %c2, align 4
  %417 = zext i32 %416 to i64
  %418 = load i32, i32* %num_bits, align 4
  %419 = zext i32 %418 to i64
  %420 = shl i64 %417, %419
  %421 = load i64, i64* %bit_buf, align 8
  %422 = or i64 %421, %420
  store i64 %422, i64* %bit_buf, align 8
  %423 = load i32, i32* %num_bits, align 4
  %424 = add i32 %423, 8
  store i32 %424, i32* %num_bits, align 4
  br label %425

; <label>:425                                     ; preds = %415
  %426 = load i32, i32* %num_bits, align 4
  %427 = icmp ult i32 %426, 8
  br i1 %427, label %381, label %428

; <label>:428                                     ; preds = %425
  br label %429

; <label>:429                                     ; preds = %428, %377
  %430 = load i64, i64* %bit_buf, align 8
  %431 = and i64 %430, 255
  %432 = trunc i64 %431 to i8
  %433 = load i32, i32* %counter, align 4
  %434 = zext i32 %433 to i64
  %435 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %436 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %435, i32 0, i32 15
  %437 = getelementptr inbounds [4 x i8], [4 x i8]* %436, i64 0, i64 %434
  store i8 %432, i8* %437, align 1
  %438 = load i64, i64* %bit_buf, align 8
  %439 = lshr i64 %438, 8
  store i64 %439, i64* %bit_buf, align 8
  %440 = load i32, i32* %num_bits, align 4
  %441 = sub i32 %440, 8
  store i32 %441, i32* %num_bits, align 4
  br label %442

; <label>:442                                     ; preds = %429
  br label %491

; <label>:443                                     ; preds = %373
  br label %444

; <label>:444                                     ; preds = %443
  %445 = load i8*, i8** %pIn_buf_cur, align 8
  %446 = load i8*, i8** %pIn_buf_end, align 8
  %447 = icmp uge i8* %445, %446
  br i1 %447, label %448, label %480

; <label>:448                                     ; preds = %444
  br label %449

; <label>:449                                     ; preds = %478, %448
  %450 = load i32, i32* %8, align 4
  %451 = and i32 %450, 2
  %452 = icmp ne i32 %451, 0
  br i1 %452, label %453, label %472

; <label>:453                                     ; preds = %449
  br label %454

; <label>:454                                     ; preds = %453
  store i32 1, i32* %status, align 4
  %455 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %456 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %455, i32 0, i32 0
  store i32 7, i32* %456, align 8
  br label %2797

; <label>:457                                     ; preds = %47
  br label %458

; <label>:458                                     ; preds = %457
  %459 = load i8*, i8** %pIn_buf_cur, align 8
  %460 = load i8*, i8** %pIn_buf_end, align 8
  %461 = icmp ult i8* %459, %460
  br i1 %461, label %462, label %471

; <label>:462                                     ; preds = %458
  %463 = load i8*, i8** %pIn_buf_cur, align 8
  %464 = getelementptr inbounds i8, i8* %463, i32 1
  store i8* %464, i8** %pIn_buf_cur, align 8
  %465 = load i8, i8* %463, align 1
  %466 = load i32, i32* %counter, align 4
  %467 = zext i32 %466 to i64
  %468 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %469 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %468, i32 0, i32 15
  %470 = getelementptr inbounds [4 x i8], [4 x i8]* %469, i64 0, i64 %467
  store i8 %465, i8* %470, align 1
  br label %479

; <label>:471                                     ; preds = %458
  br label %478

; <label>:472                                     ; preds = %449
  %473 = load i32, i32* %counter, align 4
  %474 = zext i32 %473 to i64
  %475 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %476 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %475, i32 0, i32 15
  %477 = getelementptr inbounds [4 x i8], [4 x i8]* %476, i64 0, i64 %474
  store i8 0, i8* %477, align 1
  br label %479

; <label>:478                                     ; preds = %471
  br label %449

; <label>:479                                     ; preds = %472, %462
  br label %489

; <label>:480                                     ; preds = %444
  %481 = load i8*, i8** %pIn_buf_cur, align 8
  %482 = getelementptr inbounds i8, i8* %481, i32 1
  store i8* %482, i8** %pIn_buf_cur, align 8
  %483 = load i8, i8* %481, align 1
  %484 = load i32, i32* %counter, align 4
  %485 = zext i32 %484 to i64
  %486 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %487 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %486, i32 0, i32 15
  %488 = getelementptr inbounds [4 x i8], [4 x i8]* %487, i64 0, i64 %485
  store i8 %483, i8* %488, align 1
  br label %489

; <label>:489                                     ; preds = %480, %479
  br label %490

; <label>:490                                     ; preds = %489
  br label %491

; <label>:491                                     ; preds = %490, %442
  br label %492

; <label>:492                                     ; preds = %491
  %493 = load i32, i32* %counter, align 4
  %494 = add i32 %493, 1
  store i32 %494, i32* %counter, align 4
  br label %370

; <label>:495                                     ; preds = %370
  %496 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %497 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %496, i32 0, i32 15
  %498 = getelementptr inbounds [4 x i8], [4 x i8]* %497, i64 0, i64 0
  %499 = load i8, i8* %498, align 8
  %500 = zext i8 %499 to i32
  %501 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %502 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %501, i32 0, i32 15
  %503 = getelementptr inbounds [4 x i8], [4 x i8]* %502, i64 0, i64 1
  %504 = load i8, i8* %503, align 1
  %505 = zext i8 %504 to i32
  %506 = shl i32 %505, 8
  %507 = or i32 %500, %506
  store i32 %507, i32* %counter, align 4
  %508 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %509 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %508, i32 0, i32 15
  %510 = getelementptr inbounds [4 x i8], [4 x i8]* %509, i64 0, i64 2
  %511 = load i8, i8* %510, align 2
  %512 = zext i8 %511 to i32
  %513 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %514 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %513, i32 0, i32 15
  %515 = getelementptr inbounds [4 x i8], [4 x i8]* %514, i64 0, i64 3
  %516 = load i8, i8* %515, align 1
  %517 = zext i8 %516 to i32
  %518 = shl i32 %517, 8
  %519 = or i32 %512, %518
  %520 = xor i32 65535, %519
  %521 = icmp ne i32 %507, %520
  br i1 %521, label %522, label %531

; <label>:522                                     ; preds = %495
  br label %523

; <label>:523                                     ; preds = %522
  br label %524

; <label>:524                                     ; preds = %529, %523
  br label %525

; <label>:525                                     ; preds = %524
  store i32 -1, i32* %status, align 4
  %526 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %527 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %526, i32 0, i32 0
  store i32 39, i32* %527, align 8
  br label %2797

; <label>:528                                     ; preds = %47
  br label %529

; <label>:529                                     ; preds = %528
  br label %524
                                                  ; No predecessors!
  br label %531

; <label>:531                                     ; preds = %530, %495
  br label %532

; <label>:532                                     ; preds = %612, %531
  %533 = load i32, i32* %counter, align 4
  %534 = icmp ne i32 %533, 0
  br i1 %534, label %535, label %538

; <label>:535                                     ; preds = %532
  %536 = load i32, i32* %num_bits, align 4
  %537 = icmp ne i32 %536, 0
  br label %538

; <label>:538                                     ; preds = %535, %532
  %539 = phi i1 [ false, %532 ], [ %537, %535 ]
  br i1 %539, label %540, label %619

; <label>:540                                     ; preds = %538
  br label %541

; <label>:541                                     ; preds = %540
  %542 = load i32, i32* %num_bits, align 4
  %543 = icmp ult i32 %542, 8
  br i1 %543, label %544, label %593

; <label>:544                                     ; preds = %541
  br label %545

; <label>:545                                     ; preds = %589, %544
  br label %546

; <label>:546                                     ; preds = %545
  %547 = load i8*, i8** %pIn_buf_cur, align 8
  %548 = load i8*, i8** %pIn_buf_end, align 8
  %549 = icmp uge i8* %547, %548
  br i1 %549, label %550, label %573

; <label>:550                                     ; preds = %546
  br label %551

; <label>:551                                     ; preds = %571, %550
  %552 = load i32, i32* %8, align 4
  %553 = and i32 %552, 2
  %554 = icmp ne i32 %553, 0
  br i1 %554, label %555, label %570

; <label>:555                                     ; preds = %551
  br label %556

; <label>:556                                     ; preds = %555
  store i32 1, i32* %status, align 4
  %557 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %558 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %557, i32 0, i32 0
  store i32 51, i32* %558, align 8
  br label %2797

; <label>:559                                     ; preds = %47
  br label %560

; <label>:560                                     ; preds = %559
  %561 = load i8*, i8** %pIn_buf_cur, align 8
  %562 = load i8*, i8** %pIn_buf_end, align 8
  %563 = icmp ult i8* %561, %562
  br i1 %563, label %564, label %569

; <label>:564                                     ; preds = %560
  %565 = load i8*, i8** %pIn_buf_cur, align 8
  %566 = getelementptr inbounds i8, i8* %565, i32 1
  store i8* %566, i8** %pIn_buf_cur, align 8
  %567 = load i8, i8* %565, align 1
  %568 = zext i8 %567 to i32
  store i32 %568, i32* %c3, align 4
  br label %572

; <label>:569                                     ; preds = %560
  br label %571

; <label>:570                                     ; preds = %551
  store i32 0, i32* %c3, align 4
  br label %572

; <label>:571                                     ; preds = %569
  br label %551

; <label>:572                                     ; preds = %570, %564
  br label %578

; <label>:573                                     ; preds = %546
  %574 = load i8*, i8** %pIn_buf_cur, align 8
  %575 = getelementptr inbounds i8, i8* %574, i32 1
  store i8* %575, i8** %pIn_buf_cur, align 8
  %576 = load i8, i8* %574, align 1
  %577 = zext i8 %576 to i32
  store i32 %577, i32* %c3, align 4
  br label %578

; <label>:578                                     ; preds = %573, %572
  br label %579

; <label>:579                                     ; preds = %578
  %580 = load i32, i32* %c3, align 4
  %581 = zext i32 %580 to i64
  %582 = load i32, i32* %num_bits, align 4
  %583 = zext i32 %582 to i64
  %584 = shl i64 %581, %583
  %585 = load i64, i64* %bit_buf, align 8
  %586 = or i64 %585, %584
  store i64 %586, i64* %bit_buf, align 8
  %587 = load i32, i32* %num_bits, align 4
  %588 = add i32 %587, 8
  store i32 %588, i32* %num_bits, align 4
  br label %589

; <label>:589                                     ; preds = %579
  %590 = load i32, i32* %num_bits, align 4
  %591 = icmp ult i32 %590, 8
  br i1 %591, label %545, label %592

; <label>:592                                     ; preds = %589
  br label %593

; <label>:593                                     ; preds = %592, %541
  %594 = load i64, i64* %bit_buf, align 8
  %595 = and i64 %594, 255
  %596 = trunc i64 %595 to i32
  store i32 %596, i32* %dist, align 4
  %597 = load i64, i64* %bit_buf, align 8
  %598 = lshr i64 %597, 8
  store i64 %598, i64* %bit_buf, align 8
  %599 = load i32, i32* %num_bits, align 4
  %600 = sub i32 %599, 8
  store i32 %600, i32* %num_bits, align 4
  br label %601

; <label>:601                                     ; preds = %593
  br label %602

; <label>:602                                     ; preds = %611, %601
  %603 = load i8*, i8** %pOut_buf_cur, align 8
  %604 = load i8*, i8** %pOut_buf_end, align 8
  %605 = icmp uge i8* %603, %604
  br i1 %605, label %606, label %612

; <label>:606                                     ; preds = %602
  br label %607

; <label>:607                                     ; preds = %606
  store i32 2, i32* %status, align 4
  %608 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %609 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %608, i32 0, i32 0
  store i32 52, i32* %609, align 8
  br label %2797

; <label>:610                                     ; preds = %47
  br label %611

; <label>:611                                     ; preds = %610
  br label %602

; <label>:612                                     ; preds = %602
  %613 = load i32, i32* %dist, align 4
  %614 = trunc i32 %613 to i8
  %615 = load i8*, i8** %pOut_buf_cur, align 8
  %616 = getelementptr inbounds i8, i8* %615, i32 1
  store i8* %616, i8** %pOut_buf_cur, align 8
  store i8 %614, i8* %615, align 1
  %617 = load i32, i32* %counter, align 4
  %618 = add i32 %617, -1
  store i32 %618, i32* %counter, align 4
  br label %532

; <label>:619                                     ; preds = %538
  br label %620

; <label>:620                                     ; preds = %717, %619
  %621 = load i32, i32* %counter, align 4
  %622 = icmp ne i32 %621, 0
  br i1 %622, label %623, label %732

; <label>:623                                     ; preds = %620
  br label %624

; <label>:624                                     ; preds = %633, %623
  %625 = load i8*, i8** %pOut_buf_cur, align 8
  %626 = load i8*, i8** %pOut_buf_end, align 8
  %627 = icmp uge i8* %625, %626
  br i1 %627, label %628, label %634

; <label>:628                                     ; preds = %624
  br label %629

; <label>:629                                     ; preds = %628
  store i32 2, i32* %status, align 4
  %630 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %631 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %630, i32 0, i32 0
  store i32 9, i32* %631, align 8
  br label %2797

; <label>:632                                     ; preds = %47
  br label %633

; <label>:633                                     ; preds = %632
  br label %624

; <label>:634                                     ; preds = %624
  br label %635

; <label>:635                                     ; preds = %658, %634
  %636 = load i8*, i8** %pIn_buf_cur, align 8
  %637 = load i8*, i8** %pIn_buf_end, align 8
  %638 = icmp uge i8* %636, %637
  br i1 %638, label %639, label %659

; <label>:639                                     ; preds = %635
  %640 = load i32, i32* %8, align 4
  %641 = and i32 %640, 2
  %642 = icmp ne i32 %641, 0
  br i1 %642, label %643, label %649

; <label>:643                                     ; preds = %639
  br label %644

; <label>:644                                     ; preds = %643
  store i32 1, i32* %status, align 4
  %645 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %646 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %645, i32 0, i32 0
  store i32 38, i32* %646, align 8
  br label %2797

; <label>:647                                     ; preds = %47
  br label %648

; <label>:648                                     ; preds = %647
  br label %658

; <label>:649                                     ; preds = %639
  br label %650

; <label>:650                                     ; preds = %649
  br label %651

; <label>:651                                     ; preds = %656, %650
  br label %652

; <label>:652                                     ; preds = %651
  store i32 -1, i32* %status, align 4
  %653 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %654 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %653, i32 0, i32 0
  store i32 40, i32* %654, align 8
  br label %2797

; <label>:655                                     ; preds = %47
  br label %656

; <label>:656                                     ; preds = %655
  br label %651
                                                  ; No predecessors!
  br label %658

; <label>:658                                     ; preds = %657, %648
  br label %635

; <label>:659                                     ; preds = %635
  %660 = load i8*, i8** %pOut_buf_end, align 8
  %661 = load i8*, i8** %pOut_buf_cur, align 8
  %662 = ptrtoint i8* %660 to i64
  %663 = ptrtoint i8* %661 to i64
  %664 = sub i64 %662, %663
  %665 = load i8*, i8** %pIn_buf_end, align 8
  %666 = load i8*, i8** %pIn_buf_cur, align 8
  %667 = ptrtoint i8* %665 to i64
  %668 = ptrtoint i8* %666 to i64
  %669 = sub i64 %667, %668
  %670 = icmp ult i64 %664, %669
  br i1 %670, label %671, label %677

; <label>:671                                     ; preds = %659
  %672 = load i8*, i8** %pOut_buf_end, align 8
  %673 = load i8*, i8** %pOut_buf_cur, align 8
  %674 = ptrtoint i8* %672 to i64
  %675 = ptrtoint i8* %673 to i64
  %676 = sub i64 %674, %675
  br label %683

; <label>:677                                     ; preds = %659
  %678 = load i8*, i8** %pIn_buf_end, align 8
  %679 = load i8*, i8** %pIn_buf_cur, align 8
  %680 = ptrtoint i8* %678 to i64
  %681 = ptrtoint i8* %679 to i64
  %682 = sub i64 %680, %681
  br label %683

; <label>:683                                     ; preds = %677, %671
  %684 = phi i64 [ %676, %671 ], [ %682, %677 ]
  %685 = load i32, i32* %counter, align 4
  %686 = zext i32 %685 to i64
  %687 = icmp ult i64 %684, %686
  br i1 %687, label %688, label %714

; <label>:688                                     ; preds = %683
  %689 = load i8*, i8** %pOut_buf_end, align 8
  %690 = load i8*, i8** %pOut_buf_cur, align 8
  %691 = ptrtoint i8* %689 to i64
  %692 = ptrtoint i8* %690 to i64
  %693 = sub i64 %691, %692
  %694 = load i8*, i8** %pIn_buf_end, align 8
  %695 = load i8*, i8** %pIn_buf_cur, align 8
  %696 = ptrtoint i8* %694 to i64
  %697 = ptrtoint i8* %695 to i64
  %698 = sub i64 %696, %697
  %699 = icmp ult i64 %693, %698
  br i1 %699, label %700, label %706

; <label>:700                                     ; preds = %688
  %701 = load i8*, i8** %pOut_buf_end, align 8
  %702 = load i8*, i8** %pOut_buf_cur, align 8
  %703 = ptrtoint i8* %701 to i64
  %704 = ptrtoint i8* %702 to i64
  %705 = sub i64 %703, %704
  br label %712

; <label>:706                                     ; preds = %688
  %707 = load i8*, i8** %pIn_buf_end, align 8
  %708 = load i8*, i8** %pIn_buf_cur, align 8
  %709 = ptrtoint i8* %707 to i64
  %710 = ptrtoint i8* %708 to i64
  %711 = sub i64 %709, %710
  br label %712

; <label>:712                                     ; preds = %706, %700
  %713 = phi i64 [ %705, %700 ], [ %711, %706 ]
  br label %717

; <label>:714                                     ; preds = %683
  %715 = load i32, i32* %counter, align 4
  %716 = zext i32 %715 to i64
  br label %717

; <label>:717                                     ; preds = %714, %712
  %718 = phi i64 [ %713, %712 ], [ %716, %714 ]
  store i64 %718, i64* %n, align 8
  %719 = load i8*, i8** %pOut_buf_cur, align 8
  %720 = load i8*, i8** %pIn_buf_cur, align 8
  %721 = load i64, i64* %n, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %719, i8* %720, i64 %721, i32 1, i1 false)
  %722 = load i64, i64* %n, align 8
  %723 = load i8*, i8** %pIn_buf_cur, align 8
  %724 = getelementptr inbounds i8, i8* %723, i64 %722
  store i8* %724, i8** %pIn_buf_cur, align 8
  %725 = load i64, i64* %n, align 8
  %726 = load i8*, i8** %pOut_buf_cur, align 8
  %727 = getelementptr inbounds i8, i8* %726, i64 %725
  store i8* %727, i8** %pOut_buf_cur, align 8
  %728 = load i64, i64* %n, align 8
  %729 = trunc i64 %728 to i32
  %730 = load i32, i32* %counter, align 4
  %731 = sub i32 %730, %729
  store i32 %731, i32* %counter, align 4
  br label %620

; <label>:732                                     ; preds = %620
  br label %2591

; <label>:733                                     ; preds = %291
  %734 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %735 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %734, i32 0, i32 6
  %736 = load i32, i32* %735, align 8
  %737 = icmp eq i32 %736, 3
  br i1 %737, label %738, label %747

; <label>:738                                     ; preds = %733
  br label %739

; <label>:739                                     ; preds = %738
  br label %740

; <label>:740                                     ; preds = %745, %739
  br label %741

; <label>:741                                     ; preds = %740
  store i32 -1, i32* %status, align 4
  %742 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %743 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %742, i32 0, i32 0
  store i32 10, i32* %743, align 8
  br label %2797

; <label>:744                                     ; preds = %47
  br label %745

; <label>:745                                     ; preds = %744
  br label %740
                                                  ; No predecessors!
  br label %2590

; <label>:747                                     ; preds = %733
  %748 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %749 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %748, i32 0, i32 6
  %750 = load i32, i32* %749, align 8
  %751 = icmp eq i32 %750, 1
  br i1 %751, label %752, label %809

; <label>:752                                     ; preds = %747
  %753 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %754 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %753, i32 0, i32 14
  %755 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %754, i64 0, i64 0
  %756 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %755, i32 0, i32 0
  %757 = getelementptr inbounds [288 x i8], [288 x i8]* %756, i32 0, i32 0
  store i8* %757, i8** %p, align 8
  %758 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %759 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %758, i32 0, i32 11
  %760 = getelementptr inbounds [3 x i32], [3 x i32]* %759, i64 0, i64 0
  store i32 288, i32* %760, align 4
  %761 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %762 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %761, i32 0, i32 11
  %763 = getelementptr inbounds [3 x i32], [3 x i32]* %762, i64 0, i64 1
  store i32 32, i32* %763, align 4
  %764 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %765 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %764, i32 0, i32 14
  %766 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %765, i64 0, i64 1
  %767 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %766, i32 0, i32 0
  %768 = getelementptr inbounds [288 x i8], [288 x i8]* %767, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %768, i8 5, i64 32, i32 8, i1 false)
  store i32 0, i32* %i, align 4
  br label %769

; <label>:769                                     ; preds = %775, %752
  %770 = load i32, i32* %i, align 4
  %771 = icmp ule i32 %770, 143
  br i1 %771, label %772, label %778

; <label>:772                                     ; preds = %769
  %773 = load i8*, i8** %p, align 8
  %774 = getelementptr inbounds i8, i8* %773, i32 1
  store i8* %774, i8** %p, align 8
  store i8 8, i8* %773, align 1
  br label %775

; <label>:775                                     ; preds = %772
  %776 = load i32, i32* %i, align 4
  %777 = add i32 %776, 1
  store i32 %777, i32* %i, align 4
  br label %769

; <label>:778                                     ; preds = %769
  br label %779

; <label>:779                                     ; preds = %785, %778
  %780 = load i32, i32* %i, align 4
  %781 = icmp ule i32 %780, 255
  br i1 %781, label %782, label %788

; <label>:782                                     ; preds = %779
  %783 = load i8*, i8** %p, align 8
  %784 = getelementptr inbounds i8, i8* %783, i32 1
  store i8* %784, i8** %p, align 8
  store i8 9, i8* %783, align 1
  br label %785

; <label>:785                                     ; preds = %782
  %786 = load i32, i32* %i, align 4
  %787 = add i32 %786, 1
  store i32 %787, i32* %i, align 4
  br label %779

; <label>:788                                     ; preds = %779
  br label %789

; <label>:789                                     ; preds = %795, %788
  %790 = load i32, i32* %i, align 4
  %791 = icmp ule i32 %790, 279
  br i1 %791, label %792, label %798

; <label>:792                                     ; preds = %789
  %793 = load i8*, i8** %p, align 8
  %794 = getelementptr inbounds i8, i8* %793, i32 1
  store i8* %794, i8** %p, align 8
  store i8 7, i8* %793, align 1
  br label %795

; <label>:795                                     ; preds = %792
  %796 = load i32, i32* %i, align 4
  %797 = add i32 %796, 1
  store i32 %797, i32* %i, align 4
  br label %789

; <label>:798                                     ; preds = %789
  br label %799

; <label>:799                                     ; preds = %805, %798
  %800 = load i32, i32* %i, align 4
  %801 = icmp ule i32 %800, 287
  br i1 %801, label %802, label %808

; <label>:802                                     ; preds = %799
  %803 = load i8*, i8** %p, align 8
  %804 = getelementptr inbounds i8, i8* %803, i32 1
  store i8* %804, i8** %p, align 8
  store i8 8, i8* %803, align 1
  br label %805

; <label>:805                                     ; preds = %802
  %806 = load i32, i32* %i, align 4
  %807 = add i32 %806, 1
  store i32 %807, i32* %i, align 4
  br label %799

; <label>:808                                     ; preds = %799
  br label %1017

; <label>:809                                     ; preds = %747
  store i32 0, i32* %counter, align 4
  br label %810

; <label>:810                                     ; preds = %920, %809
  %811 = load i32, i32* %counter, align 4
  %812 = icmp ult i32 %811, 3
  br i1 %812, label %813, label %923

; <label>:813                                     ; preds = %810
  br label %814

; <label>:814                                     ; preds = %813
  %815 = load i32, i32* %num_bits, align 4
  %816 = load i32, i32* %counter, align 4
  %817 = zext i32 %816 to i64
  %818 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.11, i64 0, i64 %817
  %819 = load i8, i8* %818, align 1
  %820 = sext i8 %819 to i32
  %821 = icmp ult i32 %815, %820
  br i1 %821, label %822, label %876

; <label>:822                                     ; preds = %814
  br label %823

; <label>:823                                     ; preds = %867, %822
  br label %824

; <label>:824                                     ; preds = %823
  %825 = load i8*, i8** %pIn_buf_cur, align 8
  %826 = load i8*, i8** %pIn_buf_end, align 8
  %827 = icmp uge i8* %825, %826
  br i1 %827, label %828, label %851

; <label>:828                                     ; preds = %824
  br label %829

; <label>:829                                     ; preds = %849, %828
  %830 = load i32, i32* %8, align 4
  %831 = and i32 %830, 2
  %832 = icmp ne i32 %831, 0
  br i1 %832, label %833, label %848

; <label>:833                                     ; preds = %829
  br label %834

; <label>:834                                     ; preds = %833
  store i32 1, i32* %status, align 4
  %835 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %836 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %835, i32 0, i32 0
  store i32 11, i32* %836, align 8
  br label %2797

; <label>:837                                     ; preds = %47
  br label %838

; <label>:838                                     ; preds = %837
  %839 = load i8*, i8** %pIn_buf_cur, align 8
  %840 = load i8*, i8** %pIn_buf_end, align 8
  %841 = icmp ult i8* %839, %840
  br i1 %841, label %842, label %847

; <label>:842                                     ; preds = %838
  %843 = load i8*, i8** %pIn_buf_cur, align 8
  %844 = getelementptr inbounds i8, i8* %843, i32 1
  store i8* %844, i8** %pIn_buf_cur, align 8
  %845 = load i8, i8* %843, align 1
  %846 = zext i8 %845 to i32
  store i32 %846, i32* %c4, align 4
  br label %850

; <label>:847                                     ; preds = %838
  br label %849

; <label>:848                                     ; preds = %829
  store i32 0, i32* %c4, align 4
  br label %850

; <label>:849                                     ; preds = %847
  br label %829

; <label>:850                                     ; preds = %848, %842
  br label %856

; <label>:851                                     ; preds = %824
  %852 = load i8*, i8** %pIn_buf_cur, align 8
  %853 = getelementptr inbounds i8, i8* %852, i32 1
  store i8* %853, i8** %pIn_buf_cur, align 8
  %854 = load i8, i8* %852, align 1
  %855 = zext i8 %854 to i32
  store i32 %855, i32* %c4, align 4
  br label %856

; <label>:856                                     ; preds = %851, %850
  br label %857

; <label>:857                                     ; preds = %856
  %858 = load i32, i32* %c4, align 4
  %859 = zext i32 %858 to i64
  %860 = load i32, i32* %num_bits, align 4
  %861 = zext i32 %860 to i64
  %862 = shl i64 %859, %861
  %863 = load i64, i64* %bit_buf, align 8
  %864 = or i64 %863, %862
  store i64 %864, i64* %bit_buf, align 8
  %865 = load i32, i32* %num_bits, align 4
  %866 = add i32 %865, 8
  store i32 %866, i32* %num_bits, align 4
  br label %867

; <label>:867                                     ; preds = %857
  %868 = load i32, i32* %num_bits, align 4
  %869 = load i32, i32* %counter, align 4
  %870 = zext i32 %869 to i64
  %871 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.11, i64 0, i64 %870
  %872 = load i8, i8* %871, align 1
  %873 = sext i8 %872 to i32
  %874 = icmp ult i32 %868, %873
  br i1 %874, label %823, label %875

; <label>:875                                     ; preds = %867
  br label %876

; <label>:876                                     ; preds = %875, %814
  %877 = load i64, i64* %bit_buf, align 8
  %878 = load i32, i32* %counter, align 4
  %879 = zext i32 %878 to i64
  %880 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.11, i64 0, i64 %879
  %881 = load i8, i8* %880, align 1
  %882 = sext i8 %881 to i32
  %883 = shl i32 1, %882
  %884 = sub nsw i32 %883, 1
  %885 = sext i32 %884 to i64
  %886 = and i64 %877, %885
  %887 = trunc i64 %886 to i32
  %888 = load i32, i32* %counter, align 4
  %889 = zext i32 %888 to i64
  %890 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %891 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %890, i32 0, i32 11
  %892 = getelementptr inbounds [3 x i32], [3 x i32]* %891, i64 0, i64 %889
  store i32 %887, i32* %892, align 4
  %893 = load i32, i32* %counter, align 4
  %894 = zext i32 %893 to i64
  %895 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.11, i64 0, i64 %894
  %896 = load i8, i8* %895, align 1
  %897 = sext i8 %896 to i32
  %898 = load i64, i64* %bit_buf, align 8
  %899 = zext i32 %897 to i64
  %900 = lshr i64 %898, %899
  store i64 %900, i64* %bit_buf, align 8
  %901 = load i32, i32* %counter, align 4
  %902 = zext i32 %901 to i64
  %903 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.11, i64 0, i64 %902
  %904 = load i8, i8* %903, align 1
  %905 = sext i8 %904 to i32
  %906 = load i32, i32* %num_bits, align 4
  %907 = sub i32 %906, %905
  store i32 %907, i32* %num_bits, align 4
  br label %908

; <label>:908                                     ; preds = %876
  %909 = load i32, i32* %counter, align 4
  %910 = zext i32 %909 to i64
  %911 = getelementptr inbounds [3 x i32], [3 x i32]* @tinfl_decompress.s_min_table_sizes, i64 0, i64 %910
  %912 = load i32, i32* %911, align 4
  %913 = load i32, i32* %counter, align 4
  %914 = zext i32 %913 to i64
  %915 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %916 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %915, i32 0, i32 11
  %917 = getelementptr inbounds [3 x i32], [3 x i32]* %916, i64 0, i64 %914
  %918 = load i32, i32* %917, align 4
  %919 = add i32 %918, %912
  store i32 %919, i32* %917, align 4
  br label %920

; <label>:920                                     ; preds = %908
  %921 = load i32, i32* %counter, align 4
  %922 = add i32 %921, 1
  store i32 %922, i32* %counter, align 4
  br label %810

; <label>:923                                     ; preds = %810
  %924 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %925 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %924, i32 0, i32 14
  %926 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %925, i64 0, i64 2
  %927 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %926, i32 0, i32 0
  %928 = bitcast [288 x i8]* %927 to i8*
  call void @llvm.memset.p0i8.i64(i8* %928, i8 0, i64 288, i32 8, i1 false)
  store i32 0, i32* %counter, align 4
  br label %929

; <label>:929                                     ; preds = %1010, %923
  %930 = load i32, i32* %counter, align 4
  %931 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %932 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %931, i32 0, i32 11
  %933 = getelementptr inbounds [3 x i32], [3 x i32]* %932, i64 0, i64 2
  %934 = load i32, i32* %933, align 4
  %935 = icmp ult i32 %930, %934
  br i1 %935, label %936, label %1013

; <label>:936                                     ; preds = %929
  br label %937

; <label>:937                                     ; preds = %936
  %938 = load i32, i32* %num_bits, align 4
  %939 = icmp ult i32 %938, 3
  br i1 %939, label %940, label %989

; <label>:940                                     ; preds = %937
  br label %941

; <label>:941                                     ; preds = %985, %940
  br label %942

; <label>:942                                     ; preds = %941
  %943 = load i8*, i8** %pIn_buf_cur, align 8
  %944 = load i8*, i8** %pIn_buf_end, align 8
  %945 = icmp uge i8* %943, %944
  br i1 %945, label %946, label %969

; <label>:946                                     ; preds = %942
  br label %947

; <label>:947                                     ; preds = %967, %946
  %948 = load i32, i32* %8, align 4
  %949 = and i32 %948, 2
  %950 = icmp ne i32 %949, 0
  br i1 %950, label %951, label %966

; <label>:951                                     ; preds = %947
  br label %952

; <label>:952                                     ; preds = %951
  store i32 1, i32* %status, align 4
  %953 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %954 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %953, i32 0, i32 0
  store i32 14, i32* %954, align 8
  br label %2797

; <label>:955                                     ; preds = %47
  br label %956

; <label>:956                                     ; preds = %955
  %957 = load i8*, i8** %pIn_buf_cur, align 8
  %958 = load i8*, i8** %pIn_buf_end, align 8
  %959 = icmp ult i8* %957, %958
  br i1 %959, label %960, label %965

; <label>:960                                     ; preds = %956
  %961 = load i8*, i8** %pIn_buf_cur, align 8
  %962 = getelementptr inbounds i8, i8* %961, i32 1
  store i8* %962, i8** %pIn_buf_cur, align 8
  %963 = load i8, i8* %961, align 1
  %964 = zext i8 %963 to i32
  store i32 %964, i32* %c5, align 4
  br label %968

; <label>:965                                     ; preds = %956
  br label %967

; <label>:966                                     ; preds = %947
  store i32 0, i32* %c5, align 4
  br label %968

; <label>:967                                     ; preds = %965
  br label %947

; <label>:968                                     ; preds = %966, %960
  br label %974

; <label>:969                                     ; preds = %942
  %970 = load i8*, i8** %pIn_buf_cur, align 8
  %971 = getelementptr inbounds i8, i8* %970, i32 1
  store i8* %971, i8** %pIn_buf_cur, align 8
  %972 = load i8, i8* %970, align 1
  %973 = zext i8 %972 to i32
  store i32 %973, i32* %c5, align 4
  br label %974

; <label>:974                                     ; preds = %969, %968
  br label %975

; <label>:975                                     ; preds = %974
  %976 = load i32, i32* %c5, align 4
  %977 = zext i32 %976 to i64
  %978 = load i32, i32* %num_bits, align 4
  %979 = zext i32 %978 to i64
  %980 = shl i64 %977, %979
  %981 = load i64, i64* %bit_buf, align 8
  %982 = or i64 %981, %980
  store i64 %982, i64* %bit_buf, align 8
  %983 = load i32, i32* %num_bits, align 4
  %984 = add i32 %983, 8
  store i32 %984, i32* %num_bits, align 4
  br label %985

; <label>:985                                     ; preds = %975
  %986 = load i32, i32* %num_bits, align 4
  %987 = icmp ult i32 %986, 3
  br i1 %987, label %941, label %988

; <label>:988                                     ; preds = %985
  br label %989

; <label>:989                                     ; preds = %988, %937
  %990 = load i64, i64* %bit_buf, align 8
  %991 = and i64 %990, 7
  %992 = trunc i64 %991 to i32
  store i32 %992, i32* %s, align 4
  %993 = load i64, i64* %bit_buf, align 8
  %994 = lshr i64 %993, 3
  store i64 %994, i64* %bit_buf, align 8
  %995 = load i32, i32* %num_bits, align 4
  %996 = sub i32 %995, 3
  store i32 %996, i32* %num_bits, align 4
  br label %997

; <label>:997                                     ; preds = %989
  %998 = load i32, i32* %s, align 4
  %999 = trunc i32 %998 to i8
  %1000 = load i32, i32* %counter, align 4
  %1001 = zext i32 %1000 to i64
  %1002 = getelementptr inbounds [19 x i8], [19 x i8]* @tinfl_decompress.s_length_dezigzag, i64 0, i64 %1001
  %1003 = load i8, i8* %1002, align 1
  %1004 = zext i8 %1003 to i64
  %1005 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1006 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1005, i32 0, i32 14
  %1007 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %1006, i64 0, i64 2
  %1008 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1007, i32 0, i32 0
  %1009 = getelementptr inbounds [288 x i8], [288 x i8]* %1008, i64 0, i64 %1004
  store i8 %999, i8* %1009, align 1
  br label %1010

; <label>:1010                                    ; preds = %997
  %1011 = load i32, i32* %counter, align 4
  %1012 = add i32 %1011, 1
  store i32 %1012, i32* %counter, align 4
  br label %929

; <label>:1013                                    ; preds = %929
  %1014 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1015 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1014, i32 0, i32 11
  %1016 = getelementptr inbounds [3 x i32], [3 x i32]* %1015, i64 0, i64 2
  store i32 19, i32* %1016, align 4
  br label %1017

; <label>:1017                                    ; preds = %1013, %808
  br label %1018

; <label>:1018                                    ; preds = %1666, %1017
  %1019 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1020 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1019, i32 0, i32 6
  %1021 = load i32, i32* %1020, align 8
  %1022 = icmp sge i32 %1021, 0
  br i1 %1022, label %1023, label %1671

; <label>:1023                                    ; preds = %1018
  %1024 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1025 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1024, i32 0, i32 6
  %1026 = load i32, i32* %1025, align 8
  %1027 = zext i32 %1026 to i64
  %1028 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1029 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1028, i32 0, i32 14
  %1030 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %1029, i64 0, i64 %1027
  store %struct.tinfl_huff_table* %1030, %struct.tinfl_huff_table** %pTable, align 8
  %1031 = bitcast [16 x i32]* %total_syms to i8*
  call void @llvm.memset.p0i8.i64(i8* %1031, i8 0, i64 64, i32 16, i1 false)
  %1032 = load %struct.tinfl_huff_table*, %struct.tinfl_huff_table** %pTable, align 8
  %1033 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1032, i32 0, i32 1
  %1034 = bitcast [1024 x i16]* %1033 to i8*
  call void @llvm.memset.p0i8.i64(i8* %1034, i8 0, i64 2048, i32 2, i1 false)
  %1035 = load %struct.tinfl_huff_table*, %struct.tinfl_huff_table** %pTable, align 8
  %1036 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1035, i32 0, i32 2
  %1037 = bitcast [576 x i16]* %1036 to i8*
  call void @llvm.memset.p0i8.i64(i8* %1037, i8 0, i64 1152, i32 2, i1 false)
  store i32 0, i32* %i6, align 4
  br label %1038

; <label>:1038                                    ; preds = %1060, %1023
  %1039 = load i32, i32* %i6, align 4
  %1040 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1041 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1040, i32 0, i32 6
  %1042 = load i32, i32* %1041, align 8
  %1043 = zext i32 %1042 to i64
  %1044 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1045 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1044, i32 0, i32 11
  %1046 = getelementptr inbounds [3 x i32], [3 x i32]* %1045, i64 0, i64 %1043
  %1047 = load i32, i32* %1046, align 4
  %1048 = icmp ult i32 %1039, %1047
  br i1 %1048, label %1049, label %1063

; <label>:1049                                    ; preds = %1038
  %1050 = load i32, i32* %i6, align 4
  %1051 = zext i32 %1050 to i64
  %1052 = load %struct.tinfl_huff_table*, %struct.tinfl_huff_table** %pTable, align 8
  %1053 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1052, i32 0, i32 0
  %1054 = getelementptr inbounds [288 x i8], [288 x i8]* %1053, i64 0, i64 %1051
  %1055 = load i8, i8* %1054, align 1
  %1056 = zext i8 %1055 to i64
  %1057 = getelementptr inbounds [16 x i32], [16 x i32]* %total_syms, i64 0, i64 %1056
  %1058 = load i32, i32* %1057, align 4
  %1059 = add i32 %1058, 1
  store i32 %1059, i32* %1057, align 4
  br label %1060

; <label>:1060                                    ; preds = %1049
  %1061 = load i32, i32* %i6, align 4
  %1062 = add i32 %1061, 1
  store i32 %1062, i32* %i6, align 4
  br label %1038

; <label>:1063                                    ; preds = %1038
  store i32 0, i32* %used_syms, align 4
  store i32 0, i32* %total, align 4
  %1064 = getelementptr inbounds [17 x i32], [17 x i32]* %next_code, i64 0, i64 1
  store i32 0, i32* %1064, align 4
  %1065 = getelementptr inbounds [17 x i32], [17 x i32]* %next_code, i64 0, i64 0
  store i32 0, i32* %1065, align 16
  store i32 1, i32* %i6, align 4
  br label %1066

; <label>:1066                                    ; preds = %1087, %1063
  %1067 = load i32, i32* %i6, align 4
  %1068 = icmp ule i32 %1067, 15
  br i1 %1068, label %1069, label %1090

; <label>:1069                                    ; preds = %1066
  %1070 = load i32, i32* %i6, align 4
  %1071 = zext i32 %1070 to i64
  %1072 = getelementptr inbounds [16 x i32], [16 x i32]* %total_syms, i64 0, i64 %1071
  %1073 = load i32, i32* %1072, align 4
  %1074 = load i32, i32* %used_syms, align 4
  %1075 = add i32 %1074, %1073
  store i32 %1075, i32* %used_syms, align 4
  %1076 = load i32, i32* %total, align 4
  %1077 = load i32, i32* %i6, align 4
  %1078 = zext i32 %1077 to i64
  %1079 = getelementptr inbounds [16 x i32], [16 x i32]* %total_syms, i64 0, i64 %1078
  %1080 = load i32, i32* %1079, align 4
  %1081 = add i32 %1076, %1080
  %1082 = shl i32 %1081, 1
  store i32 %1082, i32* %total, align 4
  %1083 = load i32, i32* %i6, align 4
  %1084 = add i32 %1083, 1
  %1085 = zext i32 %1084 to i64
  %1086 = getelementptr inbounds [17 x i32], [17 x i32]* %next_code, i64 0, i64 %1085
  store i32 %1082, i32* %1086, align 4
  br label %1087

; <label>:1087                                    ; preds = %1069
  %1088 = load i32, i32* %i6, align 4
  %1089 = add i32 %1088, 1
  store i32 %1089, i32* %i6, align 4
  br label %1066

; <label>:1090                                    ; preds = %1066
  %1091 = load i32, i32* %total, align 4
  %1092 = icmp ne i32 65536, %1091
  br i1 %1092, label %1093, label %1105

; <label>:1093                                    ; preds = %1090
  %1094 = load i32, i32* %used_syms, align 4
  %1095 = icmp ugt i32 %1094, 1
  br i1 %1095, label %1096, label %1105

; <label>:1096                                    ; preds = %1093
  br label %1097

; <label>:1097                                    ; preds = %1096
  br label %1098

; <label>:1098                                    ; preds = %1103, %1097
  br label %1099

; <label>:1099                                    ; preds = %1098
  store i32 -1, i32* %status, align 4
  %1100 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1101 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1100, i32 0, i32 0
  store i32 35, i32* %1101, align 8
  br label %2797

; <label>:1102                                    ; preds = %47
  br label %1103

; <label>:1103                                    ; preds = %1102
  br label %1098
                                                  ; No predecessors!
  br label %1105

; <label>:1105                                    ; preds = %1104, %1093, %1090
  store i32 -1, i32* %tree_next, align 4
  store i32 0, i32* %sym_index, align 4
  br label %1106

; <label>:1106                                    ; preds = %1259, %1105
  %1107 = load i32, i32* %sym_index, align 4
  %1108 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1109 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1108, i32 0, i32 6
  %1110 = load i32, i32* %1109, align 8
  %1111 = zext i32 %1110 to i64
  %1112 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1113 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1112, i32 0, i32 11
  %1114 = getelementptr inbounds [3 x i32], [3 x i32]* %1113, i64 0, i64 %1111
  %1115 = load i32, i32* %1114, align 4
  %1116 = icmp ult i32 %1107, %1115
  br i1 %1116, label %1117, label %1262

; <label>:1117                                    ; preds = %1106
  store i32 0, i32* %rev_code, align 4
  %1118 = load i32, i32* %sym_index, align 4
  %1119 = zext i32 %1118 to i64
  %1120 = load %struct.tinfl_huff_table*, %struct.tinfl_huff_table** %pTable, align 8
  %1121 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1120, i32 0, i32 0
  %1122 = getelementptr inbounds [288 x i8], [288 x i8]* %1121, i64 0, i64 %1119
  %1123 = load i8, i8* %1122, align 1
  %1124 = zext i8 %1123 to i32
  store i32 %1124, i32* %code_size, align 4
  %1125 = load i32, i32* %code_size, align 4
  %1126 = icmp ne i32 %1125, 0
  br i1 %1126, label %1128, label %1127

; <label>:1127                                    ; preds = %1117
  br label %1259

; <label>:1128                                    ; preds = %1117
  %1129 = load i32, i32* %code_size, align 4
  %1130 = zext i32 %1129 to i64
  %1131 = getelementptr inbounds [17 x i32], [17 x i32]* %next_code, i64 0, i64 %1130
  %1132 = load i32, i32* %1131, align 4
  %1133 = add i32 %1132, 1
  store i32 %1133, i32* %1131, align 4
  store i32 %1132, i32* %cur_code, align 4
  %1134 = load i32, i32* %code_size, align 4
  store i32 %1134, i32* %l, align 4
  br label %1135

; <label>:1135                                    ; preds = %1144, %1128
  %1136 = load i32, i32* %l, align 4
  %1137 = icmp ugt i32 %1136, 0
  br i1 %1137, label %1138, label %1149

; <label>:1138                                    ; preds = %1135
  %1139 = load i32, i32* %rev_code, align 4
  %1140 = shl i32 %1139, 1
  %1141 = load i32, i32* %cur_code, align 4
  %1142 = and i32 %1141, 1
  %1143 = or i32 %1140, %1142
  store i32 %1143, i32* %rev_code, align 4
  br label %1144

; <label>:1144                                    ; preds = %1138
  %1145 = load i32, i32* %l, align 4
  %1146 = add i32 %1145, -1
  store i32 %1146, i32* %l, align 4
  %1147 = load i32, i32* %cur_code, align 4
  %1148 = lshr i32 %1147, 1
  store i32 %1148, i32* %cur_code, align 4
  br label %1135

; <label>:1149                                    ; preds = %1135
  %1150 = load i32, i32* %code_size, align 4
  %1151 = icmp ule i32 %1150, 10
  br i1 %1151, label %1152, label %1173

; <label>:1152                                    ; preds = %1149
  %1153 = load i32, i32* %code_size, align 4
  %1154 = shl i32 %1153, 9
  %1155 = load i32, i32* %sym_index, align 4
  %1156 = or i32 %1154, %1155
  %1157 = trunc i32 %1156 to i16
  store i16 %1157, i16* %k, align 2
  br label %1158

; <label>:1158                                    ; preds = %1161, %1152
  %1159 = load i32, i32* %rev_code, align 4
  %1160 = icmp ult i32 %1159, 1024
  br i1 %1160, label %1161, label %1172

; <label>:1161                                    ; preds = %1158
  %1162 = load i16, i16* %k, align 2
  %1163 = load i32, i32* %rev_code, align 4
  %1164 = zext i32 %1163 to i64
  %1165 = load %struct.tinfl_huff_table*, %struct.tinfl_huff_table** %pTable, align 8
  %1166 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1165, i32 0, i32 1
  %1167 = getelementptr inbounds [1024 x i16], [1024 x i16]* %1166, i64 0, i64 %1164
  store i16 %1162, i16* %1167, align 2
  %1168 = load i32, i32* %code_size, align 4
  %1169 = shl i32 1, %1168
  %1170 = load i32, i32* %rev_code, align 4
  %1171 = add i32 %1170, %1169
  store i32 %1171, i32* %rev_code, align 4
  br label %1158

; <label>:1172                                    ; preds = %1158
  br label %1259

; <label>:1173                                    ; preds = %1149
  %1174 = load i32, i32* %rev_code, align 4
  %1175 = and i32 %1174, 1023
  %1176 = zext i32 %1175 to i64
  %1177 = load %struct.tinfl_huff_table*, %struct.tinfl_huff_table** %pTable, align 8
  %1178 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1177, i32 0, i32 1
  %1179 = getelementptr inbounds [1024 x i16], [1024 x i16]* %1178, i64 0, i64 %1176
  %1180 = load i16, i16* %1179, align 2
  %1181 = sext i16 %1180 to i32
  store i32 %1181, i32* %tree_cur, align 4
  %1182 = icmp eq i32 0, %1181
  br i1 %1182, label %1183, label %1195

; <label>:1183                                    ; preds = %1173
  %1184 = load i32, i32* %tree_next, align 4
  %1185 = trunc i32 %1184 to i16
  %1186 = load i32, i32* %rev_code, align 4
  %1187 = and i32 %1186, 1023
  %1188 = zext i32 %1187 to i64
  %1189 = load %struct.tinfl_huff_table*, %struct.tinfl_huff_table** %pTable, align 8
  %1190 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1189, i32 0, i32 1
  %1191 = getelementptr inbounds [1024 x i16], [1024 x i16]* %1190, i64 0, i64 %1188
  store i16 %1185, i16* %1191, align 2
  %1192 = load i32, i32* %tree_next, align 4
  store i32 %1192, i32* %tree_cur, align 4
  %1193 = load i32, i32* %tree_next, align 4
  %1194 = sub nsw i32 %1193, 2
  store i32 %1194, i32* %tree_next, align 4
  br label %1195

; <label>:1195                                    ; preds = %1183, %1173
  %1196 = load i32, i32* %rev_code, align 4
  %1197 = lshr i32 %1196, 9
  store i32 %1197, i32* %rev_code, align 4
  %1198 = load i32, i32* %code_size, align 4
  store i32 %1198, i32* %j, align 4
  br label %1199

; <label>:1199                                    ; preds = %1241, %1195
  %1200 = load i32, i32* %j, align 4
  %1201 = icmp ugt i32 %1200, 11
  br i1 %1201, label %1202, label %1244

; <label>:1202                                    ; preds = %1199
  %1203 = load i32, i32* %rev_code, align 4
  %1204 = lshr i32 %1203, 1
  store i32 %1204, i32* %rev_code, align 4
  %1205 = and i32 %1204, 1
  %1206 = load i32, i32* %tree_cur, align 4
  %1207 = sub i32 %1206, %1205
  store i32 %1207, i32* %tree_cur, align 4
  %1208 = load i32, i32* %tree_cur, align 4
  %1209 = sub nsw i32 0, %1208
  %1210 = sub nsw i32 %1209, 1
  %1211 = sext i32 %1210 to i64
  %1212 = load %struct.tinfl_huff_table*, %struct.tinfl_huff_table** %pTable, align 8
  %1213 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1212, i32 0, i32 2
  %1214 = getelementptr inbounds [576 x i16], [576 x i16]* %1213, i64 0, i64 %1211
  %1215 = load i16, i16* %1214, align 2
  %1216 = icmp ne i16 %1215, 0
  br i1 %1216, label %1230, label %1217

; <label>:1217                                    ; preds = %1202
  %1218 = load i32, i32* %tree_next, align 4
  %1219 = trunc i32 %1218 to i16
  %1220 = load i32, i32* %tree_cur, align 4
  %1221 = sub nsw i32 0, %1220
  %1222 = sub nsw i32 %1221, 1
  %1223 = sext i32 %1222 to i64
  %1224 = load %struct.tinfl_huff_table*, %struct.tinfl_huff_table** %pTable, align 8
  %1225 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1224, i32 0, i32 2
  %1226 = getelementptr inbounds [576 x i16], [576 x i16]* %1225, i64 0, i64 %1223
  store i16 %1219, i16* %1226, align 2
  %1227 = load i32, i32* %tree_next, align 4
  store i32 %1227, i32* %tree_cur, align 4
  %1228 = load i32, i32* %tree_next, align 4
  %1229 = sub nsw i32 %1228, 2
  store i32 %1229, i32* %tree_next, align 4
  br label %1240

; <label>:1230                                    ; preds = %1202
  %1231 = load i32, i32* %tree_cur, align 4
  %1232 = sub nsw i32 0, %1231
  %1233 = sub nsw i32 %1232, 1
  %1234 = sext i32 %1233 to i64
  %1235 = load %struct.tinfl_huff_table*, %struct.tinfl_huff_table** %pTable, align 8
  %1236 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1235, i32 0, i32 2
  %1237 = getelementptr inbounds [576 x i16], [576 x i16]* %1236, i64 0, i64 %1234
  %1238 = load i16, i16* %1237, align 2
  %1239 = sext i16 %1238 to i32
  store i32 %1239, i32* %tree_cur, align 4
  br label %1240

; <label>:1240                                    ; preds = %1230, %1217
  br label %1241

; <label>:1241                                    ; preds = %1240
  %1242 = load i32, i32* %j, align 4
  %1243 = add i32 %1242, -1
  store i32 %1243, i32* %j, align 4
  br label %1199

; <label>:1244                                    ; preds = %1199
  %1245 = load i32, i32* %rev_code, align 4
  %1246 = lshr i32 %1245, 1
  store i32 %1246, i32* %rev_code, align 4
  %1247 = and i32 %1246, 1
  %1248 = load i32, i32* %tree_cur, align 4
  %1249 = sub i32 %1248, %1247
  store i32 %1249, i32* %tree_cur, align 4
  %1250 = load i32, i32* %sym_index, align 4
  %1251 = trunc i32 %1250 to i16
  %1252 = load i32, i32* %tree_cur, align 4
  %1253 = sub nsw i32 0, %1252
  %1254 = sub nsw i32 %1253, 1
  %1255 = sext i32 %1254 to i64
  %1256 = load %struct.tinfl_huff_table*, %struct.tinfl_huff_table** %pTable, align 8
  %1257 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1256, i32 0, i32 2
  %1258 = getelementptr inbounds [576 x i16], [576 x i16]* %1257, i64 0, i64 %1255
  store i16 %1251, i16* %1258, align 2
  br label %1259

; <label>:1259                                    ; preds = %1244, %1172, %1127
  %1260 = load i32, i32* %sym_index, align 4
  %1261 = add i32 %1260, 1
  store i32 %1261, i32* %sym_index, align 4
  br label %1106

; <label>:1262                                    ; preds = %1106
  %1263 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1264 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1263, i32 0, i32 6
  %1265 = load i32, i32* %1264, align 8
  %1266 = icmp eq i32 %1265, 2
  br i1 %1266, label %1267, label %1665

; <label>:1267                                    ; preds = %1262
  store i32 0, i32* %counter, align 4
  br label %1268

; <label>:1268                                    ; preds = %1603, %1476, %1267
  %1269 = load i32, i32* %counter, align 4
  %1270 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1271 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1270, i32 0, i32 11
  %1272 = getelementptr inbounds [3 x i32], [3 x i32]* %1271, i64 0, i64 0
  %1273 = load i32, i32* %1272, align 4
  %1274 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1275 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1274, i32 0, i32 11
  %1276 = getelementptr inbounds [3 x i32], [3 x i32]* %1275, i64 0, i64 1
  %1277 = load i32, i32* %1276, align 4
  %1278 = add i32 %1273, %1277
  %1279 = icmp ult i32 %1269, %1278
  br i1 %1279, label %1280, label %1611

; <label>:1280                                    ; preds = %1268
  br label %1281

; <label>:1281                                    ; preds = %1280
  %1282 = load i32, i32* %num_bits, align 4
  %1283 = icmp ult i32 %1282, 15
  br i1 %1283, label %1284, label %1425

; <label>:1284                                    ; preds = %1281
  %1285 = load i8*, i8** %pIn_buf_end, align 8
  %1286 = load i8*, i8** %pIn_buf_cur, align 8
  %1287 = ptrtoint i8* %1285 to i64
  %1288 = ptrtoint i8* %1286 to i64
  %1289 = sub i64 %1287, %1288
  %1290 = icmp slt i64 %1289, 2
  br i1 %1290, label %1291, label %1401

; <label>:1291                                    ; preds = %1284
  br label %1292

; <label>:1292                                    ; preds = %1397, %1291
  %1293 = load i64, i64* %bit_buf, align 8
  %1294 = and i64 %1293, 1023
  %1295 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1296 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1295, i32 0, i32 14
  %1297 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %1296, i64 0, i64 2
  %1298 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1297, i32 0, i32 1
  %1299 = getelementptr inbounds [1024 x i16], [1024 x i16]* %1298, i64 0, i64 %1294
  %1300 = load i16, i16* %1299, align 2
  %1301 = sext i16 %1300 to i32
  store i32 %1301, i32* %temp, align 4
  %1302 = load i32, i32* %temp, align 4
  %1303 = icmp sge i32 %1302, 0
  br i1 %1303, label %1304, label %1315

; <label>:1304                                    ; preds = %1292
  %1305 = load i32, i32* %temp, align 4
  %1306 = ashr i32 %1305, 9
  store i32 %1306, i32* %code_len, align 4
  %1307 = load i32, i32* %code_len, align 4
  %1308 = icmp ne i32 %1307, 0
  br i1 %1308, label %1309, label %1314

; <label>:1309                                    ; preds = %1304
  %1310 = load i32, i32* %num_bits, align 4
  %1311 = load i32, i32* %code_len, align 4
  %1312 = icmp uge i32 %1310, %1311
  br i1 %1312, label %1313, label %1314

; <label>:1313                                    ; preds = %1309
  br label %1400

; <label>:1314                                    ; preds = %1309, %1304
  br label %1353

; <label>:1315                                    ; preds = %1292
  %1316 = load i32, i32* %num_bits, align 4
  %1317 = icmp ugt i32 %1316, 10
  br i1 %1317, label %1318, label %1352

; <label>:1318                                    ; preds = %1315
  store i32 10, i32* %code_len, align 4
  br label %1319

; <label>:1319                                    ; preds = %1345, %1318
  %1320 = load i32, i32* %temp, align 4
  %1321 = xor i32 %1320, -1
  %1322 = sext i32 %1321 to i64
  %1323 = load i64, i64* %bit_buf, align 8
  %1324 = load i32, i32* %code_len, align 4
  %1325 = add i32 %1324, 1
  store i32 %1325, i32* %code_len, align 4
  %1326 = zext i32 %1324 to i64
  %1327 = lshr i64 %1323, %1326
  %1328 = and i64 %1327, 1
  %1329 = add i64 %1322, %1328
  %1330 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1331 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1330, i32 0, i32 14
  %1332 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %1331, i64 0, i64 2
  %1333 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1332, i32 0, i32 2
  %1334 = getelementptr inbounds [576 x i16], [576 x i16]* %1333, i64 0, i64 %1329
  %1335 = load i16, i16* %1334, align 2
  %1336 = sext i16 %1335 to i32
  store i32 %1336, i32* %temp, align 4
  br label %1337

; <label>:1337                                    ; preds = %1319
  %1338 = load i32, i32* %temp, align 4
  %1339 = icmp slt i32 %1338, 0
  br i1 %1339, label %1340, label %1345

; <label>:1340                                    ; preds = %1337
  %1341 = load i32, i32* %num_bits, align 4
  %1342 = load i32, i32* %code_len, align 4
  %1343 = add i32 %1342, 1
  %1344 = icmp uge i32 %1341, %1343
  br label %1345

; <label>:1345                                    ; preds = %1340, %1337
  %1346 = phi i1 [ false, %1337 ], [ %1344, %1340 ]
  br i1 %1346, label %1319, label %1347

; <label>:1347                                    ; preds = %1345
  %1348 = load i32, i32* %temp, align 4
  %1349 = icmp sge i32 %1348, 0
  br i1 %1349, label %1350, label %1351

; <label>:1350                                    ; preds = %1347
  br label %1400

; <label>:1351                                    ; preds = %1347
  br label %1352

; <label>:1352                                    ; preds = %1351, %1315
  br label %1353

; <label>:1353                                    ; preds = %1352, %1314
  br label %1354

; <label>:1354                                    ; preds = %1353
  %1355 = load i8*, i8** %pIn_buf_cur, align 8
  %1356 = load i8*, i8** %pIn_buf_end, align 8
  %1357 = icmp uge i8* %1355, %1356
  br i1 %1357, label %1358, label %1381

; <label>:1358                                    ; preds = %1354
  br label %1359

; <label>:1359                                    ; preds = %1379, %1358
  %1360 = load i32, i32* %8, align 4
  %1361 = and i32 %1360, 2
  %1362 = icmp ne i32 %1361, 0
  br i1 %1362, label %1363, label %1378

; <label>:1363                                    ; preds = %1359
  br label %1364

; <label>:1364                                    ; preds = %1363
  store i32 1, i32* %status, align 4
  %1365 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1366 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1365, i32 0, i32 0
  store i32 16, i32* %1366, align 8
  br label %2797

; <label>:1367                                    ; preds = %47
  br label %1368

; <label>:1368                                    ; preds = %1367
  %1369 = load i8*, i8** %pIn_buf_cur, align 8
  %1370 = load i8*, i8** %pIn_buf_end, align 8
  %1371 = icmp ult i8* %1369, %1370
  br i1 %1371, label %1372, label %1377

; <label>:1372                                    ; preds = %1368
  %1373 = load i8*, i8** %pIn_buf_cur, align 8
  %1374 = getelementptr inbounds i8, i8* %1373, i32 1
  store i8* %1374, i8** %pIn_buf_cur, align 8
  %1375 = load i8, i8* %1373, align 1
  %1376 = zext i8 %1375 to i32
  store i32 %1376, i32* %c8, align 4
  br label %1380

; <label>:1377                                    ; preds = %1368
  br label %1379

; <label>:1378                                    ; preds = %1359
  store i32 0, i32* %c8, align 4
  br label %1380

; <label>:1379                                    ; preds = %1377
  br label %1359

; <label>:1380                                    ; preds = %1378, %1372
  br label %1386

; <label>:1381                                    ; preds = %1354
  %1382 = load i8*, i8** %pIn_buf_cur, align 8
  %1383 = getelementptr inbounds i8, i8* %1382, i32 1
  store i8* %1383, i8** %pIn_buf_cur, align 8
  %1384 = load i8, i8* %1382, align 1
  %1385 = zext i8 %1384 to i32
  store i32 %1385, i32* %c8, align 4
  br label %1386

; <label>:1386                                    ; preds = %1381, %1380
  br label %1387

; <label>:1387                                    ; preds = %1386
  %1388 = load i32, i32* %c8, align 4
  %1389 = zext i32 %1388 to i64
  %1390 = load i32, i32* %num_bits, align 4
  %1391 = zext i32 %1390 to i64
  %1392 = shl i64 %1389, %1391
  %1393 = load i64, i64* %bit_buf, align 8
  %1394 = or i64 %1393, %1392
  store i64 %1394, i64* %bit_buf, align 8
  %1395 = load i32, i32* %num_bits, align 4
  %1396 = add i32 %1395, 8
  store i32 %1396, i32* %num_bits, align 4
  br label %1397

; <label>:1397                                    ; preds = %1387
  %1398 = load i32, i32* %num_bits, align 4
  %1399 = icmp ult i32 %1398, 15
  br i1 %1399, label %1292, label %1400

; <label>:1400                                    ; preds = %1397, %1350, %1313
  br label %1424

; <label>:1401                                    ; preds = %1284
  %1402 = load i8*, i8** %pIn_buf_cur, align 8
  %1403 = getelementptr inbounds i8, i8* %1402, i64 0
  %1404 = load i8, i8* %1403, align 1
  %1405 = zext i8 %1404 to i64
  %1406 = load i32, i32* %num_bits, align 4
  %1407 = zext i32 %1406 to i64
  %1408 = shl i64 %1405, %1407
  %1409 = load i8*, i8** %pIn_buf_cur, align 8
  %1410 = getelementptr inbounds i8, i8* %1409, i64 1
  %1411 = load i8, i8* %1410, align 1
  %1412 = zext i8 %1411 to i64
  %1413 = load i32, i32* %num_bits, align 4
  %1414 = add i32 %1413, 8
  %1415 = zext i32 %1414 to i64
  %1416 = shl i64 %1412, %1415
  %1417 = or i64 %1408, %1416
  %1418 = load i64, i64* %bit_buf, align 8
  %1419 = or i64 %1418, %1417
  store i64 %1419, i64* %bit_buf, align 8
  %1420 = load i8*, i8** %pIn_buf_cur, align 8
  %1421 = getelementptr inbounds i8, i8* %1420, i64 2
  store i8* %1421, i8** %pIn_buf_cur, align 8
  %1422 = load i32, i32* %num_bits, align 4
  %1423 = add i32 %1422, 16
  store i32 %1423, i32* %num_bits, align 4
  br label %1424

; <label>:1424                                    ; preds = %1401, %1400
  br label %1425

; <label>:1425                                    ; preds = %1424, %1281
  %1426 = load i64, i64* %bit_buf, align 8
  %1427 = and i64 %1426, 1023
  %1428 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1429 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1428, i32 0, i32 14
  %1430 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %1429, i64 0, i64 2
  %1431 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1430, i32 0, i32 1
  %1432 = getelementptr inbounds [1024 x i16], [1024 x i16]* %1431, i64 0, i64 %1427
  %1433 = load i16, i16* %1432, align 2
  %1434 = sext i16 %1433 to i32
  store i32 %1434, i32* %temp, align 4
  %1435 = icmp sge i32 %1434, 0
  br i1 %1435, label %1436, label %1441

; <label>:1436                                    ; preds = %1425
  %1437 = load i32, i32* %temp, align 4
  %1438 = ashr i32 %1437, 9
  store i32 %1438, i32* %code_len, align 4
  %1439 = load i32, i32* %temp, align 4
  %1440 = and i32 %1439, 511
  store i32 %1440, i32* %temp, align 4
  br label %1464

; <label>:1441                                    ; preds = %1425
  store i32 10, i32* %code_len, align 4
  br label %1442

; <label>:1442                                    ; preds = %1460, %1441
  %1443 = load i32, i32* %temp, align 4
  %1444 = xor i32 %1443, -1
  %1445 = sext i32 %1444 to i64
  %1446 = load i64, i64* %bit_buf, align 8
  %1447 = load i32, i32* %code_len, align 4
  %1448 = add i32 %1447, 1
  store i32 %1448, i32* %code_len, align 4
  %1449 = zext i32 %1447 to i64
  %1450 = lshr i64 %1446, %1449
  %1451 = and i64 %1450, 1
  %1452 = add i64 %1445, %1451
  %1453 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1454 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1453, i32 0, i32 14
  %1455 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %1454, i64 0, i64 2
  %1456 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1455, i32 0, i32 2
  %1457 = getelementptr inbounds [576 x i16], [576 x i16]* %1456, i64 0, i64 %1452
  %1458 = load i16, i16* %1457, align 2
  %1459 = sext i16 %1458 to i32
  store i32 %1459, i32* %temp, align 4
  br label %1460

; <label>:1460                                    ; preds = %1442
  %1461 = load i32, i32* %temp, align 4
  %1462 = icmp slt i32 %1461, 0
  br i1 %1462, label %1442, label %1463

; <label>:1463                                    ; preds = %1460
  br label %1464

; <label>:1464                                    ; preds = %1463, %1436
  %1465 = load i32, i32* %temp, align 4
  store i32 %1465, i32* %dist, align 4
  %1466 = load i32, i32* %code_len, align 4
  %1467 = load i64, i64* %bit_buf, align 8
  %1468 = zext i32 %1466 to i64
  %1469 = lshr i64 %1467, %1468
  store i64 %1469, i64* %bit_buf, align 8
  %1470 = load i32, i32* %code_len, align 4
  %1471 = load i32, i32* %num_bits, align 4
  %1472 = sub i32 %1471, %1470
  store i32 %1472, i32* %num_bits, align 4
  br label %1473

; <label>:1473                                    ; preds = %1464
  %1474 = load i32, i32* %dist, align 4
  %1475 = icmp ult i32 %1474, 16
  br i1 %1475, label %1476, label %1485

; <label>:1476                                    ; preds = %1473
  %1477 = load i32, i32* %dist, align 4
  %1478 = trunc i32 %1477 to i8
  %1479 = load i32, i32* %counter, align 4
  %1480 = add i32 %1479, 1
  store i32 %1480, i32* %counter, align 4
  %1481 = zext i32 %1479 to i64
  %1482 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1483 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1482, i32 0, i32 16
  %1484 = getelementptr inbounds [457 x i8], [457 x i8]* %1483, i64 0, i64 %1481
  store i8 %1478, i8* %1484, align 1
  br label %1268

; <label>:1485                                    ; preds = %1473
  %1486 = load i32, i32* %dist, align 4
  %1487 = icmp eq i32 %1486, 16
  br i1 %1487, label %1488, label %1500

; <label>:1488                                    ; preds = %1485
  %1489 = load i32, i32* %counter, align 4
  %1490 = icmp ne i32 %1489, 0
  br i1 %1490, label %1500, label %1491

; <label>:1491                                    ; preds = %1488
  br label %1492

; <label>:1492                                    ; preds = %1491
  br label %1493

; <label>:1493                                    ; preds = %1498, %1492
  br label %1494

; <label>:1494                                    ; preds = %1493
  store i32 -1, i32* %status, align 4
  %1495 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1496 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1495, i32 0, i32 0
  store i32 17, i32* %1496, align 8
  br label %2797

; <label>:1497                                    ; preds = %47
  br label %1498

; <label>:1498                                    ; preds = %1497
  br label %1493
                                                  ; No predecessors!
  br label %1500

; <label>:1500                                    ; preds = %1499, %1488, %1485
  %1501 = load i32, i32* %dist, align 4
  %1502 = sub i32 %1501, 16
  %1503 = zext i32 %1502 to i64
  %1504 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.12, i64 0, i64 %1503
  %1505 = load i8, i8* %1504, align 1
  %1506 = sext i8 %1505 to i32
  store i32 %1506, i32* %num_extra, align 4
  br label %1507

; <label>:1507                                    ; preds = %1500
  %1508 = load i32, i32* %num_bits, align 4
  %1509 = load i32, i32* %num_extra, align 4
  %1510 = icmp ult i32 %1508, %1509
  br i1 %1510, label %1511, label %1561

; <label>:1511                                    ; preds = %1507
  br label %1512

; <label>:1512                                    ; preds = %1556, %1511
  br label %1513

; <label>:1513                                    ; preds = %1512
  %1514 = load i8*, i8** %pIn_buf_cur, align 8
  %1515 = load i8*, i8** %pIn_buf_end, align 8
  %1516 = icmp uge i8* %1514, %1515
  br i1 %1516, label %1517, label %1540

; <label>:1517                                    ; preds = %1513
  br label %1518

; <label>:1518                                    ; preds = %1538, %1517
  %1519 = load i32, i32* %8, align 4
  %1520 = and i32 %1519, 2
  %1521 = icmp ne i32 %1520, 0
  br i1 %1521, label %1522, label %1537

; <label>:1522                                    ; preds = %1518
  br label %1523

; <label>:1523                                    ; preds = %1522
  store i32 1, i32* %status, align 4
  %1524 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1525 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1524, i32 0, i32 0
  store i32 18, i32* %1525, align 8
  br label %2797

; <label>:1526                                    ; preds = %47
  br label %1527

; <label>:1527                                    ; preds = %1526
  %1528 = load i8*, i8** %pIn_buf_cur, align 8
  %1529 = load i8*, i8** %pIn_buf_end, align 8
  %1530 = icmp ult i8* %1528, %1529
  br i1 %1530, label %1531, label %1536

; <label>:1531                                    ; preds = %1527
  %1532 = load i8*, i8** %pIn_buf_cur, align 8
  %1533 = getelementptr inbounds i8, i8* %1532, i32 1
  store i8* %1533, i8** %pIn_buf_cur, align 8
  %1534 = load i8, i8* %1532, align 1
  %1535 = zext i8 %1534 to i32
  store i32 %1535, i32* %c9, align 4
  br label %1539

; <label>:1536                                    ; preds = %1527
  br label %1538

; <label>:1537                                    ; preds = %1518
  store i32 0, i32* %c9, align 4
  br label %1539

; <label>:1538                                    ; preds = %1536
  br label %1518

; <label>:1539                                    ; preds = %1537, %1531
  br label %1545

; <label>:1540                                    ; preds = %1513
  %1541 = load i8*, i8** %pIn_buf_cur, align 8
  %1542 = getelementptr inbounds i8, i8* %1541, i32 1
  store i8* %1542, i8** %pIn_buf_cur, align 8
  %1543 = load i8, i8* %1541, align 1
  %1544 = zext i8 %1543 to i32
  store i32 %1544, i32* %c9, align 4
  br label %1545

; <label>:1545                                    ; preds = %1540, %1539
  br label %1546

; <label>:1546                                    ; preds = %1545
  %1547 = load i32, i32* %c9, align 4
  %1548 = zext i32 %1547 to i64
  %1549 = load i32, i32* %num_bits, align 4
  %1550 = zext i32 %1549 to i64
  %1551 = shl i64 %1548, %1550
  %1552 = load i64, i64* %bit_buf, align 8
  %1553 = or i64 %1552, %1551
  store i64 %1553, i64* %bit_buf, align 8
  %1554 = load i32, i32* %num_bits, align 4
  %1555 = add i32 %1554, 8
  store i32 %1555, i32* %num_bits, align 4
  br label %1556

; <label>:1556                                    ; preds = %1546
  %1557 = load i32, i32* %num_bits, align 4
  %1558 = load i32, i32* %num_extra, align 4
  %1559 = icmp ult i32 %1557, %1558
  br i1 %1559, label %1512, label %1560

; <label>:1560                                    ; preds = %1556
  br label %1561

; <label>:1561                                    ; preds = %1560, %1507
  %1562 = load i64, i64* %bit_buf, align 8
  %1563 = load i32, i32* %num_extra, align 4
  %1564 = shl i32 1, %1563
  %1565 = sub nsw i32 %1564, 1
  %1566 = sext i32 %1565 to i64
  %1567 = and i64 %1562, %1566
  %1568 = trunc i64 %1567 to i32
  store i32 %1568, i32* %s7, align 4
  %1569 = load i32, i32* %num_extra, align 4
  %1570 = load i64, i64* %bit_buf, align 8
  %1571 = zext i32 %1569 to i64
  %1572 = lshr i64 %1570, %1571
  store i64 %1572, i64* %bit_buf, align 8
  %1573 = load i32, i32* %num_extra, align 4
  %1574 = load i32, i32* %num_bits, align 4
  %1575 = sub i32 %1574, %1573
  store i32 %1575, i32* %num_bits, align 4
  br label %1576

; <label>:1576                                    ; preds = %1561
  %1577 = load i32, i32* %dist, align 4
  %1578 = sub i32 %1577, 16
  %1579 = zext i32 %1578 to i64
  %1580 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.13, i64 0, i64 %1579
  %1581 = load i8, i8* %1580, align 1
  %1582 = sext i8 %1581 to i32
  %1583 = load i32, i32* %s7, align 4
  %1584 = add i32 %1583, %1582
  store i32 %1584, i32* %s7, align 4
  %1585 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1586 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1585, i32 0, i32 16
  %1587 = getelementptr inbounds [457 x i8], [457 x i8]* %1586, i32 0, i32 0
  %1588 = load i32, i32* %counter, align 4
  %1589 = zext i32 %1588 to i64
  %1590 = getelementptr inbounds i8, i8* %1587, i64 %1589
  %1591 = load i32, i32* %dist, align 4
  %1592 = icmp eq i32 %1591, 16
  br i1 %1592, label %1593, label %1602

; <label>:1593                                    ; preds = %1576
  %1594 = load i32, i32* %counter, align 4
  %1595 = sub i32 %1594, 1
  %1596 = zext i32 %1595 to i64
  %1597 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1598 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1597, i32 0, i32 16
  %1599 = getelementptr inbounds [457 x i8], [457 x i8]* %1598, i64 0, i64 %1596
  %1600 = load i8, i8* %1599, align 1
  %1601 = zext i8 %1600 to i32
  br label %1603

; <label>:1602                                    ; preds = %1576
  br label %1603

; <label>:1603                                    ; preds = %1602, %1593
  %1604 = phi i32 [ %1601, %1593 ], [ 0, %1602 ]
  %1605 = trunc i32 %1604 to i8
  %1606 = load i32, i32* %s7, align 4
  %1607 = zext i32 %1606 to i64
  call void @llvm.memset.p0i8.i64(i8* %1590, i8 %1605, i64 %1607, i32 1, i1 false)
  %1608 = load i32, i32* %s7, align 4
  %1609 = load i32, i32* %counter, align 4
  %1610 = add i32 %1609, %1608
  store i32 %1610, i32* %counter, align 4
  br label %1268

; <label>:1611                                    ; preds = %1268
  %1612 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1613 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1612, i32 0, i32 11
  %1614 = getelementptr inbounds [3 x i32], [3 x i32]* %1613, i64 0, i64 0
  %1615 = load i32, i32* %1614, align 4
  %1616 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1617 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1616, i32 0, i32 11
  %1618 = getelementptr inbounds [3 x i32], [3 x i32]* %1617, i64 0, i64 1
  %1619 = load i32, i32* %1618, align 4
  %1620 = add i32 %1615, %1619
  %1621 = load i32, i32* %counter, align 4
  %1622 = icmp ne i32 %1620, %1621
  br i1 %1622, label %1623, label %1632

; <label>:1623                                    ; preds = %1611
  br label %1624

; <label>:1624                                    ; preds = %1623
  br label %1625

; <label>:1625                                    ; preds = %1630, %1624
  br label %1626

; <label>:1626                                    ; preds = %1625
  store i32 -1, i32* %status, align 4
  %1627 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1628 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1627, i32 0, i32 0
  store i32 21, i32* %1628, align 8
  br label %2797

; <label>:1629                                    ; preds = %47
  br label %1630

; <label>:1630                                    ; preds = %1629
  br label %1625
                                                  ; No predecessors!
  br label %1632

; <label>:1632                                    ; preds = %1631, %1611
  %1633 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1634 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1633, i32 0, i32 14
  %1635 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %1634, i64 0, i64 0
  %1636 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1635, i32 0, i32 0
  %1637 = getelementptr inbounds [288 x i8], [288 x i8]* %1636, i32 0, i32 0
  %1638 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1639 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1638, i32 0, i32 16
  %1640 = getelementptr inbounds [457 x i8], [457 x i8]* %1639, i32 0, i32 0
  %1641 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1642 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1641, i32 0, i32 11
  %1643 = getelementptr inbounds [3 x i32], [3 x i32]* %1642, i64 0, i64 0
  %1644 = load i32, i32* %1643, align 4
  %1645 = zext i32 %1644 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1637, i8* %1640, i64 %1645, i32 4, i1 false)
  %1646 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1647 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1646, i32 0, i32 14
  %1648 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %1647, i64 0, i64 1
  %1649 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1648, i32 0, i32 0
  %1650 = getelementptr inbounds [288 x i8], [288 x i8]* %1649, i32 0, i32 0
  %1651 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1652 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1651, i32 0, i32 16
  %1653 = getelementptr inbounds [457 x i8], [457 x i8]* %1652, i32 0, i32 0
  %1654 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1655 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1654, i32 0, i32 11
  %1656 = getelementptr inbounds [3 x i32], [3 x i32]* %1655, i64 0, i64 0
  %1657 = load i32, i32* %1656, align 4
  %1658 = zext i32 %1657 to i64
  %1659 = getelementptr inbounds i8, i8* %1653, i64 %1658
  %1660 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1661 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1660, i32 0, i32 11
  %1662 = getelementptr inbounds [3 x i32], [3 x i32]* %1661, i64 0, i64 1
  %1663 = load i32, i32* %1662, align 4
  %1664 = zext i32 %1663 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1650, i8* %1659, i64 %1664, i32 1, i1 false)
  br label %1665

; <label>:1665                                    ; preds = %1632, %1262
  br label %1666

; <label>:1666                                    ; preds = %1665
  %1667 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1668 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1667, i32 0, i32 6
  %1669 = load i32, i32* %1668, align 8
  %1670 = add i32 %1669, -1
  store i32 %1670, i32* %1668, align 8
  br label %1018

; <label>:1671                                    ; preds = %1018
  br label %1672

; <label>:1672                                    ; preds = %2588, %2538, %2476, %1671
  br label %1673

; <label>:1673                                    ; preds = %2030, %1672
  %1674 = load i8*, i8** %pIn_buf_end, align 8
  %1675 = load i8*, i8** %pIn_buf_cur, align 8
  %1676 = ptrtoint i8* %1674 to i64
  %1677 = ptrtoint i8* %1675 to i64
  %1678 = sub i64 %1676, %1677
  %1679 = icmp slt i64 %1678, 4
  br i1 %1679, label %1687, label %1680

; <label>:1680                                    ; preds = %1673
  %1681 = load i8*, i8** %pOut_buf_end, align 8
  %1682 = load i8*, i8** %pOut_buf_cur, align 8
  %1683 = ptrtoint i8* %1681 to i64
  %1684 = ptrtoint i8* %1682 to i64
  %1685 = sub i64 %1683, %1684
  %1686 = icmp slt i64 %1685, 2
  br i1 %1686, label %1687, label %1900

; <label>:1687                                    ; preds = %1680, %1673
  br label %1688

; <label>:1688                                    ; preds = %1687
  %1689 = load i32, i32* %num_bits, align 4
  %1690 = icmp ult i32 %1689, 15
  br i1 %1690, label %1691, label %1832

; <label>:1691                                    ; preds = %1688
  %1692 = load i8*, i8** %pIn_buf_end, align 8
  %1693 = load i8*, i8** %pIn_buf_cur, align 8
  %1694 = ptrtoint i8* %1692 to i64
  %1695 = ptrtoint i8* %1693 to i64
  %1696 = sub i64 %1694, %1695
  %1697 = icmp slt i64 %1696, 2
  br i1 %1697, label %1698, label %1808

; <label>:1698                                    ; preds = %1691
  br label %1699

; <label>:1699                                    ; preds = %1804, %1698
  %1700 = load i64, i64* %bit_buf, align 8
  %1701 = and i64 %1700, 1023
  %1702 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1703 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1702, i32 0, i32 14
  %1704 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %1703, i64 0, i64 0
  %1705 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1704, i32 0, i32 1
  %1706 = getelementptr inbounds [1024 x i16], [1024 x i16]* %1705, i64 0, i64 %1701
  %1707 = load i16, i16* %1706, align 2
  %1708 = sext i16 %1707 to i32
  store i32 %1708, i32* %temp10, align 4
  %1709 = load i32, i32* %temp10, align 4
  %1710 = icmp sge i32 %1709, 0
  br i1 %1710, label %1711, label %1722

; <label>:1711                                    ; preds = %1699
  %1712 = load i32, i32* %temp10, align 4
  %1713 = ashr i32 %1712, 9
  store i32 %1713, i32* %code_len11, align 4
  %1714 = load i32, i32* %code_len11, align 4
  %1715 = icmp ne i32 %1714, 0
  br i1 %1715, label %1716, label %1721

; <label>:1716                                    ; preds = %1711
  %1717 = load i32, i32* %num_bits, align 4
  %1718 = load i32, i32* %code_len11, align 4
  %1719 = icmp uge i32 %1717, %1718
  br i1 %1719, label %1720, label %1721

; <label>:1720                                    ; preds = %1716
  br label %1807

; <label>:1721                                    ; preds = %1716, %1711
  br label %1760

; <label>:1722                                    ; preds = %1699
  %1723 = load i32, i32* %num_bits, align 4
  %1724 = icmp ugt i32 %1723, 10
  br i1 %1724, label %1725, label %1759

; <label>:1725                                    ; preds = %1722
  store i32 10, i32* %code_len11, align 4
  br label %1726

; <label>:1726                                    ; preds = %1752, %1725
  %1727 = load i32, i32* %temp10, align 4
  %1728 = xor i32 %1727, -1
  %1729 = sext i32 %1728 to i64
  %1730 = load i64, i64* %bit_buf, align 8
  %1731 = load i32, i32* %code_len11, align 4
  %1732 = add i32 %1731, 1
  store i32 %1732, i32* %code_len11, align 4
  %1733 = zext i32 %1731 to i64
  %1734 = lshr i64 %1730, %1733
  %1735 = and i64 %1734, 1
  %1736 = add i64 %1729, %1735
  %1737 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1738 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1737, i32 0, i32 14
  %1739 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %1738, i64 0, i64 0
  %1740 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1739, i32 0, i32 2
  %1741 = getelementptr inbounds [576 x i16], [576 x i16]* %1740, i64 0, i64 %1736
  %1742 = load i16, i16* %1741, align 2
  %1743 = sext i16 %1742 to i32
  store i32 %1743, i32* %temp10, align 4
  br label %1744

; <label>:1744                                    ; preds = %1726
  %1745 = load i32, i32* %temp10, align 4
  %1746 = icmp slt i32 %1745, 0
  br i1 %1746, label %1747, label %1752

; <label>:1747                                    ; preds = %1744
  %1748 = load i32, i32* %num_bits, align 4
  %1749 = load i32, i32* %code_len11, align 4
  %1750 = add i32 %1749, 1
  %1751 = icmp uge i32 %1748, %1750
  br label %1752

; <label>:1752                                    ; preds = %1747, %1744
  %1753 = phi i1 [ false, %1744 ], [ %1751, %1747 ]
  br i1 %1753, label %1726, label %1754

; <label>:1754                                    ; preds = %1752
  %1755 = load i32, i32* %temp10, align 4
  %1756 = icmp sge i32 %1755, 0
  br i1 %1756, label %1757, label %1758

; <label>:1757                                    ; preds = %1754
  br label %1807

; <label>:1758                                    ; preds = %1754
  br label %1759

; <label>:1759                                    ; preds = %1758, %1722
  br label %1760

; <label>:1760                                    ; preds = %1759, %1721
  br label %1761

; <label>:1761                                    ; preds = %1760
  %1762 = load i8*, i8** %pIn_buf_cur, align 8
  %1763 = load i8*, i8** %pIn_buf_end, align 8
  %1764 = icmp uge i8* %1762, %1763
  br i1 %1764, label %1765, label %1788

; <label>:1765                                    ; preds = %1761
  br label %1766

; <label>:1766                                    ; preds = %1786, %1765
  %1767 = load i32, i32* %8, align 4
  %1768 = and i32 %1767, 2
  %1769 = icmp ne i32 %1768, 0
  br i1 %1769, label %1770, label %1785

; <label>:1770                                    ; preds = %1766
  br label %1771

; <label>:1771                                    ; preds = %1770
  store i32 1, i32* %status, align 4
  %1772 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1773 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1772, i32 0, i32 0
  store i32 23, i32* %1773, align 8
  br label %2797

; <label>:1774                                    ; preds = %47
  br label %1775

; <label>:1775                                    ; preds = %1774
  %1776 = load i8*, i8** %pIn_buf_cur, align 8
  %1777 = load i8*, i8** %pIn_buf_end, align 8
  %1778 = icmp ult i8* %1776, %1777
  br i1 %1778, label %1779, label %1784

; <label>:1779                                    ; preds = %1775
  %1780 = load i8*, i8** %pIn_buf_cur, align 8
  %1781 = getelementptr inbounds i8, i8* %1780, i32 1
  store i8* %1781, i8** %pIn_buf_cur, align 8
  %1782 = load i8, i8* %1780, align 1
  %1783 = zext i8 %1782 to i32
  store i32 %1783, i32* %c12, align 4
  br label %1787

; <label>:1784                                    ; preds = %1775
  br label %1786

; <label>:1785                                    ; preds = %1766
  store i32 0, i32* %c12, align 4
  br label %1787

; <label>:1786                                    ; preds = %1784
  br label %1766

; <label>:1787                                    ; preds = %1785, %1779
  br label %1793

; <label>:1788                                    ; preds = %1761
  %1789 = load i8*, i8** %pIn_buf_cur, align 8
  %1790 = getelementptr inbounds i8, i8* %1789, i32 1
  store i8* %1790, i8** %pIn_buf_cur, align 8
  %1791 = load i8, i8* %1789, align 1
  %1792 = zext i8 %1791 to i32
  store i32 %1792, i32* %c12, align 4
  br label %1793

; <label>:1793                                    ; preds = %1788, %1787
  br label %1794

; <label>:1794                                    ; preds = %1793
  %1795 = load i32, i32* %c12, align 4
  %1796 = zext i32 %1795 to i64
  %1797 = load i32, i32* %num_bits, align 4
  %1798 = zext i32 %1797 to i64
  %1799 = shl i64 %1796, %1798
  %1800 = load i64, i64* %bit_buf, align 8
  %1801 = or i64 %1800, %1799
  store i64 %1801, i64* %bit_buf, align 8
  %1802 = load i32, i32* %num_bits, align 4
  %1803 = add i32 %1802, 8
  store i32 %1803, i32* %num_bits, align 4
  br label %1804

; <label>:1804                                    ; preds = %1794
  %1805 = load i32, i32* %num_bits, align 4
  %1806 = icmp ult i32 %1805, 15
  br i1 %1806, label %1699, label %1807

; <label>:1807                                    ; preds = %1804, %1757, %1720
  br label %1831

; <label>:1808                                    ; preds = %1691
  %1809 = load i8*, i8** %pIn_buf_cur, align 8
  %1810 = getelementptr inbounds i8, i8* %1809, i64 0
  %1811 = load i8, i8* %1810, align 1
  %1812 = zext i8 %1811 to i64
  %1813 = load i32, i32* %num_bits, align 4
  %1814 = zext i32 %1813 to i64
  %1815 = shl i64 %1812, %1814
  %1816 = load i8*, i8** %pIn_buf_cur, align 8
  %1817 = getelementptr inbounds i8, i8* %1816, i64 1
  %1818 = load i8, i8* %1817, align 1
  %1819 = zext i8 %1818 to i64
  %1820 = load i32, i32* %num_bits, align 4
  %1821 = add i32 %1820, 8
  %1822 = zext i32 %1821 to i64
  %1823 = shl i64 %1819, %1822
  %1824 = or i64 %1815, %1823
  %1825 = load i64, i64* %bit_buf, align 8
  %1826 = or i64 %1825, %1824
  store i64 %1826, i64* %bit_buf, align 8
  %1827 = load i8*, i8** %pIn_buf_cur, align 8
  %1828 = getelementptr inbounds i8, i8* %1827, i64 2
  store i8* %1828, i8** %pIn_buf_cur, align 8
  %1829 = load i32, i32* %num_bits, align 4
  %1830 = add i32 %1829, 16
  store i32 %1830, i32* %num_bits, align 4
  br label %1831

; <label>:1831                                    ; preds = %1808, %1807
  br label %1832

; <label>:1832                                    ; preds = %1831, %1688
  %1833 = load i64, i64* %bit_buf, align 8
  %1834 = and i64 %1833, 1023
  %1835 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1836 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1835, i32 0, i32 14
  %1837 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %1836, i64 0, i64 0
  %1838 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1837, i32 0, i32 1
  %1839 = getelementptr inbounds [1024 x i16], [1024 x i16]* %1838, i64 0, i64 %1834
  %1840 = load i16, i16* %1839, align 2
  %1841 = sext i16 %1840 to i32
  store i32 %1841, i32* %temp10, align 4
  %1842 = icmp sge i32 %1841, 0
  br i1 %1842, label %1843, label %1848

; <label>:1843                                    ; preds = %1832
  %1844 = load i32, i32* %temp10, align 4
  %1845 = ashr i32 %1844, 9
  store i32 %1845, i32* %code_len11, align 4
  %1846 = load i32, i32* %temp10, align 4
  %1847 = and i32 %1846, 511
  store i32 %1847, i32* %temp10, align 4
  br label %1871

; <label>:1848                                    ; preds = %1832
  store i32 10, i32* %code_len11, align 4
  br label %1849

; <label>:1849                                    ; preds = %1867, %1848
  %1850 = load i32, i32* %temp10, align 4
  %1851 = xor i32 %1850, -1
  %1852 = sext i32 %1851 to i64
  %1853 = load i64, i64* %bit_buf, align 8
  %1854 = load i32, i32* %code_len11, align 4
  %1855 = add i32 %1854, 1
  store i32 %1855, i32* %code_len11, align 4
  %1856 = zext i32 %1854 to i64
  %1857 = lshr i64 %1853, %1856
  %1858 = and i64 %1857, 1
  %1859 = add i64 %1852, %1858
  %1860 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1861 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1860, i32 0, i32 14
  %1862 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %1861, i64 0, i64 0
  %1863 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1862, i32 0, i32 2
  %1864 = getelementptr inbounds [576 x i16], [576 x i16]* %1863, i64 0, i64 %1859
  %1865 = load i16, i16* %1864, align 2
  %1866 = sext i16 %1865 to i32
  store i32 %1866, i32* %temp10, align 4
  br label %1867

; <label>:1867                                    ; preds = %1849
  %1868 = load i32, i32* %temp10, align 4
  %1869 = icmp slt i32 %1868, 0
  br i1 %1869, label %1849, label %1870

; <label>:1870                                    ; preds = %1867
  br label %1871

; <label>:1871                                    ; preds = %1870, %1843
  %1872 = load i32, i32* %temp10, align 4
  store i32 %1872, i32* %counter, align 4
  %1873 = load i32, i32* %code_len11, align 4
  %1874 = load i64, i64* %bit_buf, align 8
  %1875 = zext i32 %1873 to i64
  %1876 = lshr i64 %1874, %1875
  store i64 %1876, i64* %bit_buf, align 8
  %1877 = load i32, i32* %code_len11, align 4
  %1878 = load i32, i32* %num_bits, align 4
  %1879 = sub i32 %1878, %1877
  store i32 %1879, i32* %num_bits, align 4
  br label %1880

; <label>:1880                                    ; preds = %1871
  %1881 = load i32, i32* %counter, align 4
  %1882 = icmp uge i32 %1881, 256
  br i1 %1882, label %1883, label %1884

; <label>:1883                                    ; preds = %1880
  br label %2031

; <label>:1884                                    ; preds = %1880
  br label %1885

; <label>:1885                                    ; preds = %1894, %1884
  %1886 = load i8*, i8** %pOut_buf_cur, align 8
  %1887 = load i8*, i8** %pOut_buf_end, align 8
  %1888 = icmp uge i8* %1886, %1887
  br i1 %1888, label %1889, label %1895

; <label>:1889                                    ; preds = %1885
  br label %1890

; <label>:1890                                    ; preds = %1889
  store i32 2, i32* %status, align 4
  %1891 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1892 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1891, i32 0, i32 0
  store i32 24, i32* %1892, align 8
  br label %2797

; <label>:1893                                    ; preds = %47
  br label %1894

; <label>:1894                                    ; preds = %1893
  br label %1885

; <label>:1895                                    ; preds = %1885
  %1896 = load i32, i32* %counter, align 4
  %1897 = trunc i32 %1896 to i8
  %1898 = load i8*, i8** %pOut_buf_cur, align 8
  %1899 = getelementptr inbounds i8, i8* %1898, i32 1
  store i8* %1899, i8** %pOut_buf_cur, align 8
  store i8 %1897, i8* %1898, align 1
  br label %2030

; <label>:1900                                    ; preds = %1680
  %1901 = load i32, i32* %num_bits, align 4
  %1902 = icmp ult i32 %1901, 30
  br i1 %1902, label %1903, label %1917

; <label>:1903                                    ; preds = %1900
  %1904 = load i8*, i8** %pIn_buf_cur, align 8
  %1905 = bitcast i8* %1904 to i32*
  %1906 = load i32, i32* %1905, align 4
  %1907 = zext i32 %1906 to i64
  %1908 = load i32, i32* %num_bits, align 4
  %1909 = zext i32 %1908 to i64
  %1910 = shl i64 %1907, %1909
  %1911 = load i64, i64* %bit_buf, align 8
  %1912 = or i64 %1911, %1910
  store i64 %1912, i64* %bit_buf, align 8
  %1913 = load i8*, i8** %pIn_buf_cur, align 8
  %1914 = getelementptr inbounds i8, i8* %1913, i64 4
  store i8* %1914, i8** %pIn_buf_cur, align 8
  %1915 = load i32, i32* %num_bits, align 4
  %1916 = add i32 %1915, 32
  store i32 %1916, i32* %num_bits, align 4
  br label %1917

; <label>:1917                                    ; preds = %1903, %1900
  %1918 = load i64, i64* %bit_buf, align 8
  %1919 = and i64 %1918, 1023
  %1920 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1921 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1920, i32 0, i32 14
  %1922 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %1921, i64 0, i64 0
  %1923 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1922, i32 0, i32 1
  %1924 = getelementptr inbounds [1024 x i16], [1024 x i16]* %1923, i64 0, i64 %1919
  %1925 = load i16, i16* %1924, align 2
  %1926 = sext i16 %1925 to i32
  store i32 %1926, i32* %sym2, align 4
  %1927 = icmp sge i32 %1926, 0
  br i1 %1927, label %1928, label %1931

; <label>:1928                                    ; preds = %1917
  %1929 = load i32, i32* %sym2, align 4
  %1930 = ashr i32 %1929, 9
  store i32 %1930, i32* %code_len13, align 4
  br label %1954

; <label>:1931                                    ; preds = %1917
  store i32 10, i32* %code_len13, align 4
  br label %1932

; <label>:1932                                    ; preds = %1950, %1931
  %1933 = load i32, i32* %sym2, align 4
  %1934 = xor i32 %1933, -1
  %1935 = sext i32 %1934 to i64
  %1936 = load i64, i64* %bit_buf, align 8
  %1937 = load i32, i32* %code_len13, align 4
  %1938 = add i32 %1937, 1
  store i32 %1938, i32* %code_len13, align 4
  %1939 = zext i32 %1937 to i64
  %1940 = lshr i64 %1936, %1939
  %1941 = and i64 %1940, 1
  %1942 = add i64 %1935, %1941
  %1943 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1944 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1943, i32 0, i32 14
  %1945 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %1944, i64 0, i64 0
  %1946 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1945, i32 0, i32 2
  %1947 = getelementptr inbounds [576 x i16], [576 x i16]* %1946, i64 0, i64 %1942
  %1948 = load i16, i16* %1947, align 2
  %1949 = sext i16 %1948 to i32
  store i32 %1949, i32* %sym2, align 4
  br label %1950

; <label>:1950                                    ; preds = %1932
  %1951 = load i32, i32* %sym2, align 4
  %1952 = icmp slt i32 %1951, 0
  br i1 %1952, label %1932, label %1953

; <label>:1953                                    ; preds = %1950
  br label %1954

; <label>:1954                                    ; preds = %1953, %1928
  %1955 = load i32, i32* %sym2, align 4
  store i32 %1955, i32* %counter, align 4
  %1956 = load i32, i32* %code_len13, align 4
  %1957 = load i64, i64* %bit_buf, align 8
  %1958 = zext i32 %1956 to i64
  %1959 = lshr i64 %1957, %1958
  store i64 %1959, i64* %bit_buf, align 8
  %1960 = load i32, i32* %code_len13, align 4
  %1961 = load i32, i32* %num_bits, align 4
  %1962 = sub i32 %1961, %1960
  store i32 %1962, i32* %num_bits, align 4
  %1963 = load i32, i32* %counter, align 4
  %1964 = and i32 %1963, 256
  %1965 = icmp ne i32 %1964, 0
  br i1 %1965, label %1966, label %1967

; <label>:1966                                    ; preds = %1954
  br label %2031

; <label>:1967                                    ; preds = %1954
  %1968 = load i64, i64* %bit_buf, align 8
  %1969 = and i64 %1968, 1023
  %1970 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1971 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1970, i32 0, i32 14
  %1972 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %1971, i64 0, i64 0
  %1973 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1972, i32 0, i32 1
  %1974 = getelementptr inbounds [1024 x i16], [1024 x i16]* %1973, i64 0, i64 %1969
  %1975 = load i16, i16* %1974, align 2
  %1976 = sext i16 %1975 to i32
  store i32 %1976, i32* %sym2, align 4
  %1977 = icmp sge i32 %1976, 0
  br i1 %1977, label %1978, label %1981

; <label>:1978                                    ; preds = %1967
  %1979 = load i32, i32* %sym2, align 4
  %1980 = ashr i32 %1979, 9
  store i32 %1980, i32* %code_len13, align 4
  br label %2004

; <label>:1981                                    ; preds = %1967
  store i32 10, i32* %code_len13, align 4
  br label %1982

; <label>:1982                                    ; preds = %2000, %1981
  %1983 = load i32, i32* %sym2, align 4
  %1984 = xor i32 %1983, -1
  %1985 = sext i32 %1984 to i64
  %1986 = load i64, i64* %bit_buf, align 8
  %1987 = load i32, i32* %code_len13, align 4
  %1988 = add i32 %1987, 1
  store i32 %1988, i32* %code_len13, align 4
  %1989 = zext i32 %1987 to i64
  %1990 = lshr i64 %1986, %1989
  %1991 = and i64 %1990, 1
  %1992 = add i64 %1985, %1991
  %1993 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %1994 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %1993, i32 0, i32 14
  %1995 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %1994, i64 0, i64 0
  %1996 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %1995, i32 0, i32 2
  %1997 = getelementptr inbounds [576 x i16], [576 x i16]* %1996, i64 0, i64 %1992
  %1998 = load i16, i16* %1997, align 2
  %1999 = sext i16 %1998 to i32
  store i32 %1999, i32* %sym2, align 4
  br label %2000

; <label>:2000                                    ; preds = %1982
  %2001 = load i32, i32* %sym2, align 4
  %2002 = icmp slt i32 %2001, 0
  br i1 %2002, label %1982, label %2003

; <label>:2003                                    ; preds = %2000
  br label %2004

; <label>:2004                                    ; preds = %2003, %1978
  %2005 = load i32, i32* %code_len13, align 4
  %2006 = load i64, i64* %bit_buf, align 8
  %2007 = zext i32 %2005 to i64
  %2008 = lshr i64 %2006, %2007
  store i64 %2008, i64* %bit_buf, align 8
  %2009 = load i32, i32* %code_len13, align 4
  %2010 = load i32, i32* %num_bits, align 4
  %2011 = sub i32 %2010, %2009
  store i32 %2011, i32* %num_bits, align 4
  %2012 = load i32, i32* %counter, align 4
  %2013 = trunc i32 %2012 to i8
  %2014 = load i8*, i8** %pOut_buf_cur, align 8
  %2015 = getelementptr inbounds i8, i8* %2014, i64 0
  store i8 %2013, i8* %2015, align 1
  %2016 = load i32, i32* %sym2, align 4
  %2017 = and i32 %2016, 256
  %2018 = icmp ne i32 %2017, 0
  br i1 %2018, label %2019, label %2023

; <label>:2019                                    ; preds = %2004
  %2020 = load i8*, i8** %pOut_buf_cur, align 8
  %2021 = getelementptr inbounds i8, i8* %2020, i32 1
  store i8* %2021, i8** %pOut_buf_cur, align 8
  %2022 = load i32, i32* %sym2, align 4
  store i32 %2022, i32* %counter, align 4
  br label %2031

; <label>:2023                                    ; preds = %2004
  %2024 = load i32, i32* %sym2, align 4
  %2025 = trunc i32 %2024 to i8
  %2026 = load i8*, i8** %pOut_buf_cur, align 8
  %2027 = getelementptr inbounds i8, i8* %2026, i64 1
  store i8 %2025, i8* %2027, align 1
  %2028 = load i8*, i8** %pOut_buf_cur, align 8
  %2029 = getelementptr inbounds i8, i8* %2028, i64 2
  store i8* %2029, i8** %pOut_buf_cur, align 8
  br label %2030

; <label>:2030                                    ; preds = %2023, %1895
  br label %1673

; <label>:2031                                    ; preds = %2019, %1966, %1883
  %2032 = load i32, i32* %counter, align 4
  %2033 = and i32 %2032, 511
  store i32 %2033, i32* %counter, align 4
  %2034 = icmp eq i32 %2033, 256
  br i1 %2034, label %2035, label %2036

; <label>:2035                                    ; preds = %2031
  br label %2589

; <label>:2036                                    ; preds = %2031
  %2037 = load i32, i32* %counter, align 4
  %2038 = sub i32 %2037, 257
  %2039 = zext i32 %2038 to i64
  %2040 = getelementptr inbounds [31 x i32], [31 x i32]* @tinfl_decompress.s_length_extra, i64 0, i64 %2039
  %2041 = load i32, i32* %2040, align 4
  store i32 %2041, i32* %num_extra, align 4
  %2042 = load i32, i32* %counter, align 4
  %2043 = sub i32 %2042, 257
  %2044 = zext i32 %2043 to i64
  %2045 = getelementptr inbounds [31 x i32], [31 x i32]* @tinfl_decompress.s_length_base, i64 0, i64 %2044
  %2046 = load i32, i32* %2045, align 4
  store i32 %2046, i32* %counter, align 4
  %2047 = load i32, i32* %num_extra, align 4
  %2048 = icmp ne i32 %2047, 0
  br i1 %2048, label %2049, label %2123

; <label>:2049                                    ; preds = %2036
  br label %2050

; <label>:2050                                    ; preds = %2049
  %2051 = load i32, i32* %num_bits, align 4
  %2052 = load i32, i32* %num_extra, align 4
  %2053 = icmp ult i32 %2051, %2052
  br i1 %2053, label %2054, label %2104

; <label>:2054                                    ; preds = %2050
  br label %2055

; <label>:2055                                    ; preds = %2099, %2054
  br label %2056

; <label>:2056                                    ; preds = %2055
  %2057 = load i8*, i8** %pIn_buf_cur, align 8
  %2058 = load i8*, i8** %pIn_buf_end, align 8
  %2059 = icmp uge i8* %2057, %2058
  br i1 %2059, label %2060, label %2083

; <label>:2060                                    ; preds = %2056
  br label %2061

; <label>:2061                                    ; preds = %2081, %2060
  %2062 = load i32, i32* %8, align 4
  %2063 = and i32 %2062, 2
  %2064 = icmp ne i32 %2063, 0
  br i1 %2064, label %2065, label %2080

; <label>:2065                                    ; preds = %2061
  br label %2066

; <label>:2066                                    ; preds = %2065
  store i32 1, i32* %status, align 4
  %2067 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2068 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2067, i32 0, i32 0
  store i32 25, i32* %2068, align 8
  br label %2797

; <label>:2069                                    ; preds = %47
  br label %2070

; <label>:2070                                    ; preds = %2069
  %2071 = load i8*, i8** %pIn_buf_cur, align 8
  %2072 = load i8*, i8** %pIn_buf_end, align 8
  %2073 = icmp ult i8* %2071, %2072
  br i1 %2073, label %2074, label %2079

; <label>:2074                                    ; preds = %2070
  %2075 = load i8*, i8** %pIn_buf_cur, align 8
  %2076 = getelementptr inbounds i8, i8* %2075, i32 1
  store i8* %2076, i8** %pIn_buf_cur, align 8
  %2077 = load i8, i8* %2075, align 1
  %2078 = zext i8 %2077 to i32
  store i32 %2078, i32* %c14, align 4
  br label %2082

; <label>:2079                                    ; preds = %2070
  br label %2081

; <label>:2080                                    ; preds = %2061
  store i32 0, i32* %c14, align 4
  br label %2082

; <label>:2081                                    ; preds = %2079
  br label %2061

; <label>:2082                                    ; preds = %2080, %2074
  br label %2088

; <label>:2083                                    ; preds = %2056
  %2084 = load i8*, i8** %pIn_buf_cur, align 8
  %2085 = getelementptr inbounds i8, i8* %2084, i32 1
  store i8* %2085, i8** %pIn_buf_cur, align 8
  %2086 = load i8, i8* %2084, align 1
  %2087 = zext i8 %2086 to i32
  store i32 %2087, i32* %c14, align 4
  br label %2088

; <label>:2088                                    ; preds = %2083, %2082
  br label %2089

; <label>:2089                                    ; preds = %2088
  %2090 = load i32, i32* %c14, align 4
  %2091 = zext i32 %2090 to i64
  %2092 = load i32, i32* %num_bits, align 4
  %2093 = zext i32 %2092 to i64
  %2094 = shl i64 %2091, %2093
  %2095 = load i64, i64* %bit_buf, align 8
  %2096 = or i64 %2095, %2094
  store i64 %2096, i64* %bit_buf, align 8
  %2097 = load i32, i32* %num_bits, align 4
  %2098 = add i32 %2097, 8
  store i32 %2098, i32* %num_bits, align 4
  br label %2099

; <label>:2099                                    ; preds = %2089
  %2100 = load i32, i32* %num_bits, align 4
  %2101 = load i32, i32* %num_extra, align 4
  %2102 = icmp ult i32 %2100, %2101
  br i1 %2102, label %2055, label %2103

; <label>:2103                                    ; preds = %2099
  br label %2104

; <label>:2104                                    ; preds = %2103, %2050
  %2105 = load i64, i64* %bit_buf, align 8
  %2106 = load i32, i32* %num_extra, align 4
  %2107 = shl i32 1, %2106
  %2108 = sub nsw i32 %2107, 1
  %2109 = sext i32 %2108 to i64
  %2110 = and i64 %2105, %2109
  %2111 = trunc i64 %2110 to i32
  store i32 %2111, i32* %extra_bits, align 4
  %2112 = load i32, i32* %num_extra, align 4
  %2113 = load i64, i64* %bit_buf, align 8
  %2114 = zext i32 %2112 to i64
  %2115 = lshr i64 %2113, %2114
  store i64 %2115, i64* %bit_buf, align 8
  %2116 = load i32, i32* %num_extra, align 4
  %2117 = load i32, i32* %num_bits, align 4
  %2118 = sub i32 %2117, %2116
  store i32 %2118, i32* %num_bits, align 4
  br label %2119

; <label>:2119                                    ; preds = %2104
  %2120 = load i32, i32* %extra_bits, align 4
  %2121 = load i32, i32* %counter, align 4
  %2122 = add i32 %2121, %2120
  store i32 %2122, i32* %counter, align 4
  br label %2123

; <label>:2123                                    ; preds = %2119, %2036
  br label %2124

; <label>:2124                                    ; preds = %2123
  %2125 = load i32, i32* %num_bits, align 4
  %2126 = icmp ult i32 %2125, 15
  br i1 %2126, label %2127, label %2268

; <label>:2127                                    ; preds = %2124
  %2128 = load i8*, i8** %pIn_buf_end, align 8
  %2129 = load i8*, i8** %pIn_buf_cur, align 8
  %2130 = ptrtoint i8* %2128 to i64
  %2131 = ptrtoint i8* %2129 to i64
  %2132 = sub i64 %2130, %2131
  %2133 = icmp slt i64 %2132, 2
  br i1 %2133, label %2134, label %2244

; <label>:2134                                    ; preds = %2127
  br label %2135

; <label>:2135                                    ; preds = %2240, %2134
  %2136 = load i64, i64* %bit_buf, align 8
  %2137 = and i64 %2136, 1023
  %2138 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2139 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2138, i32 0, i32 14
  %2140 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %2139, i64 0, i64 1
  %2141 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %2140, i32 0, i32 1
  %2142 = getelementptr inbounds [1024 x i16], [1024 x i16]* %2141, i64 0, i64 %2137
  %2143 = load i16, i16* %2142, align 2
  %2144 = sext i16 %2143 to i32
  store i32 %2144, i32* %temp15, align 4
  %2145 = load i32, i32* %temp15, align 4
  %2146 = icmp sge i32 %2145, 0
  br i1 %2146, label %2147, label %2158

; <label>:2147                                    ; preds = %2135
  %2148 = load i32, i32* %temp15, align 4
  %2149 = ashr i32 %2148, 9
  store i32 %2149, i32* %code_len16, align 4
  %2150 = load i32, i32* %code_len16, align 4
  %2151 = icmp ne i32 %2150, 0
  br i1 %2151, label %2152, label %2157

; <label>:2152                                    ; preds = %2147
  %2153 = load i32, i32* %num_bits, align 4
  %2154 = load i32, i32* %code_len16, align 4
  %2155 = icmp uge i32 %2153, %2154
  br i1 %2155, label %2156, label %2157

; <label>:2156                                    ; preds = %2152
  br label %2243

; <label>:2157                                    ; preds = %2152, %2147
  br label %2196

; <label>:2158                                    ; preds = %2135
  %2159 = load i32, i32* %num_bits, align 4
  %2160 = icmp ugt i32 %2159, 10
  br i1 %2160, label %2161, label %2195

; <label>:2161                                    ; preds = %2158
  store i32 10, i32* %code_len16, align 4
  br label %2162

; <label>:2162                                    ; preds = %2188, %2161
  %2163 = load i32, i32* %temp15, align 4
  %2164 = xor i32 %2163, -1
  %2165 = sext i32 %2164 to i64
  %2166 = load i64, i64* %bit_buf, align 8
  %2167 = load i32, i32* %code_len16, align 4
  %2168 = add i32 %2167, 1
  store i32 %2168, i32* %code_len16, align 4
  %2169 = zext i32 %2167 to i64
  %2170 = lshr i64 %2166, %2169
  %2171 = and i64 %2170, 1
  %2172 = add i64 %2165, %2171
  %2173 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2174 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2173, i32 0, i32 14
  %2175 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %2174, i64 0, i64 1
  %2176 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %2175, i32 0, i32 2
  %2177 = getelementptr inbounds [576 x i16], [576 x i16]* %2176, i64 0, i64 %2172
  %2178 = load i16, i16* %2177, align 2
  %2179 = sext i16 %2178 to i32
  store i32 %2179, i32* %temp15, align 4
  br label %2180

; <label>:2180                                    ; preds = %2162
  %2181 = load i32, i32* %temp15, align 4
  %2182 = icmp slt i32 %2181, 0
  br i1 %2182, label %2183, label %2188

; <label>:2183                                    ; preds = %2180
  %2184 = load i32, i32* %num_bits, align 4
  %2185 = load i32, i32* %code_len16, align 4
  %2186 = add i32 %2185, 1
  %2187 = icmp uge i32 %2184, %2186
  br label %2188

; <label>:2188                                    ; preds = %2183, %2180
  %2189 = phi i1 [ false, %2180 ], [ %2187, %2183 ]
  br i1 %2189, label %2162, label %2190

; <label>:2190                                    ; preds = %2188
  %2191 = load i32, i32* %temp15, align 4
  %2192 = icmp sge i32 %2191, 0
  br i1 %2192, label %2193, label %2194

; <label>:2193                                    ; preds = %2190
  br label %2243

; <label>:2194                                    ; preds = %2190
  br label %2195

; <label>:2195                                    ; preds = %2194, %2158
  br label %2196

; <label>:2196                                    ; preds = %2195, %2157
  br label %2197

; <label>:2197                                    ; preds = %2196
  %2198 = load i8*, i8** %pIn_buf_cur, align 8
  %2199 = load i8*, i8** %pIn_buf_end, align 8
  %2200 = icmp uge i8* %2198, %2199
  br i1 %2200, label %2201, label %2224

; <label>:2201                                    ; preds = %2197
  br label %2202

; <label>:2202                                    ; preds = %2222, %2201
  %2203 = load i32, i32* %8, align 4
  %2204 = and i32 %2203, 2
  %2205 = icmp ne i32 %2204, 0
  br i1 %2205, label %2206, label %2221

; <label>:2206                                    ; preds = %2202
  br label %2207

; <label>:2207                                    ; preds = %2206
  store i32 1, i32* %status, align 4
  %2208 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2209 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2208, i32 0, i32 0
  store i32 26, i32* %2209, align 8
  br label %2797

; <label>:2210                                    ; preds = %47
  br label %2211

; <label>:2211                                    ; preds = %2210
  %2212 = load i8*, i8** %pIn_buf_cur, align 8
  %2213 = load i8*, i8** %pIn_buf_end, align 8
  %2214 = icmp ult i8* %2212, %2213
  br i1 %2214, label %2215, label %2220

; <label>:2215                                    ; preds = %2211
  %2216 = load i8*, i8** %pIn_buf_cur, align 8
  %2217 = getelementptr inbounds i8, i8* %2216, i32 1
  store i8* %2217, i8** %pIn_buf_cur, align 8
  %2218 = load i8, i8* %2216, align 1
  %2219 = zext i8 %2218 to i32
  store i32 %2219, i32* %c17, align 4
  br label %2223

; <label>:2220                                    ; preds = %2211
  br label %2222

; <label>:2221                                    ; preds = %2202
  store i32 0, i32* %c17, align 4
  br label %2223

; <label>:2222                                    ; preds = %2220
  br label %2202

; <label>:2223                                    ; preds = %2221, %2215
  br label %2229

; <label>:2224                                    ; preds = %2197
  %2225 = load i8*, i8** %pIn_buf_cur, align 8
  %2226 = getelementptr inbounds i8, i8* %2225, i32 1
  store i8* %2226, i8** %pIn_buf_cur, align 8
  %2227 = load i8, i8* %2225, align 1
  %2228 = zext i8 %2227 to i32
  store i32 %2228, i32* %c17, align 4
  br label %2229

; <label>:2229                                    ; preds = %2224, %2223
  br label %2230

; <label>:2230                                    ; preds = %2229
  %2231 = load i32, i32* %c17, align 4
  %2232 = zext i32 %2231 to i64
  %2233 = load i32, i32* %num_bits, align 4
  %2234 = zext i32 %2233 to i64
  %2235 = shl i64 %2232, %2234
  %2236 = load i64, i64* %bit_buf, align 8
  %2237 = or i64 %2236, %2235
  store i64 %2237, i64* %bit_buf, align 8
  %2238 = load i32, i32* %num_bits, align 4
  %2239 = add i32 %2238, 8
  store i32 %2239, i32* %num_bits, align 4
  br label %2240

; <label>:2240                                    ; preds = %2230
  %2241 = load i32, i32* %num_bits, align 4
  %2242 = icmp ult i32 %2241, 15
  br i1 %2242, label %2135, label %2243

; <label>:2243                                    ; preds = %2240, %2193, %2156
  br label %2267

; <label>:2244                                    ; preds = %2127
  %2245 = load i8*, i8** %pIn_buf_cur, align 8
  %2246 = getelementptr inbounds i8, i8* %2245, i64 0
  %2247 = load i8, i8* %2246, align 1
  %2248 = zext i8 %2247 to i64
  %2249 = load i32, i32* %num_bits, align 4
  %2250 = zext i32 %2249 to i64
  %2251 = shl i64 %2248, %2250
  %2252 = load i8*, i8** %pIn_buf_cur, align 8
  %2253 = getelementptr inbounds i8, i8* %2252, i64 1
  %2254 = load i8, i8* %2253, align 1
  %2255 = zext i8 %2254 to i64
  %2256 = load i32, i32* %num_bits, align 4
  %2257 = add i32 %2256, 8
  %2258 = zext i32 %2257 to i64
  %2259 = shl i64 %2255, %2258
  %2260 = or i64 %2251, %2259
  %2261 = load i64, i64* %bit_buf, align 8
  %2262 = or i64 %2261, %2260
  store i64 %2262, i64* %bit_buf, align 8
  %2263 = load i8*, i8** %pIn_buf_cur, align 8
  %2264 = getelementptr inbounds i8, i8* %2263, i64 2
  store i8* %2264, i8** %pIn_buf_cur, align 8
  %2265 = load i32, i32* %num_bits, align 4
  %2266 = add i32 %2265, 16
  store i32 %2266, i32* %num_bits, align 4
  br label %2267

; <label>:2267                                    ; preds = %2244, %2243
  br label %2268

; <label>:2268                                    ; preds = %2267, %2124
  %2269 = load i64, i64* %bit_buf, align 8
  %2270 = and i64 %2269, 1023
  %2271 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2272 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2271, i32 0, i32 14
  %2273 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %2272, i64 0, i64 1
  %2274 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %2273, i32 0, i32 1
  %2275 = getelementptr inbounds [1024 x i16], [1024 x i16]* %2274, i64 0, i64 %2270
  %2276 = load i16, i16* %2275, align 2
  %2277 = sext i16 %2276 to i32
  store i32 %2277, i32* %temp15, align 4
  %2278 = icmp sge i32 %2277, 0
  br i1 %2278, label %2279, label %2284

; <label>:2279                                    ; preds = %2268
  %2280 = load i32, i32* %temp15, align 4
  %2281 = ashr i32 %2280, 9
  store i32 %2281, i32* %code_len16, align 4
  %2282 = load i32, i32* %temp15, align 4
  %2283 = and i32 %2282, 511
  store i32 %2283, i32* %temp15, align 4
  br label %2307

; <label>:2284                                    ; preds = %2268
  store i32 10, i32* %code_len16, align 4
  br label %2285

; <label>:2285                                    ; preds = %2303, %2284
  %2286 = load i32, i32* %temp15, align 4
  %2287 = xor i32 %2286, -1
  %2288 = sext i32 %2287 to i64
  %2289 = load i64, i64* %bit_buf, align 8
  %2290 = load i32, i32* %code_len16, align 4
  %2291 = add i32 %2290, 1
  store i32 %2291, i32* %code_len16, align 4
  %2292 = zext i32 %2290 to i64
  %2293 = lshr i64 %2289, %2292
  %2294 = and i64 %2293, 1
  %2295 = add i64 %2288, %2294
  %2296 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2297 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2296, i32 0, i32 14
  %2298 = getelementptr inbounds [3 x %struct.tinfl_huff_table], [3 x %struct.tinfl_huff_table]* %2297, i64 0, i64 1
  %2299 = getelementptr inbounds %struct.tinfl_huff_table, %struct.tinfl_huff_table* %2298, i32 0, i32 2
  %2300 = getelementptr inbounds [576 x i16], [576 x i16]* %2299, i64 0, i64 %2295
  %2301 = load i16, i16* %2300, align 2
  %2302 = sext i16 %2301 to i32
  store i32 %2302, i32* %temp15, align 4
  br label %2303

; <label>:2303                                    ; preds = %2285
  %2304 = load i32, i32* %temp15, align 4
  %2305 = icmp slt i32 %2304, 0
  br i1 %2305, label %2285, label %2306

; <label>:2306                                    ; preds = %2303
  br label %2307

; <label>:2307                                    ; preds = %2306, %2279
  %2308 = load i32, i32* %temp15, align 4
  store i32 %2308, i32* %dist, align 4
  %2309 = load i32, i32* %code_len16, align 4
  %2310 = load i64, i64* %bit_buf, align 8
  %2311 = zext i32 %2309 to i64
  %2312 = lshr i64 %2310, %2311
  store i64 %2312, i64* %bit_buf, align 8
  %2313 = load i32, i32* %code_len16, align 4
  %2314 = load i32, i32* %num_bits, align 4
  %2315 = sub i32 %2314, %2313
  store i32 %2315, i32* %num_bits, align 4
  br label %2316

; <label>:2316                                    ; preds = %2307
  %2317 = load i32, i32* %dist, align 4
  %2318 = zext i32 %2317 to i64
  %2319 = getelementptr inbounds [32 x i32], [32 x i32]* @tinfl_decompress.s_dist_extra, i64 0, i64 %2318
  %2320 = load i32, i32* %2319, align 4
  store i32 %2320, i32* %num_extra, align 4
  %2321 = load i32, i32* %dist, align 4
  %2322 = zext i32 %2321 to i64
  %2323 = getelementptr inbounds [32 x i32], [32 x i32]* @tinfl_decompress.s_dist_base, i64 0, i64 %2322
  %2324 = load i32, i32* %2323, align 4
  store i32 %2324, i32* %dist, align 4
  %2325 = load i32, i32* %num_extra, align 4
  %2326 = icmp ne i32 %2325, 0
  br i1 %2326, label %2327, label %2401

; <label>:2327                                    ; preds = %2316
  br label %2328

; <label>:2328                                    ; preds = %2327
  %2329 = load i32, i32* %num_bits, align 4
  %2330 = load i32, i32* %num_extra, align 4
  %2331 = icmp ult i32 %2329, %2330
  br i1 %2331, label %2332, label %2382

; <label>:2332                                    ; preds = %2328
  br label %2333

; <label>:2333                                    ; preds = %2377, %2332
  br label %2334

; <label>:2334                                    ; preds = %2333
  %2335 = load i8*, i8** %pIn_buf_cur, align 8
  %2336 = load i8*, i8** %pIn_buf_end, align 8
  %2337 = icmp uge i8* %2335, %2336
  br i1 %2337, label %2338, label %2361

; <label>:2338                                    ; preds = %2334
  br label %2339

; <label>:2339                                    ; preds = %2359, %2338
  %2340 = load i32, i32* %8, align 4
  %2341 = and i32 %2340, 2
  %2342 = icmp ne i32 %2341, 0
  br i1 %2342, label %2343, label %2358

; <label>:2343                                    ; preds = %2339
  br label %2344

; <label>:2344                                    ; preds = %2343
  store i32 1, i32* %status, align 4
  %2345 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2346 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2345, i32 0, i32 0
  store i32 27, i32* %2346, align 8
  br label %2797

; <label>:2347                                    ; preds = %47
  br label %2348

; <label>:2348                                    ; preds = %2347
  %2349 = load i8*, i8** %pIn_buf_cur, align 8
  %2350 = load i8*, i8** %pIn_buf_end, align 8
  %2351 = icmp ult i8* %2349, %2350
  br i1 %2351, label %2352, label %2357

; <label>:2352                                    ; preds = %2348
  %2353 = load i8*, i8** %pIn_buf_cur, align 8
  %2354 = getelementptr inbounds i8, i8* %2353, i32 1
  store i8* %2354, i8** %pIn_buf_cur, align 8
  %2355 = load i8, i8* %2353, align 1
  %2356 = zext i8 %2355 to i32
  store i32 %2356, i32* %c19, align 4
  br label %2360

; <label>:2357                                    ; preds = %2348
  br label %2359

; <label>:2358                                    ; preds = %2339
  store i32 0, i32* %c19, align 4
  br label %2360

; <label>:2359                                    ; preds = %2357
  br label %2339

; <label>:2360                                    ; preds = %2358, %2352
  br label %2366

; <label>:2361                                    ; preds = %2334
  %2362 = load i8*, i8** %pIn_buf_cur, align 8
  %2363 = getelementptr inbounds i8, i8* %2362, i32 1
  store i8* %2363, i8** %pIn_buf_cur, align 8
  %2364 = load i8, i8* %2362, align 1
  %2365 = zext i8 %2364 to i32
  store i32 %2365, i32* %c19, align 4
  br label %2366

; <label>:2366                                    ; preds = %2361, %2360
  br label %2367

; <label>:2367                                    ; preds = %2366
  %2368 = load i32, i32* %c19, align 4
  %2369 = zext i32 %2368 to i64
  %2370 = load i32, i32* %num_bits, align 4
  %2371 = zext i32 %2370 to i64
  %2372 = shl i64 %2369, %2371
  %2373 = load i64, i64* %bit_buf, align 8
  %2374 = or i64 %2373, %2372
  store i64 %2374, i64* %bit_buf, align 8
  %2375 = load i32, i32* %num_bits, align 4
  %2376 = add i32 %2375, 8
  store i32 %2376, i32* %num_bits, align 4
  br label %2377

; <label>:2377                                    ; preds = %2367
  %2378 = load i32, i32* %num_bits, align 4
  %2379 = load i32, i32* %num_extra, align 4
  %2380 = icmp ult i32 %2378, %2379
  br i1 %2380, label %2333, label %2381

; <label>:2381                                    ; preds = %2377
  br label %2382

; <label>:2382                                    ; preds = %2381, %2328
  %2383 = load i64, i64* %bit_buf, align 8
  %2384 = load i32, i32* %num_extra, align 4
  %2385 = shl i32 1, %2384
  %2386 = sub nsw i32 %2385, 1
  %2387 = sext i32 %2386 to i64
  %2388 = and i64 %2383, %2387
  %2389 = trunc i64 %2388 to i32
  store i32 %2389, i32* %extra_bits18, align 4
  %2390 = load i32, i32* %num_extra, align 4
  %2391 = load i64, i64* %bit_buf, align 8
  %2392 = zext i32 %2390 to i64
  %2393 = lshr i64 %2391, %2392
  store i64 %2393, i64* %bit_buf, align 8
  %2394 = load i32, i32* %num_extra, align 4
  %2395 = load i32, i32* %num_bits, align 4
  %2396 = sub i32 %2395, %2394
  store i32 %2396, i32* %num_bits, align 4
  br label %2397

; <label>:2397                                    ; preds = %2382
  %2398 = load i32, i32* %extra_bits18, align 4
  %2399 = load i32, i32* %dist, align 4
  %2400 = add i32 %2399, %2398
  store i32 %2400, i32* %dist, align 4
  br label %2401

; <label>:2401                                    ; preds = %2397, %2316
  %2402 = load i8*, i8** %pOut_buf_cur, align 8
  %2403 = load i8*, i8** %5, align 8
  %2404 = ptrtoint i8* %2402 to i64
  %2405 = ptrtoint i8* %2403 to i64
  %2406 = sub i64 %2404, %2405
  store i64 %2406, i64* %dist_from_out_buf_start, align 8
  %2407 = load i32, i32* %dist, align 4
  %2408 = zext i32 %2407 to i64
  %2409 = load i64, i64* %dist_from_out_buf_start, align 8
  %2410 = icmp ugt i64 %2408, %2409
  br i1 %2410, label %2411, label %2424

; <label>:2411                                    ; preds = %2401
  %2412 = load i32, i32* %8, align 4
  %2413 = and i32 %2412, 4
  %2414 = icmp ne i32 %2413, 0
  br i1 %2414, label %2415, label %2424

; <label>:2415                                    ; preds = %2411
  br label %2416

; <label>:2416                                    ; preds = %2415
  br label %2417

; <label>:2417                                    ; preds = %2422, %2416
  br label %2418

; <label>:2418                                    ; preds = %2417
  store i32 -1, i32* %status, align 4
  %2419 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2420 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2419, i32 0, i32 0
  store i32 37, i32* %2420, align 8
  br label %2797

; <label>:2421                                    ; preds = %47
  br label %2422

; <label>:2422                                    ; preds = %2421
  br label %2417
                                                  ; No predecessors!
  br label %2424

; <label>:2424                                    ; preds = %2423, %2411, %2401
  %2425 = load i8*, i8** %5, align 8
  %2426 = load i64, i64* %dist_from_out_buf_start, align 8
  %2427 = load i32, i32* %dist, align 4
  %2428 = zext i32 %2427 to i64
  %2429 = sub i64 %2426, %2428
  %2430 = load i64, i64* %out_buf_size_mask, align 8
  %2431 = and i64 %2429, %2430
  %2432 = getelementptr inbounds i8, i8* %2425, i64 %2431
  store i8* %2432, i8** %pSrc, align 8
  %2433 = load i8*, i8** %pOut_buf_cur, align 8
  %2434 = load i8*, i8** %pSrc, align 8
  %2435 = icmp ugt i8* %2433, %2434
  br i1 %2435, label %2436, label %2438

; <label>:2436                                    ; preds = %2424
  %2437 = load i8*, i8** %pOut_buf_cur, align 8
  br label %2440

; <label>:2438                                    ; preds = %2424
  %2439 = load i8*, i8** %pSrc, align 8
  br label %2440

; <label>:2440                                    ; preds = %2438, %2436
  %2441 = phi i8* [ %2437, %2436 ], [ %2439, %2438 ]
  %2442 = load i32, i32* %counter, align 4
  %2443 = zext i32 %2442 to i64
  %2444 = getelementptr inbounds i8, i8* %2441, i64 %2443
  %2445 = load i8*, i8** %pOut_buf_end, align 8
  %2446 = icmp ugt i8* %2444, %2445
  br i1 %2446, label %2447, label %2477

; <label>:2447                                    ; preds = %2440
  br label %2448

; <label>:2448                                    ; preds = %2463, %2447
  %2449 = load i32, i32* %counter, align 4
  %2450 = add i32 %2449, -1
  store i32 %2450, i32* %counter, align 4
  %2451 = icmp ne i32 %2449, 0
  br i1 %2451, label %2452, label %2476

; <label>:2452                                    ; preds = %2448
  br label %2453

; <label>:2453                                    ; preds = %2462, %2452
  %2454 = load i8*, i8** %pOut_buf_cur, align 8
  %2455 = load i8*, i8** %pOut_buf_end, align 8
  %2456 = icmp uge i8* %2454, %2455
  br i1 %2456, label %2457, label %2463

; <label>:2457                                    ; preds = %2453
  br label %2458

; <label>:2458                                    ; preds = %2457
  store i32 2, i32* %status, align 4
  %2459 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2460 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2459, i32 0, i32 0
  store i32 53, i32* %2460, align 8
  br label %2797

; <label>:2461                                    ; preds = %47
  br label %2462

; <label>:2462                                    ; preds = %2461
  br label %2453

; <label>:2463                                    ; preds = %2453
  %2464 = load i64, i64* %dist_from_out_buf_start, align 8
  %2465 = add i64 %2464, 1
  store i64 %2465, i64* %dist_from_out_buf_start, align 8
  %2466 = load i32, i32* %dist, align 4
  %2467 = zext i32 %2466 to i64
  %2468 = sub i64 %2464, %2467
  %2469 = load i64, i64* %out_buf_size_mask, align 8
  %2470 = and i64 %2468, %2469
  %2471 = load i8*, i8** %5, align 8
  %2472 = getelementptr inbounds i8, i8* %2471, i64 %2470
  %2473 = load i8, i8* %2472, align 1
  %2474 = load i8*, i8** %pOut_buf_cur, align 8
  %2475 = getelementptr inbounds i8, i8* %2474, i32 1
  store i8* %2475, i8** %pOut_buf_cur, align 8
  store i8 %2473, i8* %2474, align 1
  br label %2448

; <label>:2476                                    ; preds = %2448
  br label %1672

; <label>:2477                                    ; preds = %2440
  %2478 = load i32, i32* %counter, align 4
  %2479 = icmp uge i32 %2478, 9
  br i1 %2479, label %2480, label %2540

; <label>:2480                                    ; preds = %2477
  %2481 = load i32, i32* %counter, align 4
  %2482 = load i32, i32* %dist, align 4
  %2483 = icmp ule i32 %2481, %2482
  br i1 %2483, label %2484, label %2540

; <label>:2484                                    ; preds = %2480
  %2485 = load i8*, i8** %pSrc, align 8
  %2486 = load i32, i32* %counter, align 4
  %2487 = and i32 %2486, -8
  %2488 = zext i32 %2487 to i64
  %2489 = getelementptr inbounds i8, i8* %2485, i64 %2488
  store i8* %2489, i8** %pSrc_end, align 8
  br label %2490

; <label>:2490                                    ; preds = %2507, %2484
  %2491 = load i8*, i8** %pSrc, align 8
  %2492 = bitcast i8* %2491 to i32*
  %2493 = getelementptr inbounds i32, i32* %2492, i64 0
  %2494 = load i32, i32* %2493, align 4
  %2495 = load i8*, i8** %pOut_buf_cur, align 8
  %2496 = bitcast i8* %2495 to i32*
  %2497 = getelementptr inbounds i32, i32* %2496, i64 0
  store i32 %2494, i32* %2497, align 4
  %2498 = load i8*, i8** %pSrc, align 8
  %2499 = bitcast i8* %2498 to i32*
  %2500 = getelementptr inbounds i32, i32* %2499, i64 1
  %2501 = load i32, i32* %2500, align 4
  %2502 = load i8*, i8** %pOut_buf_cur, align 8
  %2503 = bitcast i8* %2502 to i32*
  %2504 = getelementptr inbounds i32, i32* %2503, i64 1
  store i32 %2501, i32* %2504, align 4
  %2505 = load i8*, i8** %pOut_buf_cur, align 8
  %2506 = getelementptr inbounds i8, i8* %2505, i64 8
  store i8* %2506, i8** %pOut_buf_cur, align 8
  br label %2507

; <label>:2507                                    ; preds = %2490
  %2508 = load i8*, i8** %pSrc, align 8
  %2509 = getelementptr inbounds i8, i8* %2508, i64 8
  store i8* %2509, i8** %pSrc, align 8
  %2510 = load i8*, i8** %pSrc_end, align 8
  %2511 = icmp ult i8* %2509, %2510
  br i1 %2511, label %2490, label %2512

; <label>:2512                                    ; preds = %2507
  %2513 = load i32, i32* %counter, align 4
  %2514 = and i32 %2513, 7
  store i32 %2514, i32* %counter, align 4
  %2515 = icmp ult i32 %2514, 3
  br i1 %2515, label %2516, label %2539

; <label>:2516                                    ; preds = %2512
  %2517 = load i32, i32* %counter, align 4
  %2518 = icmp ne i32 %2517, 0
  br i1 %2518, label %2519, label %2538

; <label>:2519                                    ; preds = %2516
  %2520 = load i8*, i8** %pSrc, align 8
  %2521 = getelementptr inbounds i8, i8* %2520, i64 0
  %2522 = load i8, i8* %2521, align 1
  %2523 = load i8*, i8** %pOut_buf_cur, align 8
  %2524 = getelementptr inbounds i8, i8* %2523, i64 0
  store i8 %2522, i8* %2524, align 1
  %2525 = load i32, i32* %counter, align 4
  %2526 = icmp ugt i32 %2525, 1
  br i1 %2526, label %2527, label %2533

; <label>:2527                                    ; preds = %2519
  %2528 = load i8*, i8** %pSrc, align 8
  %2529 = getelementptr inbounds i8, i8* %2528, i64 1
  %2530 = load i8, i8* %2529, align 1
  %2531 = load i8*, i8** %pOut_buf_cur, align 8
  %2532 = getelementptr inbounds i8, i8* %2531, i64 1
  store i8 %2530, i8* %2532, align 1
  br label %2533

; <label>:2533                                    ; preds = %2527, %2519
  %2534 = load i32, i32* %counter, align 4
  %2535 = load i8*, i8** %pOut_buf_cur, align 8
  %2536 = zext i32 %2534 to i64
  %2537 = getelementptr inbounds i8, i8* %2535, i64 %2536
  store i8* %2537, i8** %pOut_buf_cur, align 8
  br label %2538

; <label>:2538                                    ; preds = %2533, %2516
  br label %1672

; <label>:2539                                    ; preds = %2512
  br label %2540

; <label>:2540                                    ; preds = %2539, %2480, %2477
  br label %2541

; <label>:2541                                    ; preds = %2540
  br label %2542

; <label>:2542                                    ; preds = %2562, %2541
  %2543 = load i8*, i8** %pSrc, align 8
  %2544 = getelementptr inbounds i8, i8* %2543, i64 0
  %2545 = load i8, i8* %2544, align 1
  %2546 = load i8*, i8** %pOut_buf_cur, align 8
  %2547 = getelementptr inbounds i8, i8* %2546, i64 0
  store i8 %2545, i8* %2547, align 1
  %2548 = load i8*, i8** %pSrc, align 8
  %2549 = getelementptr inbounds i8, i8* %2548, i64 1
  %2550 = load i8, i8* %2549, align 1
  %2551 = load i8*, i8** %pOut_buf_cur, align 8
  %2552 = getelementptr inbounds i8, i8* %2551, i64 1
  store i8 %2550, i8* %2552, align 1
  %2553 = load i8*, i8** %pSrc, align 8
  %2554 = getelementptr inbounds i8, i8* %2553, i64 2
  %2555 = load i8, i8* %2554, align 1
  %2556 = load i8*, i8** %pOut_buf_cur, align 8
  %2557 = getelementptr inbounds i8, i8* %2556, i64 2
  store i8 %2555, i8* %2557, align 1
  %2558 = load i8*, i8** %pOut_buf_cur, align 8
  %2559 = getelementptr inbounds i8, i8* %2558, i64 3
  store i8* %2559, i8** %pOut_buf_cur, align 8
  %2560 = load i8*, i8** %pSrc, align 8
  %2561 = getelementptr inbounds i8, i8* %2560, i64 3
  store i8* %2561, i8** %pSrc, align 8
  br label %2562

; <label>:2562                                    ; preds = %2542
  %2563 = load i32, i32* %counter, align 4
  %2564 = sub i32 %2563, 3
  store i32 %2564, i32* %counter, align 4
  %2565 = icmp sgt i32 %2564, 2
  br i1 %2565, label %2542, label %2566

; <label>:2566                                    ; preds = %2562
  %2567 = load i32, i32* %counter, align 4
  %2568 = icmp sgt i32 %2567, 0
  br i1 %2568, label %2569, label %2588

; <label>:2569                                    ; preds = %2566
  %2570 = load i8*, i8** %pSrc, align 8
  %2571 = getelementptr inbounds i8, i8* %2570, i64 0
  %2572 = load i8, i8* %2571, align 1
  %2573 = load i8*, i8** %pOut_buf_cur, align 8
  %2574 = getelementptr inbounds i8, i8* %2573, i64 0
  store i8 %2572, i8* %2574, align 1
  %2575 = load i32, i32* %counter, align 4
  %2576 = icmp sgt i32 %2575, 1
  br i1 %2576, label %2577, label %2583

; <label>:2577                                    ; preds = %2569
  %2578 = load i8*, i8** %pSrc, align 8
  %2579 = getelementptr inbounds i8, i8* %2578, i64 1
  %2580 = load i8, i8* %2579, align 1
  %2581 = load i8*, i8** %pOut_buf_cur, align 8
  %2582 = getelementptr inbounds i8, i8* %2581, i64 1
  store i8 %2580, i8* %2582, align 1
  br label %2583

; <label>:2583                                    ; preds = %2577, %2569
  %2584 = load i32, i32* %counter, align 4
  %2585 = load i8*, i8** %pOut_buf_cur, align 8
  %2586 = zext i32 %2584 to i64
  %2587 = getelementptr inbounds i8, i8* %2585, i64 %2586
  store i8* %2587, i8** %pOut_buf_cur, align 8
  br label %2588

; <label>:2588                                    ; preds = %2583, %2566
  br label %1672

; <label>:2589                                    ; preds = %2035
  br label %2590

; <label>:2590                                    ; preds = %2589, %746
  br label %2591

; <label>:2591                                    ; preds = %2590, %732
  br label %2592

; <label>:2592                                    ; preds = %2591
  %2593 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2594 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2593, i32 0, i32 5
  %2595 = load i32, i32* %2594, align 4
  %2596 = and i32 %2595, 1
  %2597 = icmp ne i32 %2596, 0
  %2598 = xor i1 %2597, true
  br i1 %2598, label %228, label %2599

; <label>:2599                                    ; preds = %2592
  %2600 = load i32, i32* %8, align 4
  %2601 = and i32 %2600, 1
  %2602 = icmp ne i32 %2601, 0
  br i1 %2602, label %2603, label %2787

; <label>:2603                                    ; preds = %2599
  br label %2604

; <label>:2604                                    ; preds = %2603
  %2605 = load i32, i32* %num_bits, align 4
  %2606 = load i32, i32* %num_bits, align 4
  %2607 = and i32 %2606, 7
  %2608 = icmp ult i32 %2605, %2607
  br i1 %2608, label %2609, label %2660

; <label>:2609                                    ; preds = %2604
  br label %2610

; <label>:2610                                    ; preds = %2654, %2609
  br label %2611

; <label>:2611                                    ; preds = %2610
  %2612 = load i8*, i8** %pIn_buf_cur, align 8
  %2613 = load i8*, i8** %pIn_buf_end, align 8
  %2614 = icmp uge i8* %2612, %2613
  br i1 %2614, label %2615, label %2638

; <label>:2615                                    ; preds = %2611
  br label %2616

; <label>:2616                                    ; preds = %2636, %2615
  %2617 = load i32, i32* %8, align 4
  %2618 = and i32 %2617, 2
  %2619 = icmp ne i32 %2618, 0
  br i1 %2619, label %2620, label %2635

; <label>:2620                                    ; preds = %2616
  br label %2621

; <label>:2621                                    ; preds = %2620
  store i32 1, i32* %status, align 4
  %2622 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2623 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2622, i32 0, i32 0
  store i32 32, i32* %2623, align 8
  br label %2797

; <label>:2624                                    ; preds = %47
  br label %2625

; <label>:2625                                    ; preds = %2624
  %2626 = load i8*, i8** %pIn_buf_cur, align 8
  %2627 = load i8*, i8** %pIn_buf_end, align 8
  %2628 = icmp ult i8* %2626, %2627
  br i1 %2628, label %2629, label %2634

; <label>:2629                                    ; preds = %2625
  %2630 = load i8*, i8** %pIn_buf_cur, align 8
  %2631 = getelementptr inbounds i8, i8* %2630, i32 1
  store i8* %2631, i8** %pIn_buf_cur, align 8
  %2632 = load i8, i8* %2630, align 1
  %2633 = zext i8 %2632 to i32
  store i32 %2633, i32* %c20, align 4
  br label %2637

; <label>:2634                                    ; preds = %2625
  br label %2636

; <label>:2635                                    ; preds = %2616
  store i32 0, i32* %c20, align 4
  br label %2637

; <label>:2636                                    ; preds = %2634
  br label %2616

; <label>:2637                                    ; preds = %2635, %2629
  br label %2643

; <label>:2638                                    ; preds = %2611
  %2639 = load i8*, i8** %pIn_buf_cur, align 8
  %2640 = getelementptr inbounds i8, i8* %2639, i32 1
  store i8* %2640, i8** %pIn_buf_cur, align 8
  %2641 = load i8, i8* %2639, align 1
  %2642 = zext i8 %2641 to i32
  store i32 %2642, i32* %c20, align 4
  br label %2643

; <label>:2643                                    ; preds = %2638, %2637
  br label %2644

; <label>:2644                                    ; preds = %2643
  %2645 = load i32, i32* %c20, align 4
  %2646 = zext i32 %2645 to i64
  %2647 = load i32, i32* %num_bits, align 4
  %2648 = zext i32 %2647 to i64
  %2649 = shl i64 %2646, %2648
  %2650 = load i64, i64* %bit_buf, align 8
  %2651 = or i64 %2650, %2649
  store i64 %2651, i64* %bit_buf, align 8
  %2652 = load i32, i32* %num_bits, align 4
  %2653 = add i32 %2652, 8
  store i32 %2653, i32* %num_bits, align 4
  br label %2654

; <label>:2654                                    ; preds = %2644
  %2655 = load i32, i32* %num_bits, align 4
  %2656 = load i32, i32* %num_bits, align 4
  %2657 = and i32 %2656, 7
  %2658 = icmp ult i32 %2655, %2657
  br i1 %2658, label %2610, label %2659

; <label>:2659                                    ; preds = %2654
  br label %2660

; <label>:2660                                    ; preds = %2659, %2604
  %2661 = load i32, i32* %num_bits, align 4
  %2662 = and i32 %2661, 7
  %2663 = load i64, i64* %bit_buf, align 8
  %2664 = zext i32 %2662 to i64
  %2665 = lshr i64 %2663, %2664
  store i64 %2665, i64* %bit_buf, align 8
  %2666 = load i32, i32* %num_bits, align 4
  %2667 = and i32 %2666, 7
  %2668 = load i32, i32* %num_bits, align 4
  %2669 = sub i32 %2668, %2667
  store i32 %2669, i32* %num_bits, align 4
  br label %2670

; <label>:2670                                    ; preds = %2660
  store i32 0, i32* %counter, align 4
  br label %2671

; <label>:2671                                    ; preds = %2783, %2670
  %2672 = load i32, i32* %counter, align 4
  %2673 = icmp ult i32 %2672, 4
  br i1 %2673, label %2674, label %2786

; <label>:2674                                    ; preds = %2671
  %2675 = load i32, i32* %num_bits, align 4
  %2676 = icmp ne i32 %2675, 0
  br i1 %2676, label %2677, label %2739

; <label>:2677                                    ; preds = %2674
  br label %2678

; <label>:2678                                    ; preds = %2677
  %2679 = load i32, i32* %num_bits, align 4
  %2680 = icmp ult i32 %2679, 8
  br i1 %2680, label %2681, label %2730

; <label>:2681                                    ; preds = %2678
  br label %2682

; <label>:2682                                    ; preds = %2726, %2681
  br label %2683

; <label>:2683                                    ; preds = %2682
  %2684 = load i8*, i8** %pIn_buf_cur, align 8
  %2685 = load i8*, i8** %pIn_buf_end, align 8
  %2686 = icmp uge i8* %2684, %2685
  br i1 %2686, label %2687, label %2710

; <label>:2687                                    ; preds = %2683
  br label %2688

; <label>:2688                                    ; preds = %2708, %2687
  %2689 = load i32, i32* %8, align 4
  %2690 = and i32 %2689, 2
  %2691 = icmp ne i32 %2690, 0
  br i1 %2691, label %2692, label %2707

; <label>:2692                                    ; preds = %2688
  br label %2693

; <label>:2693                                    ; preds = %2692
  store i32 1, i32* %status, align 4
  %2694 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2695 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2694, i32 0, i32 0
  store i32 41, i32* %2695, align 8
  br label %2797

; <label>:2696                                    ; preds = %47
  br label %2697

; <label>:2697                                    ; preds = %2696
  %2698 = load i8*, i8** %pIn_buf_cur, align 8
  %2699 = load i8*, i8** %pIn_buf_end, align 8
  %2700 = icmp ult i8* %2698, %2699
  br i1 %2700, label %2701, label %2706

; <label>:2701                                    ; preds = %2697
  %2702 = load i8*, i8** %pIn_buf_cur, align 8
  %2703 = getelementptr inbounds i8, i8* %2702, i32 1
  store i8* %2703, i8** %pIn_buf_cur, align 8
  %2704 = load i8, i8* %2702, align 1
  %2705 = zext i8 %2704 to i32
  store i32 %2705, i32* %c22, align 4
  br label %2709

; <label>:2706                                    ; preds = %2697
  br label %2708

; <label>:2707                                    ; preds = %2688
  store i32 0, i32* %c22, align 4
  br label %2709

; <label>:2708                                    ; preds = %2706
  br label %2688

; <label>:2709                                    ; preds = %2707, %2701
  br label %2715

; <label>:2710                                    ; preds = %2683
  %2711 = load i8*, i8** %pIn_buf_cur, align 8
  %2712 = getelementptr inbounds i8, i8* %2711, i32 1
  store i8* %2712, i8** %pIn_buf_cur, align 8
  %2713 = load i8, i8* %2711, align 1
  %2714 = zext i8 %2713 to i32
  store i32 %2714, i32* %c22, align 4
  br label %2715

; <label>:2715                                    ; preds = %2710, %2709
  br label %2716

; <label>:2716                                    ; preds = %2715
  %2717 = load i32, i32* %c22, align 4
  %2718 = zext i32 %2717 to i64
  %2719 = load i32, i32* %num_bits, align 4
  %2720 = zext i32 %2719 to i64
  %2721 = shl i64 %2718, %2720
  %2722 = load i64, i64* %bit_buf, align 8
  %2723 = or i64 %2722, %2721
  store i64 %2723, i64* %bit_buf, align 8
  %2724 = load i32, i32* %num_bits, align 4
  %2725 = add i32 %2724, 8
  store i32 %2725, i32* %num_bits, align 4
  br label %2726

; <label>:2726                                    ; preds = %2716
  %2727 = load i32, i32* %num_bits, align 4
  %2728 = icmp ult i32 %2727, 8
  br i1 %2728, label %2682, label %2729

; <label>:2729                                    ; preds = %2726
  br label %2730

; <label>:2730                                    ; preds = %2729, %2678
  %2731 = load i64, i64* %bit_buf, align 8
  %2732 = and i64 %2731, 255
  %2733 = trunc i64 %2732 to i32
  store i32 %2733, i32* %s21, align 4
  %2734 = load i64, i64* %bit_buf, align 8
  %2735 = lshr i64 %2734, 8
  store i64 %2735, i64* %bit_buf, align 8
  %2736 = load i32, i32* %num_bits, align 4
  %2737 = sub i32 %2736, 8
  store i32 %2737, i32* %num_bits, align 4
  br label %2738

; <label>:2738                                    ; preds = %2730
  br label %2774

; <label>:2739                                    ; preds = %2674
  br label %2740

; <label>:2740                                    ; preds = %2739
  %2741 = load i8*, i8** %pIn_buf_cur, align 8
  %2742 = load i8*, i8** %pIn_buf_end, align 8
  %2743 = icmp uge i8* %2741, %2742
  br i1 %2743, label %2744, label %2767

; <label>:2744                                    ; preds = %2740
  br label %2745

; <label>:2745                                    ; preds = %2765, %2744
  %2746 = load i32, i32* %8, align 4
  %2747 = and i32 %2746, 2
  %2748 = icmp ne i32 %2747, 0
  br i1 %2748, label %2749, label %2764

; <label>:2749                                    ; preds = %2745
  br label %2750

; <label>:2750                                    ; preds = %2749
  store i32 1, i32* %status, align 4
  %2751 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2752 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2751, i32 0, i32 0
  store i32 42, i32* %2752, align 8
  br label %2797

; <label>:2753                                    ; preds = %47
  br label %2754

; <label>:2754                                    ; preds = %2753
  %2755 = load i8*, i8** %pIn_buf_cur, align 8
  %2756 = load i8*, i8** %pIn_buf_end, align 8
  %2757 = icmp ult i8* %2755, %2756
  br i1 %2757, label %2758, label %2763

; <label>:2758                                    ; preds = %2754
  %2759 = load i8*, i8** %pIn_buf_cur, align 8
  %2760 = getelementptr inbounds i8, i8* %2759, i32 1
  store i8* %2760, i8** %pIn_buf_cur, align 8
  %2761 = load i8, i8* %2759, align 1
  %2762 = zext i8 %2761 to i32
  store i32 %2762, i32* %s21, align 4
  br label %2766

; <label>:2763                                    ; preds = %2754
  br label %2765

; <label>:2764                                    ; preds = %2745
  store i32 0, i32* %s21, align 4
  br label %2766

; <label>:2765                                    ; preds = %2763
  br label %2745

; <label>:2766                                    ; preds = %2764, %2758
  br label %2772

; <label>:2767                                    ; preds = %2740
  %2768 = load i8*, i8** %pIn_buf_cur, align 8
  %2769 = getelementptr inbounds i8, i8* %2768, i32 1
  store i8* %2769, i8** %pIn_buf_cur, align 8
  %2770 = load i8, i8* %2768, align 1
  %2771 = zext i8 %2770 to i32
  store i32 %2771, i32* %s21, align 4
  br label %2772

; <label>:2772                                    ; preds = %2767, %2766
  br label %2773

; <label>:2773                                    ; preds = %2772
  br label %2774

; <label>:2774                                    ; preds = %2773, %2738
  %2775 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2776 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2775, i32 0, i32 4
  %2777 = load i32, i32* %2776, align 8
  %2778 = shl i32 %2777, 8
  %2779 = load i32, i32* %s21, align 4
  %2780 = or i32 %2778, %2779
  %2781 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2782 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2781, i32 0, i32 4
  store i32 %2780, i32* %2782, align 8
  br label %2783

; <label>:2783                                    ; preds = %2774
  %2784 = load i32, i32* %counter, align 4
  %2785 = add i32 %2784, 1
  store i32 %2785, i32* %counter, align 4
  br label %2671

; <label>:2786                                    ; preds = %2671
  br label %2787

; <label>:2787                                    ; preds = %2786, %2599
  br label %2788

; <label>:2788                                    ; preds = %2787
  br label %2789

; <label>:2789                                    ; preds = %2794, %2788
  br label %2790

; <label>:2790                                    ; preds = %2789
  store i32 0, i32* %status, align 4
  %2791 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2792 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2791, i32 0, i32 0
  store i32 34, i32* %2792, align 8
  br label %2797

; <label>:2793                                    ; preds = %47
  br label %2794

; <label>:2794                                    ; preds = %2793
  br label %2789
                                                  ; No predecessors!
  br label %2796

; <label>:2796                                    ; preds = %2795, %47
  br label %2797

; <label>:2797                                    ; preds = %2796, %2790, %2750, %2693, %2621, %2458, %2418, %2344, %2207, %2066, %1890, %1771, %1626, %1523, %1494, %1364, %1099, %952, %834, %741, %652, %644, %629, %607, %556, %525, %454, %392, %320, %244, %220, %132, %92
  %2798 = load i32, i32* %num_bits, align 4
  %2799 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2800 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2799, i32 0, i32 1
  store i32 %2798, i32* %2800, align 4
  %2801 = load i64, i64* %bit_buf, align 8
  %2802 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2803 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2802, i32 0, i32 12
  store i64 %2801, i64* %2803, align 8
  %2804 = load i32, i32* %dist, align 4
  %2805 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2806 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2805, i32 0, i32 8
  store i32 %2804, i32* %2806, align 8
  %2807 = load i32, i32* %counter, align 4
  %2808 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2809 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2808, i32 0, i32 9
  store i32 %2807, i32* %2809, align 4
  %2810 = load i32, i32* %num_extra, align 4
  %2811 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2812 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2811, i32 0, i32 10
  store i32 %2810, i32* %2812, align 8
  %2813 = load i64, i64* %dist_from_out_buf_start, align 8
  %2814 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2815 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2814, i32 0, i32 13
  store i64 %2813, i64* %2815, align 8
  %2816 = load i8*, i8** %pIn_buf_cur, align 8
  %2817 = load i8*, i8** %3, align 8
  %2818 = ptrtoint i8* %2816 to i64
  %2819 = ptrtoint i8* %2817 to i64
  %2820 = sub i64 %2818, %2819
  %2821 = load i64*, i64** %4, align 8
  store i64 %2820, i64* %2821, align 8
  %2822 = load i8*, i8** %pOut_buf_cur, align 8
  %2823 = load i8*, i8** %6, align 8
  %2824 = ptrtoint i8* %2822 to i64
  %2825 = ptrtoint i8* %2823 to i64
  %2826 = sub i64 %2824, %2825
  %2827 = load i64*, i64** %7, align 8
  store i64 %2826, i64* %2827, align 8
  %2828 = load i32, i32* %8, align 4
  %2829 = and i32 %2828, 9
  %2830 = icmp ne i32 %2829, 0
  br i1 %2830, label %2831, label %2986

; <label>:2831                                    ; preds = %2797
  %2832 = load i32, i32* %status, align 4
  %2833 = icmp sge i32 %2832, 0
  br i1 %2833, label %2834, label %2986

; <label>:2834                                    ; preds = %2831
  %2835 = load i8*, i8** %6, align 8
  store i8* %2835, i8** %ptr, align 8
  %2836 = load i64*, i64** %7, align 8
  %2837 = load i64, i64* %2836, align 8
  store i64 %2837, i64* %buf_len, align 8
  %2838 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2839 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2838, i32 0, i32 7
  %2840 = load i32, i32* %2839, align 4
  %2841 = and i32 %2840, 65535
  store i32 %2841, i32* %s1, align 4
  %2842 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2843 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2842, i32 0, i32 7
  %2844 = load i32, i32* %2843, align 4
  %2845 = lshr i32 %2844, 16
  store i32 %2845, i32* %s2, align 4
  %2846 = load i64, i64* %buf_len, align 8
  %2847 = urem i64 %2846, 5552
  store i64 %2847, i64* %block_len, align 8
  br label %2848

; <label>:2848                                    ; preds = %2955, %2834
  %2849 = load i64, i64* %buf_len, align 8
  %2850 = icmp ne i64 %2849, 0
  br i1 %2850, label %2851, label %2963

; <label>:2851                                    ; preds = %2848
  store i32 0, i32* %i23, align 4
  br label %2852

; <label>:2852                                    ; preds = %2931, %2851
  %2853 = load i32, i32* %i23, align 4
  %2854 = add i32 %2853, 7
  %2855 = zext i32 %2854 to i64
  %2856 = load i64, i64* %block_len, align 8
  %2857 = icmp ult i64 %2855, %2856
  br i1 %2857, label %2858, label %2936

; <label>:2858                                    ; preds = %2852
  %2859 = load i8*, i8** %ptr, align 8
  %2860 = getelementptr inbounds i8, i8* %2859, i64 0
  %2861 = load i8, i8* %2860, align 1
  %2862 = zext i8 %2861 to i32
  %2863 = load i32, i32* %s1, align 4
  %2864 = add i32 %2863, %2862
  store i32 %2864, i32* %s1, align 4
  %2865 = load i32, i32* %s1, align 4
  %2866 = load i32, i32* %s2, align 4
  %2867 = add i32 %2866, %2865
  store i32 %2867, i32* %s2, align 4
  %2868 = load i8*, i8** %ptr, align 8
  %2869 = getelementptr inbounds i8, i8* %2868, i64 1
  %2870 = load i8, i8* %2869, align 1
  %2871 = zext i8 %2870 to i32
  %2872 = load i32, i32* %s1, align 4
  %2873 = add i32 %2872, %2871
  store i32 %2873, i32* %s1, align 4
  %2874 = load i32, i32* %s1, align 4
  %2875 = load i32, i32* %s2, align 4
  %2876 = add i32 %2875, %2874
  store i32 %2876, i32* %s2, align 4
  %2877 = load i8*, i8** %ptr, align 8
  %2878 = getelementptr inbounds i8, i8* %2877, i64 2
  %2879 = load i8, i8* %2878, align 1
  %2880 = zext i8 %2879 to i32
  %2881 = load i32, i32* %s1, align 4
  %2882 = add i32 %2881, %2880
  store i32 %2882, i32* %s1, align 4
  %2883 = load i32, i32* %s1, align 4
  %2884 = load i32, i32* %s2, align 4
  %2885 = add i32 %2884, %2883
  store i32 %2885, i32* %s2, align 4
  %2886 = load i8*, i8** %ptr, align 8
  %2887 = getelementptr inbounds i8, i8* %2886, i64 3
  %2888 = load i8, i8* %2887, align 1
  %2889 = zext i8 %2888 to i32
  %2890 = load i32, i32* %s1, align 4
  %2891 = add i32 %2890, %2889
  store i32 %2891, i32* %s1, align 4
  %2892 = load i32, i32* %s1, align 4
  %2893 = load i32, i32* %s2, align 4
  %2894 = add i32 %2893, %2892
  store i32 %2894, i32* %s2, align 4
  %2895 = load i8*, i8** %ptr, align 8
  %2896 = getelementptr inbounds i8, i8* %2895, i64 4
  %2897 = load i8, i8* %2896, align 1
  %2898 = zext i8 %2897 to i32
  %2899 = load i32, i32* %s1, align 4
  %2900 = add i32 %2899, %2898
  store i32 %2900, i32* %s1, align 4
  %2901 = load i32, i32* %s1, align 4
  %2902 = load i32, i32* %s2, align 4
  %2903 = add i32 %2902, %2901
  store i32 %2903, i32* %s2, align 4
  %2904 = load i8*, i8** %ptr, align 8
  %2905 = getelementptr inbounds i8, i8* %2904, i64 5
  %2906 = load i8, i8* %2905, align 1
  %2907 = zext i8 %2906 to i32
  %2908 = load i32, i32* %s1, align 4
  %2909 = add i32 %2908, %2907
  store i32 %2909, i32* %s1, align 4
  %2910 = load i32, i32* %s1, align 4
  %2911 = load i32, i32* %s2, align 4
  %2912 = add i32 %2911, %2910
  store i32 %2912, i32* %s2, align 4
  %2913 = load i8*, i8** %ptr, align 8
  %2914 = getelementptr inbounds i8, i8* %2913, i64 6
  %2915 = load i8, i8* %2914, align 1
  %2916 = zext i8 %2915 to i32
  %2917 = load i32, i32* %s1, align 4
  %2918 = add i32 %2917, %2916
  store i32 %2918, i32* %s1, align 4
  %2919 = load i32, i32* %s1, align 4
  %2920 = load i32, i32* %s2, align 4
  %2921 = add i32 %2920, %2919
  store i32 %2921, i32* %s2, align 4
  %2922 = load i8*, i8** %ptr, align 8
  %2923 = getelementptr inbounds i8, i8* %2922, i64 7
  %2924 = load i8, i8* %2923, align 1
  %2925 = zext i8 %2924 to i32
  %2926 = load i32, i32* %s1, align 4
  %2927 = add i32 %2926, %2925
  store i32 %2927, i32* %s1, align 4
  %2928 = load i32, i32* %s1, align 4
  %2929 = load i32, i32* %s2, align 4
  %2930 = add i32 %2929, %2928
  store i32 %2930, i32* %s2, align 4
  br label %2931

; <label>:2931                                    ; preds = %2858
  %2932 = load i32, i32* %i23, align 4
  %2933 = add i32 %2932, 8
  store i32 %2933, i32* %i23, align 4
  %2934 = load i8*, i8** %ptr, align 8
  %2935 = getelementptr inbounds i8, i8* %2934, i64 8
  store i8* %2935, i8** %ptr, align 8
  br label %2852

; <label>:2936                                    ; preds = %2852
  br label %2937

; <label>:2937                                    ; preds = %2952, %2936
  %2938 = load i32, i32* %i23, align 4
  %2939 = zext i32 %2938 to i64
  %2940 = load i64, i64* %block_len, align 8
  %2941 = icmp ult i64 %2939, %2940
  br i1 %2941, label %2942, label %2955

; <label>:2942                                    ; preds = %2937
  %2943 = load i8*, i8** %ptr, align 8
  %2944 = getelementptr inbounds i8, i8* %2943, i32 1
  store i8* %2944, i8** %ptr, align 8
  %2945 = load i8, i8* %2943, align 1
  %2946 = zext i8 %2945 to i32
  %2947 = load i32, i32* %s1, align 4
  %2948 = add i32 %2947, %2946
  store i32 %2948, i32* %s1, align 4
  %2949 = load i32, i32* %s1, align 4
  %2950 = load i32, i32* %s2, align 4
  %2951 = add i32 %2950, %2949
  store i32 %2951, i32* %s2, align 4
  br label %2952

; <label>:2952                                    ; preds = %2942
  %2953 = load i32, i32* %i23, align 4
  %2954 = add i32 %2953, 1
  store i32 %2954, i32* %i23, align 4
  br label %2937

; <label>:2955                                    ; preds = %2937
  %2956 = load i32, i32* %s1, align 4
  %2957 = urem i32 %2956, 65521
  store i32 %2957, i32* %s1, align 4
  %2958 = load i32, i32* %s2, align 4
  %2959 = urem i32 %2958, 65521
  store i32 %2959, i32* %s2, align 4
  %2960 = load i64, i64* %block_len, align 8
  %2961 = load i64, i64* %buf_len, align 8
  %2962 = sub i64 %2961, %2960
  store i64 %2962, i64* %buf_len, align 8
  store i64 5552, i64* %block_len, align 8
  br label %2848

; <label>:2963                                    ; preds = %2848
  %2964 = load i32, i32* %s2, align 4
  %2965 = shl i32 %2964, 16
  %2966 = load i32, i32* %s1, align 4
  %2967 = add i32 %2965, %2966
  %2968 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2969 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2968, i32 0, i32 7
  store i32 %2967, i32* %2969, align 4
  %2970 = load i32, i32* %status, align 4
  %2971 = icmp eq i32 %2970, 0
  br i1 %2971, label %2972, label %2985

; <label>:2972                                    ; preds = %2963
  %2973 = load i32, i32* %8, align 4
  %2974 = and i32 %2973, 1
  %2975 = icmp ne i32 %2974, 0
  br i1 %2975, label %2976, label %2985

; <label>:2976                                    ; preds = %2972
  %2977 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2978 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2977, i32 0, i32 7
  %2979 = load i32, i32* %2978, align 4
  %2980 = load %struct.tinfl_decompressor_tag*, %struct.tinfl_decompressor_tag** %2, align 8
  %2981 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %2980, i32 0, i32 4
  %2982 = load i32, i32* %2981, align 8
  %2983 = icmp ne i32 %2979, %2982
  br i1 %2983, label %2984, label %2985

; <label>:2984                                    ; preds = %2976
  store i32 -2, i32* %status, align 4
  br label %2985

; <label>:2985                                    ; preds = %2984, %2976, %2972, %2963
  br label %2986

; <label>:2986                                    ; preds = %2985, %2831, %2797
  %2987 = load i32, i32* %status, align 4
  store i32 %2987, i32* %1, align 4
  br label %2988

; <label>:2988                                    ; preds = %2986, %44
  %2989 = load i32, i32* %1, align 4
  ret i32 %2989
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define i32 @mz_inflateEnd(%struct.mz_stream_s* %pStream) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_stream_s*, align 8
  store %struct.mz_stream_s* %pStream, %struct.mz_stream_s** %2, align 8
  %3 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %4 = icmp ne %struct.mz_stream_s* %3, null
  br i1 %4, label %6, label %5

; <label>:5                                       ; preds = %0
  store i32 -2, i32* %1, align 4
  br label %25

; <label>:6                                       ; preds = %0
  %7 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %8 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %7, i32 0, i32 7
  %9 = load %struct.mz_internal_state*, %struct.mz_internal_state** %8, align 8
  %10 = icmp ne %struct.mz_internal_state* %9, null
  br i1 %10, label %11, label %24

; <label>:11                                      ; preds = %6
  %12 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %13 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %12, i32 0, i32 9
  %14 = load void (i8*, i8*)*, void (i8*, i8*)** %13, align 8
  %15 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %16 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %15, i32 0, i32 10
  %17 = load i8*, i8** %16, align 8
  %18 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %19 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %18, i32 0, i32 7
  %20 = load %struct.mz_internal_state*, %struct.mz_internal_state** %19, align 8
  %21 = bitcast %struct.mz_internal_state* %20 to i8*
  call void %14(i8* %17, i8* %21)
  %22 = load %struct.mz_stream_s*, %struct.mz_stream_s** %2, align 8
  %23 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %22, i32 0, i32 7
  store %struct.mz_internal_state* null, %struct.mz_internal_state** %23, align 8
  br label %24

; <label>:24                                      ; preds = %11, %6
  store i32 0, i32* %1, align 4
  br label %25

; <label>:25                                      ; preds = %24, %5
  %26 = load i32, i32* %1, align 4
  ret i32 %26
}

; Function Attrs: nounwind uwtable
define i32 @mz_uncompress(i8* %pDest, i64* %pDest_len, i8* %pSource, i64 %source_len) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i64*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %stream = alloca %struct.mz_stream_s, align 8
  %status = alloca i32, align 4
  store i8* %pDest, i8** %2, align 8
  store i64* %pDest_len, i64** %3, align 8
  store i8* %pSource, i8** %4, align 8
  store i64 %source_len, i64* %5, align 8
  %6 = bitcast %struct.mz_stream_s* %stream to i8*
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 112, i32 8, i1 false)
  %7 = load i64, i64* %5, align 8
  %8 = load i64*, i64** %3, align 8
  %9 = load i64, i64* %8, align 8
  %10 = or i64 %7, %9
  %11 = icmp ugt i64 %10, 4294967295
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %0
  store i32 -10000, i32* %1, align 4
  br label %52

; <label>:13                                      ; preds = %0
  %14 = load i8*, i8** %4, align 8
  %15 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %stream, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = load i64, i64* %5, align 8
  %17 = trunc i64 %16 to i32
  %18 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %stream, i32 0, i32 1
  store i32 %17, i32* %18, align 8
  %19 = load i8*, i8** %2, align 8
  %20 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %stream, i32 0, i32 3
  store i8* %19, i8** %20, align 8
  %21 = load i64*, i64** %3, align 8
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  %24 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %stream, i32 0, i32 4
  store i32 %23, i32* %24, align 8
  %25 = call i32 @mz_inflateInit(%struct.mz_stream_s* %stream)
  store i32 %25, i32* %status, align 4
  %26 = load i32, i32* %status, align 4
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %30

; <label>:28                                      ; preds = %13
  %29 = load i32, i32* %status, align 4
  store i32 %29, i32* %1, align 4
  br label %52

; <label>:30                                      ; preds = %13
  %31 = call i32 @mz_inflate(%struct.mz_stream_s* %stream, i32 4)
  store i32 %31, i32* %status, align 4
  %32 = load i32, i32* %status, align 4
  %33 = icmp ne i32 %32, 1
  br i1 %33, label %34, label %47

; <label>:34                                      ; preds = %30
  %35 = call i32 @mz_inflateEnd(%struct.mz_stream_s* %stream)
  %36 = load i32, i32* %status, align 4
  %37 = icmp eq i32 %36, -5
  br i1 %37, label %38, label %43

; <label>:38                                      ; preds = %34
  %39 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %stream, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %43, label %42

; <label>:42                                      ; preds = %38
  br label %45

; <label>:43                                      ; preds = %38, %34
  %44 = load i32, i32* %status, align 4
  br label %45

; <label>:45                                      ; preds = %43, %42
  %46 = phi i32 [ -3, %42 ], [ %44, %43 ]
  store i32 %46, i32* %1, align 4
  br label %52

; <label>:47                                      ; preds = %30
  %48 = getelementptr inbounds %struct.mz_stream_s, %struct.mz_stream_s* %stream, i32 0, i32 5
  %49 = load i64, i64* %48, align 8
  %50 = load i64*, i64** %3, align 8
  store i64 %49, i64* %50, align 8
  %51 = call i32 @mz_inflateEnd(%struct.mz_stream_s* %stream)
  store i32 %51, i32* %1, align 4
  br label %52

; <label>:52                                      ; preds = %47, %45, %28, %12
  %53 = load i32, i32* %1, align 4
  ret i32 %53
}

; Function Attrs: nounwind uwtable
define i8* @mz_error(i32 %err) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %err, i32* %2, align 4
  store i32 0, i32* %i, align 4
  br label %3

; <label>:3                                       ; preds = %22, %0
  %4 = load i32, i32* %i, align 4
  %5 = zext i32 %4 to i64
  %6 = icmp ult i64 %5, 10
  br i1 %6, label %7, label %25

; <label>:7                                       ; preds = %3
  %8 = load i32, i32* %i, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds [10 x %struct.anon], [10 x %struct.anon]* @mz_error.s_error_descs, i64 0, i64 %9
  %11 = getelementptr inbounds %struct.anon, %struct.anon* %10, i32 0, i32 0
  %12 = load i32, i32* %11, align 16
  %13 = load i32, i32* %2, align 4
  %14 = icmp eq i32 %12, %13
  br i1 %14, label %15, label %21

; <label>:15                                      ; preds = %7
  %16 = load i32, i32* %i, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds [10 x %struct.anon], [10 x %struct.anon]* @mz_error.s_error_descs, i64 0, i64 %17
  %19 = getelementptr inbounds %struct.anon, %struct.anon* %18, i32 0, i32 1
  %20 = load i8*, i8** %19, align 8
  store i8* %20, i8** %1, align 8
  br label %26

; <label>:21                                      ; preds = %7
  br label %22

; <label>:22                                      ; preds = %21
  %23 = load i32, i32* %i, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %3

; <label>:25                                      ; preds = %3
  store i8* null, i8** %1, align 8
  br label %26

; <label>:26                                      ; preds = %25, %15
  %27 = load i8*, i8** %1, align 8
  ret i8* %27
}

; Function Attrs: nounwind uwtable
define i8* @tinfl_decompress_mem_to_heap(i8* %pSrc_buf, i64 %src_buf_len, i64* %pOut_len, i32 %flags) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i32, align 4
  %decomp = alloca %struct.tinfl_decompressor_tag, align 8
  %pBuf = alloca i8*, align 8
  %pNew_buf = alloca i8*, align 8
  %src_buf_ofs = alloca i64, align 8
  %out_buf_capacity = alloca i64, align 8
  %src_buf_size = alloca i64, align 8
  %dst_buf_size = alloca i64, align 8
  %new_out_buf_capacity = alloca i64, align 8
  %status = alloca i32, align 4
  store i8* %pSrc_buf, i8** %2, align 8
  store i64 %src_buf_len, i64* %3, align 8
  store i64* %pOut_len, i64** %4, align 8
  store i32 %flags, i32* %5, align 4
  store i8* null, i8** %pBuf, align 8
  store i64 0, i64* %src_buf_ofs, align 8
  store i64 0, i64* %out_buf_capacity, align 8
  %6 = load i64*, i64** %4, align 8
  store i64 0, i64* %6, align 8
  br label %7

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %decomp, i32 0, i32 0
  store i32 0, i32* %8, align 8
  br label %9

; <label>:9                                       ; preds = %7
  br label %10

; <label>:10                                      ; preds = %70, %9
  %11 = load i64, i64* %3, align 8
  %12 = load i64, i64* %src_buf_ofs, align 8
  %13 = sub i64 %11, %12
  store i64 %13, i64* %src_buf_size, align 8
  %14 = load i64, i64* %out_buf_capacity, align 8
  %15 = load i64*, i64** %4, align 8
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  store i64 %17, i64* %dst_buf_size, align 8
  %18 = load i8*, i8** %2, align 8
  %19 = load i64, i64* %src_buf_ofs, align 8
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = load i8*, i8** %pBuf, align 8
  %22 = load i8*, i8** %pBuf, align 8
  %23 = icmp ne i8* %22, null
  br i1 %23, label %24, label %29

; <label>:24                                      ; preds = %10
  %25 = load i8*, i8** %pBuf, align 8
  %26 = load i64*, i64** %4, align 8
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %25, i64 %27
  br label %30

; <label>:29                                      ; preds = %10
  br label %30

; <label>:30                                      ; preds = %29, %24
  %31 = phi i8* [ %28, %24 ], [ null, %29 ]
  %32 = load i32, i32* %5, align 4
  %33 = and i32 %32, -3
  %34 = or i32 %33, 4
  %35 = call i32 @tinfl_decompress(%struct.tinfl_decompressor_tag* %decomp, i8* %20, i64* %src_buf_size, i8* %21, i8* %31, i64* %dst_buf_size, i32 %34)
  store i32 %35, i32* %status, align 4
  %36 = load i32, i32* %status, align 4
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %41, label %38

; <label>:38                                      ; preds = %30
  %39 = load i32, i32* %status, align 4
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %44

; <label>:41                                      ; preds = %38, %30
  %42 = load i8*, i8** %pBuf, align 8
  call void @free(i8* %42) #6
  %43 = load i64*, i64** %4, align 8
  store i64 0, i64* %43, align 8
  store i8* null, i8** %1, align 8
  br label %75

; <label>:44                                      ; preds = %38
  %45 = load i64, i64* %src_buf_size, align 8
  %46 = load i64, i64* %src_buf_ofs, align 8
  %47 = add i64 %46, %45
  store i64 %47, i64* %src_buf_ofs, align 8
  %48 = load i64, i64* %dst_buf_size, align 8
  %49 = load i64*, i64** %4, align 8
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, %48
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %status, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

; <label>:54                                      ; preds = %44
  br label %73

; <label>:55                                      ; preds = %44
  %56 = load i64, i64* %out_buf_capacity, align 8
  %57 = mul i64 %56, 2
  store i64 %57, i64* %new_out_buf_capacity, align 8
  %58 = load i64, i64* %new_out_buf_capacity, align 8
  %59 = icmp ult i64 %58, 128
  br i1 %59, label %60, label %61

; <label>:60                                      ; preds = %55
  store i64 128, i64* %new_out_buf_capacity, align 8
  br label %61

; <label>:61                                      ; preds = %60, %55
  %62 = load i8*, i8** %pBuf, align 8
  %63 = load i64, i64* %new_out_buf_capacity, align 8
  %64 = call i8* @realloc(i8* %62, i64 %63) #6
  store i8* %64, i8** %pNew_buf, align 8
  %65 = load i8*, i8** %pNew_buf, align 8
  %66 = icmp ne i8* %65, null
  br i1 %66, label %70, label %67

; <label>:67                                      ; preds = %61
  %68 = load i8*, i8** %pBuf, align 8
  call void @free(i8* %68) #6
  %69 = load i64*, i64** %4, align 8
  store i64 0, i64* %69, align 8
  store i8* null, i8** %1, align 8
  br label %75

; <label>:70                                      ; preds = %61
  %71 = load i8*, i8** %pNew_buf, align 8
  store i8* %71, i8** %pBuf, align 8
  %72 = load i64, i64* %new_out_buf_capacity, align 8
  store i64 %72, i64* %out_buf_capacity, align 8
  br label %10

; <label>:73                                      ; preds = %54
  %74 = load i8*, i8** %pBuf, align 8
  store i8* %74, i8** %1, align 8
  br label %75

; <label>:75                                      ; preds = %73, %67, %41
  %76 = load i8*, i8** %1, align 8
  ret i8* %76
}

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #1

; Function Attrs: nounwind uwtable
define i64 @tinfl_decompress_mem_to_mem(i8* %pOut_buf, i64 %out_buf_len, i8* %pSrc_buf, i64 %src_buf_len, i32 %flags) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %decomp = alloca %struct.tinfl_decompressor_tag, align 8
  %status = alloca i32, align 4
  store i8* %pOut_buf, i8** %1, align 8
  store i64 %out_buf_len, i64* %2, align 8
  store i8* %pSrc_buf, i8** %3, align 8
  store i64 %src_buf_len, i64* %4, align 8
  store i32 %flags, i32* %5, align 4
  br label %6

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %decomp, i32 0, i32 0
  store i32 0, i32* %7, align 8
  br label %8

; <label>:8                                       ; preds = %6
  %9 = load i8*, i8** %3, align 8
  %10 = load i8*, i8** %1, align 8
  %11 = load i8*, i8** %1, align 8
  %12 = load i32, i32* %5, align 4
  %13 = and i32 %12, -3
  %14 = or i32 %13, 4
  %15 = call i32 @tinfl_decompress(%struct.tinfl_decompressor_tag* %decomp, i8* %9, i64* %4, i8* %10, i8* %11, i64* %2, i32 %14)
  store i32 %15, i32* %status, align 4
  %16 = load i32, i32* %status, align 4
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %19

; <label>:18                                      ; preds = %8
  br label %21

; <label>:19                                      ; preds = %8
  %20 = load i64, i64* %2, align 8
  br label %21

; <label>:21                                      ; preds = %19, %18
  %22 = phi i64 [ -1, %18 ], [ %20, %19 ]
  ret i64 %22
}

; Function Attrs: nounwind uwtable
define i32 @tinfl_decompress_mem_to_callback(i8* %pIn_buf, i64* %pIn_buf_size, i32 (i8*, i32, i8*)* %pPut_buf_func, i8* %pPut_buf_user, i32 %flags) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i64*, align 8
  %4 = alloca i32 (i8*, i32, i8*)*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %result = alloca i32, align 4
  %decomp = alloca %struct.tinfl_decompressor_tag, align 8
  %pDict = alloca i8*, align 8
  %in_buf_ofs = alloca i64, align 8
  %dict_ofs = alloca i64, align 8
  %in_buf_size = alloca i64, align 8
  %dst_buf_size = alloca i64, align 8
  %status = alloca i32, align 4
  store i8* %pIn_buf, i8** %2, align 8
  store i64* %pIn_buf_size, i64** %3, align 8
  store i32 (i8*, i32, i8*)* %pPut_buf_func, i32 (i8*, i32, i8*)** %4, align 8
  store i8* %pPut_buf_user, i8** %5, align 8
  store i32 %flags, i32* %6, align 4
  store i32 0, i32* %result, align 4
  %7 = call noalias i8* @malloc(i64 32768) #6
  store i8* %7, i8** %pDict, align 8
  store i64 0, i64* %in_buf_ofs, align 8
  store i64 0, i64* %dict_ofs, align 8
  %8 = load i8*, i8** %pDict, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %11, label %10

; <label>:10                                      ; preds = %0
  store i32 -1, i32* %1, align 4
  br label %65

; <label>:11                                      ; preds = %0
  br label %12

; <label>:12                                      ; preds = %11
  %13 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %decomp, i32 0, i32 0
  store i32 0, i32* %13, align 8
  br label %14

; <label>:14                                      ; preds = %12
  br label %15

; <label>:15                                      ; preds = %55, %14
  %16 = load i64*, i64** %3, align 8
  %17 = load i64, i64* %16, align 8
  %18 = load i64, i64* %in_buf_ofs, align 8
  %19 = sub i64 %17, %18
  store i64 %19, i64* %in_buf_size, align 8
  %20 = load i64, i64* %dict_ofs, align 8
  %21 = sub i64 32768, %20
  store i64 %21, i64* %dst_buf_size, align 8
  %22 = load i8*, i8** %2, align 8
  %23 = load i64, i64* %in_buf_ofs, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 %23
  %25 = load i8*, i8** %pDict, align 8
  %26 = load i8*, i8** %pDict, align 8
  %27 = load i64, i64* %dict_ofs, align 8
  %28 = getelementptr inbounds i8, i8* %26, i64 %27
  %29 = load i32, i32* %6, align 4
  %30 = and i32 %29, -7
  %31 = call i32 @tinfl_decompress(%struct.tinfl_decompressor_tag* %decomp, i8* %24, i64* %in_buf_size, i8* %25, i8* %28, i64* %dst_buf_size, i32 %30)
  store i32 %31, i32* %status, align 4
  %32 = load i64, i64* %in_buf_size, align 8
  %33 = load i64, i64* %in_buf_ofs, align 8
  %34 = add i64 %33, %32
  store i64 %34, i64* %in_buf_ofs, align 8
  %35 = load i64, i64* %dst_buf_size, align 8
  %36 = icmp ne i64 %35, 0
  br i1 %36, label %37, label %48

; <label>:37                                      ; preds = %15
  %38 = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %4, align 8
  %39 = load i8*, i8** %pDict, align 8
  %40 = load i64, i64* %dict_ofs, align 8
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  %42 = load i64, i64* %dst_buf_size, align 8
  %43 = trunc i64 %42 to i32
  %44 = load i8*, i8** %5, align 8
  %45 = call i32 %38(i8* %41, i32 %43, i8* %44)
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %48, label %47

; <label>:47                                      ; preds = %37
  br label %60

; <label>:48                                      ; preds = %37, %15
  %49 = load i32, i32* %status, align 4
  %50 = icmp ne i32 %49, 2
  br i1 %50, label %51, label %55

; <label>:51                                      ; preds = %48
  %52 = load i32, i32* %status, align 4
  %53 = icmp eq i32 %52, 0
  %54 = zext i1 %53 to i32
  store i32 %54, i32* %result, align 4
  br label %60

; <label>:55                                      ; preds = %48
  %56 = load i64, i64* %dict_ofs, align 8
  %57 = load i64, i64* %dst_buf_size, align 8
  %58 = add i64 %56, %57
  %59 = and i64 %58, 32767
  store i64 %59, i64* %dict_ofs, align 8
  br label %15

; <label>:60                                      ; preds = %51, %47
  %61 = load i8*, i8** %pDict, align 8
  call void @free(i8* %61) #6
  %62 = load i64, i64* %in_buf_ofs, align 8
  %63 = load i64*, i64** %3, align 8
  store i64 %62, i64* %63, align 8
  %64 = load i32, i32* %result, align 4
  store i32 %64, i32* %1, align 4
  br label %65

; <label>:65                                      ; preds = %60, %10
  %66 = load i32, i32* %1, align 4
  ret i32 %66
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #1

; Function Attrs: nounwind uwtable
define internal i32 @tdefl_flush_output_buffer(%struct.tdefl_compressor* %d) #0 {
  %1 = alloca %struct.tdefl_compressor*, align 8
  %n = alloca i64, align 8
  store %struct.tdefl_compressor* %d, %struct.tdefl_compressor** %1, align 8
  %2 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %3 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %2, i32 0, i32 29
  %4 = load i64*, i64** %3, align 8
  %5 = icmp ne i64* %4, null
  br i1 %5, label %6, label %19

; <label>:6                                       ; preds = %0
  %7 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %8 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %7, i32 0, i32 32
  %9 = load i8*, i8** %8, align 8
  %10 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %11 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %10, i32 0, i32 27
  %12 = load i8*, i8** %11, align 8
  %13 = ptrtoint i8* %9 to i64
  %14 = ptrtoint i8* %12 to i64
  %15 = sub i64 %13, %14
  %16 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %17 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %16, i32 0, i32 29
  %18 = load i64*, i64** %17, align 8
  store i64 %15, i64* %18, align 8
  br label %19

; <label>:19                                      ; preds = %6, %0
  %20 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %21 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %20, i32 0, i32 30
  %22 = load i64*, i64** %21, align 8
  %23 = icmp ne i64* %22, null
  br i1 %23, label %24, label %93

; <label>:24                                      ; preds = %19
  %25 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %26 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %25, i32 0, i32 30
  %27 = load i64*, i64** %26, align 8
  %28 = load i64, i64* %27, align 8
  %29 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %30 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %29, i32 0, i32 34
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %28, %31
  %33 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %34 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %33, i32 0, i32 22
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = icmp ult i64 %32, %36
  br i1 %37, label %38, label %47

; <label>:38                                      ; preds = %24
  %39 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %40 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %39, i32 0, i32 30
  %41 = load i64*, i64** %40, align 8
  %42 = load i64, i64* %41, align 8
  %43 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %44 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %43, i32 0, i32 34
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %42, %45
  br label %52

; <label>:47                                      ; preds = %24
  %48 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %49 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %48, i32 0, i32 22
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  br label %52

; <label>:52                                      ; preds = %47, %38
  %53 = phi i64 [ %46, %38 ], [ %51, %47 ]
  store i64 %53, i64* %n, align 8
  %54 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %55 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %54, i32 0, i32 28
  %56 = load i8*, i8** %55, align 8
  %57 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %58 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %57, i32 0, i32 34
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds i8, i8* %56, i64 %59
  %61 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %62 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %61, i32 0, i32 42
  %63 = getelementptr inbounds [85196 x i8], [85196 x i8]* %62, i32 0, i32 0
  %64 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %65 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %64, i32 0, i32 21
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds i8, i8* %63, i64 %67
  %69 = load i64, i64* %n, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %60, i8* %68, i64 %69, i32 1, i1 false)
  %70 = load i64, i64* %n, align 8
  %71 = trunc i64 %70 to i32
  %72 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %73 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %72, i32 0, i32 21
  %74 = load i32, i32* %73, align 8
  %75 = add i32 %74, %71
  store i32 %75, i32* %73, align 8
  %76 = load i64, i64* %n, align 8
  %77 = trunc i64 %76 to i32
  %78 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %79 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %78, i32 0, i32 22
  %80 = load i32, i32* %79, align 4
  %81 = sub i32 %80, %77
  store i32 %81, i32* %79, align 4
  %82 = load i64, i64* %n, align 8
  %83 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %84 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %83, i32 0, i32 34
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, %82
  store i64 %86, i64* %84, align 8
  %87 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %88 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %87, i32 0, i32 34
  %89 = load i64, i64* %88, align 8
  %90 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %91 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %90, i32 0, i32 30
  %92 = load i64*, i64** %91, align 8
  store i64 %89, i64* %92, align 8
  br label %93

; <label>:93                                      ; preds = %52, %19
  %94 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %95 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %94, i32 0, i32 23
  %96 = load i32, i32* %95, align 8
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %104

; <label>:98                                      ; preds = %93
  %99 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %100 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %99, i32 0, i32 22
  %101 = load i32, i32* %100, align 4
  %102 = icmp ne i32 %101, 0
  %103 = xor i1 %102, true
  br label %104

; <label>:104                                     ; preds = %98, %93
  %105 = phi i1 [ false, %93 ], [ %103, %98 ]
  %106 = select i1 %105, i32 1, i32 0
  ret i32 %106
}

; Function Attrs: nounwind uwtable
define internal i32 @tdefl_compress_fast(%struct.tdefl_compressor* %d) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.tdefl_compressor*, align 8
  %lookahead_pos = alloca i32, align 4
  %lookahead_size = alloca i32, align 4
  %dict_size = alloca i32, align 4
  %total_lz_bytes = alloca i32, align 4
  %num_flags_left = alloca i32, align 4
  %pLZ_code_buf = alloca i8*, align 8
  %pLZ_flags = alloca i8*, align 8
  %cur_pos = alloca i32, align 4
  %TDEFL_COMP_FAST_LOOKAHEAD_SIZE = alloca i32, align 4
  %dst_pos = alloca i32, align 4
  %num_bytes_to_process = alloca i32, align 4
  %n = alloca i32, align 4
  %cur_match_dist = alloca i32, align 4
  %cur_match_len = alloca i32, align 4
  %pCur_dict = alloca i8*, align 8
  %first_trigram = alloca i32, align 4
  %hash = alloca i32, align 4
  %probe_pos = alloca i32, align 4
  %p = alloca i16*, align 8
  %q = alloca i16*, align 8
  %probe_len = alloca i32, align 4
  %s0 = alloca i32, align 4
  %s1 = alloca i32, align 4
  %n1 = alloca i32, align 4
  %lit = alloca i8, align 1
  %n2 = alloca i32, align 4
  store %struct.tdefl_compressor* %d, %struct.tdefl_compressor** %2, align 8
  %3 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %4 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %3, i32 0, i32 6
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lookahead_pos, align 4
  %6 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %7 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %6, i32 0, i32 7
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %lookahead_size, align 4
  %9 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %10 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %9, i32 0, i32 8
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %dict_size, align 4
  %12 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %13 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %12, i32 0, i32 14
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %total_lz_bytes, align 4
  %15 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %16 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %15, i32 0, i32 13
  %17 = load i32, i32* %16, align 8
  store i32 %17, i32* %num_flags_left, align 4
  %18 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %19 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %18, i32 0, i32 9
  %20 = load i8*, i8** %19, align 8
  store i8* %20, i8** %pLZ_code_buf, align 8
  %21 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %22 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %21, i32 0, i32 10
  %23 = load i8*, i8** %22, align 8
  store i8* %23, i8** %pLZ_flags, align 8
  %24 = load i32, i32* %lookahead_pos, align 4
  %25 = and i32 %24, 32767
  store i32 %25, i32* %cur_pos, align 4
  br label %26

; <label>:26                                      ; preds = %618, %0
  %27 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %28 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %27, i32 0, i32 33
  %29 = load i64, i64* %28, align 8
  %30 = icmp ne i64 %29, 0
  br i1 %30, label %41, label %31

; <label>:31                                      ; preds = %26
  %32 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %33 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %32, i32 0, i32 31
  %34 = load i32, i32* %33, align 8
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %39

; <label>:36                                      ; preds = %31
  %37 = load i32, i32* %lookahead_size, align 4
  %38 = icmp ne i32 %37, 0
  br label %39

; <label>:39                                      ; preds = %36, %31
  %40 = phi i1 [ false, %31 ], [ %38, %36 ]
  br label %41

; <label>:41                                      ; preds = %39, %26
  %42 = phi i1 [ true, %26 ], [ %40, %39 ]
  br i1 %42, label %43, label %619

; <label>:43                                      ; preds = %41
  store i32 4096, i32* %TDEFL_COMP_FAST_LOOKAHEAD_SIZE, align 4
  %44 = load i32, i32* %lookahead_pos, align 4
  %45 = load i32, i32* %lookahead_size, align 4
  %46 = add i32 %44, %45
  %47 = and i32 %46, 32767
  store i32 %47, i32* %dst_pos, align 4
  %48 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %49 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %48, i32 0, i32 33
  %50 = load i64, i64* %49, align 8
  %51 = load i32, i32* %lookahead_size, align 4
  %52 = sub i32 4096, %51
  %53 = zext i32 %52 to i64
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %55, label %59

; <label>:55                                      ; preds = %43
  %56 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %57 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %56, i32 0, i32 33
  %58 = load i64, i64* %57, align 8
  br label %63

; <label>:59                                      ; preds = %43
  %60 = load i32, i32* %lookahead_size, align 4
  %61 = sub i32 4096, %60
  %62 = zext i32 %61 to i64
  br label %63

; <label>:63                                      ; preds = %59, %55
  %64 = phi i64 [ %58, %55 ], [ %62, %59 ]
  %65 = trunc i64 %64 to i32
  store i32 %65, i32* %num_bytes_to_process, align 4
  %66 = load i32, i32* %num_bytes_to_process, align 4
  %67 = zext i32 %66 to i64
  %68 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %69 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %68, i32 0, i32 33
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %70, %67
  store i64 %71, i64* %69, align 8
  %72 = load i32, i32* %num_bytes_to_process, align 4
  %73 = load i32, i32* %lookahead_size, align 4
  %74 = add i32 %73, %72
  store i32 %74, i32* %lookahead_size, align 4
  br label %75

; <label>:75                                      ; preds = %126, %63
  %76 = load i32, i32* %num_bytes_to_process, align 4
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %78, label %140

; <label>:78                                      ; preds = %75
  %79 = load i32, i32* %dst_pos, align 4
  %80 = sub i32 32768, %79
  %81 = load i32, i32* %num_bytes_to_process, align 4
  %82 = icmp ult i32 %80, %81
  br i1 %82, label %83, label %86

; <label>:83                                      ; preds = %78
  %84 = load i32, i32* %dst_pos, align 4
  %85 = sub i32 32768, %84
  br label %88

; <label>:86                                      ; preds = %78
  %87 = load i32, i32* %num_bytes_to_process, align 4
  br label %88

; <label>:88                                      ; preds = %86, %83
  %89 = phi i32 [ %85, %83 ], [ %87, %86 ]
  store i32 %89, i32* %n, align 4
  %90 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %91 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %90, i32 0, i32 35
  %92 = getelementptr inbounds [33025 x i8], [33025 x i8]* %91, i32 0, i32 0
  %93 = load i32, i32* %dst_pos, align 4
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i8, i8* %92, i64 %94
  %96 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %97 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %96, i32 0, i32 32
  %98 = load i8*, i8** %97, align 8
  %99 = load i32, i32* %n, align 4
  %100 = zext i32 %99 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %98, i64 %100, i32 1, i1 false)
  %101 = load i32, i32* %dst_pos, align 4
  %102 = icmp ult i32 %101, 257
  br i1 %102, label %103, label %126

; <label>:103                                     ; preds = %88
  %104 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %105 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %104, i32 0, i32 35
  %106 = getelementptr inbounds [33025 x i8], [33025 x i8]* %105, i32 0, i32 0
  %107 = getelementptr inbounds i8, i8* %106, i64 32768
  %108 = load i32, i32* %dst_pos, align 4
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds i8, i8* %107, i64 %109
  %111 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %112 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %111, i32 0, i32 32
  %113 = load i8*, i8** %112, align 8
  %114 = load i32, i32* %n, align 4
  %115 = load i32, i32* %dst_pos, align 4
  %116 = sub i32 257, %115
  %117 = icmp ult i32 %114, %116
  br i1 %117, label %118, label %120

; <label>:118                                     ; preds = %103
  %119 = load i32, i32* %n, align 4
  br label %123

; <label>:120                                     ; preds = %103
  %121 = load i32, i32* %dst_pos, align 4
  %122 = sub i32 257, %121
  br label %123

; <label>:123                                     ; preds = %120, %118
  %124 = phi i32 [ %119, %118 ], [ %122, %120 ]
  %125 = zext i32 %124 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %110, i8* %113, i64 %125, i32 1, i1 false)
  br label %126

; <label>:126                                     ; preds = %123, %88
  %127 = load i32, i32* %n, align 4
  %128 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %129 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %128, i32 0, i32 32
  %130 = load i8*, i8** %129, align 8
  %131 = zext i32 %127 to i64
  %132 = getelementptr inbounds i8, i8* %130, i64 %131
  store i8* %132, i8** %129, align 8
  %133 = load i32, i32* %dst_pos, align 4
  %134 = load i32, i32* %n, align 4
  %135 = add i32 %133, %134
  %136 = and i32 %135, 32767
  store i32 %136, i32* %dst_pos, align 4
  %137 = load i32, i32* %n, align 4
  %138 = load i32, i32* %num_bytes_to_process, align 4
  %139 = sub i32 %138, %137
  store i32 %139, i32* %num_bytes_to_process, align 4
  br label %75

; <label>:140                                     ; preds = %75
  %141 = load i32, i32* %lookahead_size, align 4
  %142 = sub i32 32768, %141
  %143 = load i32, i32* %dict_size, align 4
  %144 = icmp ult i32 %142, %143
  br i1 %144, label %145, label %148

; <label>:145                                     ; preds = %140
  %146 = load i32, i32* %lookahead_size, align 4
  %147 = sub i32 32768, %146
  br label %150

; <label>:148                                     ; preds = %140
  %149 = load i32, i32* %dict_size, align 4
  br label %150

; <label>:150                                     ; preds = %148, %145
  %151 = phi i32 [ %147, %145 ], [ %149, %148 ]
  store i32 %151, i32* %dict_size, align 4
  %152 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %153 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %152, i32 0, i32 31
  %154 = load i32, i32* %153, align 8
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %160, label %156

; <label>:156                                     ; preds = %150
  %157 = load i32, i32* %lookahead_size, align 4
  %158 = icmp ult i32 %157, 4096
  br i1 %158, label %159, label %160

; <label>:159                                     ; preds = %156
  br label %619

; <label>:160                                     ; preds = %156, %150
  br label %161

; <label>:161                                     ; preds = %516, %160
  %162 = load i32, i32* %lookahead_size, align 4
  %163 = icmp uge i32 %162, 4
  br i1 %163, label %164, label %517

; <label>:164                                     ; preds = %161
  store i32 1, i32* %cur_match_len, align 4
  %165 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %166 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %165, i32 0, i32 35
  %167 = getelementptr inbounds [33025 x i8], [33025 x i8]* %166, i32 0, i32 0
  %168 = load i32, i32* %cur_pos, align 4
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds i8, i8* %167, i64 %169
  store i8* %170, i8** %pCur_dict, align 8
  %171 = load i8*, i8** %pCur_dict, align 8
  %172 = bitcast i8* %171 to i32*
  %173 = load i32, i32* %172, align 4
  %174 = and i32 %173, 16777215
  store i32 %174, i32* %first_trigram, align 4
  %175 = load i32, i32* %first_trigram, align 4
  %176 = load i32, i32* %first_trigram, align 4
  %177 = lshr i32 %176, 17
  %178 = xor i32 %175, %177
  %179 = and i32 %178, 4095
  store i32 %179, i32* %hash, align 4
  %180 = load i32, i32* %hash, align 4
  %181 = zext i32 %180 to i64
  %182 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %183 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %182, i32 0, i32 41
  %184 = getelementptr inbounds [32768 x i16], [32768 x i16]* %183, i64 0, i64 %181
  %185 = load i16, i16* %184, align 2
  %186 = zext i16 %185 to i32
  store i32 %186, i32* %probe_pos, align 4
  %187 = load i32, i32* %lookahead_pos, align 4
  %188 = trunc i32 %187 to i16
  %189 = load i32, i32* %hash, align 4
  %190 = zext i32 %189 to i64
  %191 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %192 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %191, i32 0, i32 41
  %193 = getelementptr inbounds [32768 x i16], [32768 x i16]* %192, i64 0, i64 %190
  store i16 %188, i16* %193, align 2
  %194 = load i32, i32* %lookahead_pos, align 4
  %195 = load i32, i32* %probe_pos, align 4
  %196 = sub i32 %194, %195
  %197 = trunc i32 %196 to i16
  %198 = zext i16 %197 to i32
  store i32 %198, i32* %cur_match_dist, align 4
  %199 = load i32, i32* %dict_size, align 4
  %200 = icmp ule i32 %198, %199
  br i1 %200, label %201, label %410

; <label>:201                                     ; preds = %164
  %202 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %203 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %202, i32 0, i32 35
  %204 = getelementptr inbounds [33025 x i8], [33025 x i8]* %203, i32 0, i32 0
  %205 = load i32, i32* %probe_pos, align 4
  %206 = and i32 %205, 32767
  store i32 %206, i32* %probe_pos, align 4
  %207 = zext i32 %206 to i64
  %208 = getelementptr inbounds i8, i8* %204, i64 %207
  %209 = bitcast i8* %208 to i32*
  %210 = load i32, i32* %209, align 4
  %211 = and i32 %210, 16777215
  %212 = load i32, i32* %first_trigram, align 4
  %213 = icmp eq i32 %211, %212
  br i1 %213, label %214, label %410

; <label>:214                                     ; preds = %201
  %215 = load i8*, i8** %pCur_dict, align 8
  %216 = bitcast i8* %215 to i16*
  store i16* %216, i16** %p, align 8
  %217 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %218 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %217, i32 0, i32 35
  %219 = getelementptr inbounds [33025 x i8], [33025 x i8]* %218, i32 0, i32 0
  %220 = load i32, i32* %probe_pos, align 4
  %221 = zext i32 %220 to i64
  %222 = getelementptr inbounds i8, i8* %219, i64 %221
  %223 = bitcast i8* %222 to i16*
  store i16* %223, i16** %q, align 8
  store i32 32, i32* %probe_len, align 4
  br label %224

; <label>:224                                     ; preds = %269, %214
  br label %225

; <label>:225                                     ; preds = %224
  %226 = load i16*, i16** %p, align 8
  %227 = getelementptr inbounds i16, i16* %226, i32 1
  store i16* %227, i16** %p, align 8
  %228 = load i16, i16* %227, align 2
  %229 = zext i16 %228 to i32
  %230 = load i16*, i16** %q, align 8
  %231 = getelementptr inbounds i16, i16* %230, i32 1
  store i16* %231, i16** %q, align 8
  %232 = load i16, i16* %231, align 2
  %233 = zext i16 %232 to i32
  %234 = icmp eq i32 %229, %233
  br i1 %234, label %235, label %269

; <label>:235                                     ; preds = %225
  %236 = load i16*, i16** %p, align 8
  %237 = getelementptr inbounds i16, i16* %236, i32 1
  store i16* %237, i16** %p, align 8
  %238 = load i16, i16* %237, align 2
  %239 = zext i16 %238 to i32
  %240 = load i16*, i16** %q, align 8
  %241 = getelementptr inbounds i16, i16* %240, i32 1
  store i16* %241, i16** %q, align 8
  %242 = load i16, i16* %241, align 2
  %243 = zext i16 %242 to i32
  %244 = icmp eq i32 %239, %243
  br i1 %244, label %245, label %269

; <label>:245                                     ; preds = %235
  %246 = load i16*, i16** %p, align 8
  %247 = getelementptr inbounds i16, i16* %246, i32 1
  store i16* %247, i16** %p, align 8
  %248 = load i16, i16* %247, align 2
  %249 = zext i16 %248 to i32
  %250 = load i16*, i16** %q, align 8
  %251 = getelementptr inbounds i16, i16* %250, i32 1
  store i16* %251, i16** %q, align 8
  %252 = load i16, i16* %251, align 2
  %253 = zext i16 %252 to i32
  %254 = icmp eq i32 %249, %253
  br i1 %254, label %255, label %269

; <label>:255                                     ; preds = %245
  %256 = load i16*, i16** %p, align 8
  %257 = getelementptr inbounds i16, i16* %256, i32 1
  store i16* %257, i16** %p, align 8
  %258 = load i16, i16* %257, align 2
  %259 = zext i16 %258 to i32
  %260 = load i16*, i16** %q, align 8
  %261 = getelementptr inbounds i16, i16* %260, i32 1
  store i16* %261, i16** %q, align 8
  %262 = load i16, i16* %261, align 2
  %263 = zext i16 %262 to i32
  %264 = icmp eq i32 %259, %263
  br i1 %264, label %265, label %269

; <label>:265                                     ; preds = %255
  %266 = load i32, i32* %probe_len, align 4
  %267 = add i32 %266, -1
  store i32 %267, i32* %probe_len, align 4
  %268 = icmp ugt i32 %267, 0
  br label %269

; <label>:269                                     ; preds = %265, %255, %245, %235, %225
  %270 = phi i1 [ false, %255 ], [ false, %245 ], [ false, %235 ], [ false, %225 ], [ %268, %265 ]
  br i1 %270, label %224, label %271

; <label>:271                                     ; preds = %269
  %272 = load i16*, i16** %p, align 8
  %273 = load i8*, i8** %pCur_dict, align 8
  %274 = bitcast i8* %273 to i16*
  %275 = ptrtoint i16* %272 to i64
  %276 = ptrtoint i16* %274 to i64
  %277 = sub i64 %275, %276
  %278 = sdiv exact i64 %277, 2
  %279 = trunc i64 %278 to i32
  %280 = mul i32 %279, 2
  %281 = load i16*, i16** %p, align 8
  %282 = bitcast i16* %281 to i8*
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i32
  %285 = load i16*, i16** %q, align 8
  %286 = bitcast i16* %285 to i8*
  %287 = load i8, i8* %286, align 1
  %288 = zext i8 %287 to i32
  %289 = icmp eq i32 %284, %288
  %290 = zext i1 %289 to i32
  %291 = add i32 %280, %290
  store i32 %291, i32* %cur_match_len, align 4
  %292 = load i32, i32* %probe_len, align 4
  %293 = icmp ne i32 %292, 0
  br i1 %293, label %298, label %294

; <label>:294                                     ; preds = %271
  %295 = load i32, i32* %cur_match_dist, align 4
  %296 = icmp ne i32 %295, 0
  %297 = select i1 %296, i32 258, i32 0
  store i32 %297, i32* %cur_match_len, align 4
  br label %298

; <label>:298                                     ; preds = %294, %271
  %299 = load i32, i32* %cur_match_len, align 4
  %300 = icmp ult i32 %299, 3
  br i1 %300, label %307, label %301

; <label>:301                                     ; preds = %298
  %302 = load i32, i32* %cur_match_len, align 4
  %303 = icmp eq i32 %302, 3
  br i1 %303, label %304, label %327

; <label>:304                                     ; preds = %301
  %305 = load i32, i32* %cur_match_dist, align 4
  %306 = icmp uge i32 %305, 8192
  br i1 %306, label %307, label %327

; <label>:307                                     ; preds = %304, %298
  store i32 1, i32* %cur_match_len, align 4
  %308 = load i32, i32* %first_trigram, align 4
  %309 = trunc i32 %308 to i8
  %310 = load i8*, i8** %pLZ_code_buf, align 8
  %311 = getelementptr inbounds i8, i8* %310, i32 1
  store i8* %311, i8** %pLZ_code_buf, align 8
  store i8 %309, i8* %310, align 1
  %312 = load i8*, i8** %pLZ_flags, align 8
  %313 = load i8, i8* %312, align 1
  %314 = zext i8 %313 to i32
  %315 = ashr i32 %314, 1
  %316 = trunc i32 %315 to i8
  %317 = load i8*, i8** %pLZ_flags, align 8
  store i8 %316, i8* %317, align 1
  %318 = load i32, i32* %first_trigram, align 4
  %319 = trunc i32 %318 to i8
  %320 = zext i8 %319 to i64
  %321 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %322 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %321, i32 0, i32 36
  %323 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %322, i64 0, i64 0
  %324 = getelementptr inbounds [288 x i16], [288 x i16]* %323, i64 0, i64 %320
  %325 = load i16, i16* %324, align 2
  %326 = add i16 %325, 1
  store i16 %326, i16* %324, align 2
  br label %409

; <label>:327                                     ; preds = %304, %301
  %328 = load i32, i32* %cur_match_len, align 4
  %329 = load i32, i32* %lookahead_size, align 4
  %330 = icmp ult i32 %328, %329
  br i1 %330, label %331, label %333

; <label>:331                                     ; preds = %327
  %332 = load i32, i32* %cur_match_len, align 4
  br label %335

; <label>:333                                     ; preds = %327
  %334 = load i32, i32* %lookahead_size, align 4
  br label %335

; <label>:335                                     ; preds = %333, %331
  %336 = phi i32 [ %332, %331 ], [ %334, %333 ]
  store i32 %336, i32* %cur_match_len, align 4
  %337 = load i32, i32* %cur_match_len, align 4
  %338 = icmp uge i32 %337, 3
  br i1 %338, label %339, label %346

; <label>:339                                     ; preds = %335
  %340 = load i32, i32* %cur_match_dist, align 4
  %341 = icmp uge i32 %340, 1
  br i1 %341, label %342, label %346

; <label>:342                                     ; preds = %339
  %343 = load i32, i32* %cur_match_dist, align 4
  %344 = icmp ule i32 %343, 32768
  br i1 %344, label %345, label %346

; <label>:345                                     ; preds = %342
  br label %348

; <label>:346                                     ; preds = %342, %339, %335
  call void @__assert_fail(i8* getelementptr inbounds ([106 x i8], [106 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2390, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_fast, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %348

; <label>:348                                     ; preds = %347, %345
  %349 = load i32, i32* %cur_match_dist, align 4
  %350 = add i32 %349, -1
  store i32 %350, i32* %cur_match_dist, align 4
  %351 = load i32, i32* %cur_match_len, align 4
  %352 = sub i32 %351, 3
  %353 = trunc i32 %352 to i8
  %354 = load i8*, i8** %pLZ_code_buf, align 8
  %355 = getelementptr inbounds i8, i8* %354, i64 0
  store i8 %353, i8* %355, align 1
  %356 = load i32, i32* %cur_match_dist, align 4
  %357 = trunc i32 %356 to i16
  %358 = load i8*, i8** %pLZ_code_buf, align 8
  %359 = getelementptr inbounds i8, i8* %358, i64 1
  %360 = bitcast i8* %359 to i16*
  store i16 %357, i16* %360, align 2
  %361 = load i8*, i8** %pLZ_code_buf, align 8
  %362 = getelementptr inbounds i8, i8* %361, i64 3
  store i8* %362, i8** %pLZ_code_buf, align 8
  %363 = load i8*, i8** %pLZ_flags, align 8
  %364 = load i8, i8* %363, align 1
  %365 = zext i8 %364 to i32
  %366 = ashr i32 %365, 1
  %367 = or i32 %366, 128
  %368 = trunc i32 %367 to i8
  %369 = load i8*, i8** %pLZ_flags, align 8
  store i8 %368, i8* %369, align 1
  %370 = load i32, i32* %cur_match_dist, align 4
  %371 = and i32 %370, 511
  %372 = zext i32 %371 to i64
  %373 = getelementptr inbounds [512 x i8], [512 x i8]* @s_tdefl_small_dist_sym, i64 0, i64 %372
  %374 = load i8, i8* %373, align 1
  %375 = zext i8 %374 to i32
  store i32 %375, i32* %s0, align 4
  %376 = load i32, i32* %cur_match_dist, align 4
  %377 = lshr i32 %376, 8
  %378 = zext i32 %377 to i64
  %379 = getelementptr inbounds [128 x i8], [128 x i8]* @s_tdefl_large_dist_sym, i64 0, i64 %378
  %380 = load i8, i8* %379, align 1
  %381 = zext i8 %380 to i32
  store i32 %381, i32* %s1, align 4
  %382 = load i32, i32* %cur_match_dist, align 4
  %383 = icmp ult i32 %382, 512
  br i1 %383, label %384, label %386

; <label>:384                                     ; preds = %348
  %385 = load i32, i32* %s0, align 4
  br label %388

; <label>:386                                     ; preds = %348
  %387 = load i32, i32* %s1, align 4
  br label %388

; <label>:388                                     ; preds = %386, %384
  %389 = phi i32 [ %385, %384 ], [ %387, %386 ]
  %390 = zext i32 %389 to i64
  %391 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %392 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %391, i32 0, i32 36
  %393 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %392, i64 0, i64 1
  %394 = getelementptr inbounds [288 x i16], [288 x i16]* %393, i64 0, i64 %390
  %395 = load i16, i16* %394, align 2
  %396 = add i16 %395, 1
  store i16 %396, i16* %394, align 2
  %397 = load i32, i32* %cur_match_len, align 4
  %398 = sub i32 %397, 3
  %399 = zext i32 %398 to i64
  %400 = getelementptr inbounds [256 x i16], [256 x i16]* @s_tdefl_len_sym, i64 0, i64 %399
  %401 = load i16, i16* %400, align 2
  %402 = zext i16 %401 to i64
  %403 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %404 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %403, i32 0, i32 36
  %405 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %404, i64 0, i64 0
  %406 = getelementptr inbounds [288 x i16], [288 x i16]* %405, i64 0, i64 %402
  %407 = load i16, i16* %406, align 2
  %408 = add i16 %407, 1
  store i16 %408, i16* %406, align 2
  br label %409

; <label>:409                                     ; preds = %388, %307
  br label %430

; <label>:410                                     ; preds = %201, %164
  %411 = load i32, i32* %first_trigram, align 4
  %412 = trunc i32 %411 to i8
  %413 = load i8*, i8** %pLZ_code_buf, align 8
  %414 = getelementptr inbounds i8, i8* %413, i32 1
  store i8* %414, i8** %pLZ_code_buf, align 8
  store i8 %412, i8* %413, align 1
  %415 = load i8*, i8** %pLZ_flags, align 8
  %416 = load i8, i8* %415, align 1
  %417 = zext i8 %416 to i32
  %418 = ashr i32 %417, 1
  %419 = trunc i32 %418 to i8
  %420 = load i8*, i8** %pLZ_flags, align 8
  store i8 %419, i8* %420, align 1
  %421 = load i32, i32* %first_trigram, align 4
  %422 = trunc i32 %421 to i8
  %423 = zext i8 %422 to i64
  %424 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %425 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %424, i32 0, i32 36
  %426 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %425, i64 0, i64 0
  %427 = getelementptr inbounds [288 x i16], [288 x i16]* %426, i64 0, i64 %423
  %428 = load i16, i16* %427, align 2
  %429 = add i16 %428, 1
  store i16 %429, i16* %427, align 2
  br label %430

; <label>:430                                     ; preds = %410, %409
  %431 = load i32, i32* %num_flags_left, align 4
  %432 = add i32 %431, -1
  store i32 %432, i32* %num_flags_left, align 4
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %434, label %437

; <label>:434                                     ; preds = %430
  store i32 8, i32* %num_flags_left, align 4
  %435 = load i8*, i8** %pLZ_code_buf, align 8
  %436 = getelementptr inbounds i8, i8* %435, i32 1
  store i8* %436, i8** %pLZ_code_buf, align 8
  store i8* %435, i8** %pLZ_flags, align 8
  br label %437

; <label>:437                                     ; preds = %434, %430
  %438 = load i32, i32* %cur_match_len, align 4
  %439 = load i32, i32* %total_lz_bytes, align 4
  %440 = add i32 %439, %438
  store i32 %440, i32* %total_lz_bytes, align 4
  %441 = load i32, i32* %cur_match_len, align 4
  %442 = load i32, i32* %lookahead_pos, align 4
  %443 = add i32 %442, %441
  store i32 %443, i32* %lookahead_pos, align 4
  %444 = load i32, i32* %dict_size, align 4
  %445 = load i32, i32* %cur_match_len, align 4
  %446 = add i32 %444, %445
  %447 = icmp ult i32 %446, 32768
  br i1 %447, label %448, label %452

; <label>:448                                     ; preds = %437
  %449 = load i32, i32* %dict_size, align 4
  %450 = load i32, i32* %cur_match_len, align 4
  %451 = add i32 %449, %450
  br label %453

; <label>:452                                     ; preds = %437
  br label %453

; <label>:453                                     ; preds = %452, %448
  %454 = phi i32 [ %451, %448 ], [ 32768, %452 ]
  store i32 %454, i32* %dict_size, align 4
  %455 = load i32, i32* %cur_pos, align 4
  %456 = load i32, i32* %cur_match_len, align 4
  %457 = add i32 %455, %456
  %458 = and i32 %457, 32767
  store i32 %458, i32* %cur_pos, align 4
  %459 = load i32, i32* %lookahead_size, align 4
  %460 = load i32, i32* %cur_match_len, align 4
  %461 = icmp uge i32 %459, %460
  br i1 %461, label %462, label %463

; <label>:462                                     ; preds = %453
  br label %465

; <label>:463                                     ; preds = %453
  call void @__assert_fail(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2419, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_fast, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %465

; <label>:465                                     ; preds = %464, %462
  %466 = load i32, i32* %cur_match_len, align 4
  %467 = load i32, i32* %lookahead_size, align 4
  %468 = sub i32 %467, %466
  store i32 %468, i32* %lookahead_size, align 4
  %469 = load i8*, i8** %pLZ_code_buf, align 8
  %470 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %471 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %470, i32 0, i32 39
  %472 = getelementptr inbounds [65536 x i8], [65536 x i8]* %471, i64 0, i64 65528
  %473 = icmp ugt i8* %469, %472
  br i1 %473, label %474, label %516

; <label>:474                                     ; preds = %465
  %475 = load i32, i32* %lookahead_pos, align 4
  %476 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %477 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %476, i32 0, i32 6
  store i32 %475, i32* %477, align 4
  %478 = load i32, i32* %lookahead_size, align 4
  %479 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %480 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %479, i32 0, i32 7
  store i32 %478, i32* %480, align 8
  %481 = load i32, i32* %dict_size, align 4
  %482 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %483 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %482, i32 0, i32 8
  store i32 %481, i32* %483, align 4
  %484 = load i32, i32* %total_lz_bytes, align 4
  %485 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %486 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %485, i32 0, i32 14
  store i32 %484, i32* %486, align 4
  %487 = load i8*, i8** %pLZ_code_buf, align 8
  %488 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %489 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %488, i32 0, i32 9
  store i8* %487, i8** %489, align 8
  %490 = load i8*, i8** %pLZ_flags, align 8
  %491 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %492 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %491, i32 0, i32 10
  store i8* %490, i8** %492, align 8
  %493 = load i32, i32* %num_flags_left, align 4
  %494 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %495 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %494, i32 0, i32 13
  store i32 %493, i32* %495, align 8
  %496 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %497 = call i32 @tdefl_flush_block(%struct.tdefl_compressor* %496, i32 0)
  store i32 %497, i32* %n1, align 4
  %498 = icmp ne i32 %497, 0
  br i1 %498, label %499, label %503

; <label>:499                                     ; preds = %474
  %500 = load i32, i32* %n1, align 4
  %501 = icmp slt i32 %500, 0
  %502 = select i1 %501, i32 0, i32 1
  store i32 %502, i32* %1, align 4
  br label %641

; <label>:503                                     ; preds = %474
  %504 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %505 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %504, i32 0, i32 14
  %506 = load i32, i32* %505, align 4
  store i32 %506, i32* %total_lz_bytes, align 4
  %507 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %508 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %507, i32 0, i32 9
  %509 = load i8*, i8** %508, align 8
  store i8* %509, i8** %pLZ_code_buf, align 8
  %510 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %511 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %510, i32 0, i32 10
  %512 = load i8*, i8** %511, align 8
  store i8* %512, i8** %pLZ_flags, align 8
  %513 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %514 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %513, i32 0, i32 13
  %515 = load i32, i32* %514, align 8
  store i32 %515, i32* %num_flags_left, align 4
  br label %516

; <label>:516                                     ; preds = %503, %465
  br label %161

; <label>:517                                     ; preds = %161
  br label %518

; <label>:518                                     ; preds = %617, %517
  %519 = load i32, i32* %lookahead_size, align 4
  %520 = icmp ne i32 %519, 0
  br i1 %520, label %521, label %618

; <label>:521                                     ; preds = %518
  %522 = load i32, i32* %cur_pos, align 4
  %523 = zext i32 %522 to i64
  %524 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %525 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %524, i32 0, i32 35
  %526 = getelementptr inbounds [33025 x i8], [33025 x i8]* %525, i64 0, i64 %523
  %527 = load i8, i8* %526, align 1
  store i8 %527, i8* %lit, align 1
  %528 = load i32, i32* %total_lz_bytes, align 4
  %529 = add i32 %528, 1
  store i32 %529, i32* %total_lz_bytes, align 4
  %530 = load i8, i8* %lit, align 1
  %531 = load i8*, i8** %pLZ_code_buf, align 8
  %532 = getelementptr inbounds i8, i8* %531, i32 1
  store i8* %532, i8** %pLZ_code_buf, align 8
  store i8 %530, i8* %531, align 1
  %533 = load i8*, i8** %pLZ_flags, align 8
  %534 = load i8, i8* %533, align 1
  %535 = zext i8 %534 to i32
  %536 = ashr i32 %535, 1
  %537 = trunc i32 %536 to i8
  %538 = load i8*, i8** %pLZ_flags, align 8
  store i8 %537, i8* %538, align 1
  %539 = load i32, i32* %num_flags_left, align 4
  %540 = add i32 %539, -1
  store i32 %540, i32* %num_flags_left, align 4
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %542, label %545

; <label>:542                                     ; preds = %521
  store i32 8, i32* %num_flags_left, align 4
  %543 = load i8*, i8** %pLZ_code_buf, align 8
  %544 = getelementptr inbounds i8, i8* %543, i32 1
  store i8* %544, i8** %pLZ_code_buf, align 8
  store i8* %543, i8** %pLZ_flags, align 8
  br label %545

; <label>:545                                     ; preds = %542, %521
  %546 = load i8, i8* %lit, align 1
  %547 = zext i8 %546 to i64
  %548 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %549 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %548, i32 0, i32 36
  %550 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %549, i64 0, i64 0
  %551 = getelementptr inbounds [288 x i16], [288 x i16]* %550, i64 0, i64 %547
  %552 = load i16, i16* %551, align 2
  %553 = add i16 %552, 1
  store i16 %553, i16* %551, align 2
  %554 = load i32, i32* %lookahead_pos, align 4
  %555 = add i32 %554, 1
  store i32 %555, i32* %lookahead_pos, align 4
  %556 = load i32, i32* %dict_size, align 4
  %557 = add i32 %556, 1
  %558 = icmp ult i32 %557, 32768
  br i1 %558, label %559, label %562

; <label>:559                                     ; preds = %545
  %560 = load i32, i32* %dict_size, align 4
  %561 = add i32 %560, 1
  br label %563

; <label>:562                                     ; preds = %545
  br label %563

; <label>:563                                     ; preds = %562, %559
  %564 = phi i32 [ %561, %559 ], [ 32768, %562 ]
  store i32 %564, i32* %dict_size, align 4
  %565 = load i32, i32* %cur_pos, align 4
  %566 = add i32 %565, 1
  %567 = and i32 %566, 32767
  store i32 %567, i32* %cur_pos, align 4
  %568 = load i32, i32* %lookahead_size, align 4
  %569 = add i32 %568, -1
  store i32 %569, i32* %lookahead_size, align 4
  %570 = load i8*, i8** %pLZ_code_buf, align 8
  %571 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %572 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %571, i32 0, i32 39
  %573 = getelementptr inbounds [65536 x i8], [65536 x i8]* %572, i64 0, i64 65528
  %574 = icmp ugt i8* %570, %573
  br i1 %574, label %575, label %617

; <label>:575                                     ; preds = %563
  %576 = load i32, i32* %lookahead_pos, align 4
  %577 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %578 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %577, i32 0, i32 6
  store i32 %576, i32* %578, align 4
  %579 = load i32, i32* %lookahead_size, align 4
  %580 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %581 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %580, i32 0, i32 7
  store i32 %579, i32* %581, align 8
  %582 = load i32, i32* %dict_size, align 4
  %583 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %584 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %583, i32 0, i32 8
  store i32 %582, i32* %584, align 4
  %585 = load i32, i32* %total_lz_bytes, align 4
  %586 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %587 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %586, i32 0, i32 14
  store i32 %585, i32* %587, align 4
  %588 = load i8*, i8** %pLZ_code_buf, align 8
  %589 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %590 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %589, i32 0, i32 9
  store i8* %588, i8** %590, align 8
  %591 = load i8*, i8** %pLZ_flags, align 8
  %592 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %593 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %592, i32 0, i32 10
  store i8* %591, i8** %593, align 8
  %594 = load i32, i32* %num_flags_left, align 4
  %595 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %596 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %595, i32 0, i32 13
  store i32 %594, i32* %596, align 8
  %597 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %598 = call i32 @tdefl_flush_block(%struct.tdefl_compressor* %597, i32 0)
  store i32 %598, i32* %n2, align 4
  %599 = icmp ne i32 %598, 0
  br i1 %599, label %600, label %604

; <label>:600                                     ; preds = %575
  %601 = load i32, i32* %n2, align 4
  %602 = icmp slt i32 %601, 0
  %603 = select i1 %602, i32 0, i32 1
  store i32 %603, i32* %1, align 4
  br label %641

; <label>:604                                     ; preds = %575
  %605 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %606 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %605, i32 0, i32 14
  %607 = load i32, i32* %606, align 4
  store i32 %607, i32* %total_lz_bytes, align 4
  %608 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %609 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %608, i32 0, i32 9
  %610 = load i8*, i8** %609, align 8
  store i8* %610, i8** %pLZ_code_buf, align 8
  %611 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %612 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %611, i32 0, i32 10
  %613 = load i8*, i8** %612, align 8
  store i8* %613, i8** %pLZ_flags, align 8
  %614 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %615 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %614, i32 0, i32 13
  %616 = load i32, i32* %615, align 8
  store i32 %616, i32* %num_flags_left, align 4
  br label %617

; <label>:617                                     ; preds = %604, %563
  br label %518

; <label>:618                                     ; preds = %518
  br label %26

; <label>:619                                     ; preds = %159, %41
  %620 = load i32, i32* %lookahead_pos, align 4
  %621 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %622 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %621, i32 0, i32 6
  store i32 %620, i32* %622, align 4
  %623 = load i32, i32* %lookahead_size, align 4
  %624 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %625 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %624, i32 0, i32 7
  store i32 %623, i32* %625, align 8
  %626 = load i32, i32* %dict_size, align 4
  %627 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %628 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %627, i32 0, i32 8
  store i32 %626, i32* %628, align 4
  %629 = load i32, i32* %total_lz_bytes, align 4
  %630 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %631 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %630, i32 0, i32 14
  store i32 %629, i32* %631, align 4
  %632 = load i8*, i8** %pLZ_code_buf, align 8
  %633 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %634 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %633, i32 0, i32 9
  store i8* %632, i8** %634, align 8
  %635 = load i8*, i8** %pLZ_flags, align 8
  %636 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %637 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %636, i32 0, i32 10
  store i8* %635, i8** %637, align 8
  %638 = load i32, i32* %num_flags_left, align 4
  %639 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %640 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %639, i32 0, i32 13
  store i32 %638, i32* %640, align 8
  store i32 1, i32* %1, align 4
  br label %641

; <label>:641                                     ; preds = %619, %600, %499
  %642 = load i32, i32* %1, align 4
  ret i32 %642
}

; Function Attrs: nounwind uwtable
define internal i32 @tdefl_compress_normal(%struct.tdefl_compressor* %d) #0 {
  %1 = alloca %struct.tdefl_compressor*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %s0.i10 = alloca i32, align 4
  %s1.i11 = alloca i32, align 4
  %4 = alloca %struct.tdefl_compressor*, align 8
  %5 = alloca i8, align 1
  %6 = alloca %struct.tdefl_compressor*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %s0.i6 = alloca i32, align 4
  %s1.i7 = alloca i32, align 4
  %9 = alloca %struct.tdefl_compressor*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %s0.i = alloca i32, align 4
  %s1.i = alloca i32, align 4
  %12 = alloca %struct.tdefl_compressor*, align 8
  %13 = alloca i8, align 1
  %14 = alloca %struct.tdefl_compressor*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32*, align 8
  %19 = alloca i32*, align 8
  %dist.i = alloca i32, align 4
  %pos.i = alloca i32, align 4
  %match_len.i = alloca i32, align 4
  %probe_pos.i = alloca i32, align 4
  %next_probe_pos.i = alloca i32, align 4
  %probe_len.i = alloca i32, align 4
  %num_probes_left.i = alloca i32, align 4
  %s.i = alloca i16*, align 8
  %p.i = alloca i16*, align 8
  %q.i = alloca i16*, align 8
  %c01.i = alloca i16, align 2
  %s01.i = alloca i16, align 2
  %20 = alloca i32, align 4
  %21 = alloca %struct.tdefl_compressor*, align 8
  %pSrc = alloca i8*, align 8
  %src_buf_left = alloca i64, align 8
  %flush = alloca i32, align 4
  %len_to_move = alloca i32, align 4
  %cur_match_dist = alloca i32, align 4
  %cur_match_len = alloca i32, align 4
  %cur_pos = alloca i32, align 4
  %dst_pos = alloca i32, align 4
  %ins_pos = alloca i32, align 4
  %hash = alloca i32, align 4
  %num_bytes_to_process = alloca i32, align 4
  %pSrc_end = alloca i8*, align 8
  %c = alloca i8, align 1
  %c1 = alloca i8, align 1
  %dst_pos2 = alloca i32, align 4
  %ins_pos3 = alloca i32, align 4
  %hash4 = alloca i32, align 4
  %c5 = alloca i8, align 1
  %n = alloca i32, align 4
  store %struct.tdefl_compressor* %d, %struct.tdefl_compressor** %21, align 8
  %22 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %23 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %22, i32 0, i32 32
  %24 = load i8*, i8** %23, align 8
  store i8* %24, i8** %pSrc, align 8
  %25 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %26 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %25, i32 0, i32 33
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %src_buf_left, align 8
  %28 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %29 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %28, i32 0, i32 31
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %flush, align 4
  br label %31

; <label>:31                                      ; preds = %1325, %0
  %32 = load i64, i64* %src_buf_left, align 8
  %33 = icmp ne i64 %32, 0
  br i1 %33, label %44, label %34

; <label>:34                                      ; preds = %31
  %35 = load i32, i32* %flush, align 4
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %42

; <label>:37                                      ; preds = %34
  %38 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %39 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %38, i32 0, i32 7
  %40 = load i32, i32* %39, align 8
  %41 = icmp ne i32 %40, 0
  br label %42

; <label>:42                                      ; preds = %37, %34
  %43 = phi i1 [ false, %34 ], [ %41, %37 ]
  br label %44

; <label>:44                                      ; preds = %42, %31
  %45 = phi i1 [ true, %31 ], [ %43, %42 ]
  br i1 %45, label %46, label %1326

; <label>:46                                      ; preds = %44
  %47 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %48 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %47, i32 0, i32 7
  %49 = load i32, i32* %48, align 8
  %50 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %51 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %50, i32 0, i32 8
  %52 = load i32, i32* %51, align 4
  %53 = add i32 %49, %52
  %54 = icmp uge i32 %53, 2
  br i1 %54, label %55, label %178

; <label>:55                                      ; preds = %46
  %56 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %57 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %56, i32 0, i32 6
  %58 = load i32, i32* %57, align 4
  %59 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %60 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %59, i32 0, i32 7
  %61 = load i32, i32* %60, align 8
  %62 = add i32 %58, %61
  %63 = and i32 %62, 32767
  store i32 %63, i32* %dst_pos, align 4
  %64 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %65 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %64, i32 0, i32 6
  %66 = load i32, i32* %65, align 4
  %67 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %68 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %67, i32 0, i32 7
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %66, %69
  %71 = sub i32 %70, 2
  store i32 %71, i32* %ins_pos, align 4
  %72 = load i32, i32* %ins_pos, align 4
  %73 = and i32 %72, 32767
  %74 = zext i32 %73 to i64
  %75 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %76 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %75, i32 0, i32 35
  %77 = getelementptr inbounds [33025 x i8], [33025 x i8]* %76, i64 0, i64 %74
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = shl i32 %79, 5
  %81 = load i32, i32* %ins_pos, align 4
  %82 = add i32 %81, 1
  %83 = and i32 %82, 32767
  %84 = zext i32 %83 to i64
  %85 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %86 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %85, i32 0, i32 35
  %87 = getelementptr inbounds [33025 x i8], [33025 x i8]* %86, i64 0, i64 %84
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = xor i32 %80, %89
  store i32 %90, i32* %hash, align 4
  %91 = load i64, i64* %src_buf_left, align 8
  %92 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %93 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %92, i32 0, i32 7
  %94 = load i32, i32* %93, align 8
  %95 = sub i32 258, %94
  %96 = zext i32 %95 to i64
  %97 = icmp ult i64 %91, %96
  br i1 %97, label %98, label %100

; <label>:98                                      ; preds = %55
  %99 = load i64, i64* %src_buf_left, align 8
  br label %106

; <label>:100                                     ; preds = %55
  %101 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %102 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %101, i32 0, i32 7
  %103 = load i32, i32* %102, align 8
  %104 = sub i32 258, %103
  %105 = zext i32 %104 to i64
  br label %106

; <label>:106                                     ; preds = %100, %98
  %107 = phi i64 [ %99, %98 ], [ %105, %100 ]
  %108 = trunc i64 %107 to i32
  store i32 %108, i32* %num_bytes_to_process, align 4
  %109 = load i8*, i8** %pSrc, align 8
  %110 = load i32, i32* %num_bytes_to_process, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %109, i64 %111
  store i8* %112, i8** %pSrc_end, align 8
  %113 = load i32, i32* %num_bytes_to_process, align 4
  %114 = zext i32 %113 to i64
  %115 = load i64, i64* %src_buf_left, align 8
  %116 = sub i64 %115, %114
  store i64 %116, i64* %src_buf_left, align 8
  %117 = load i32, i32* %num_bytes_to_process, align 4
  %118 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %119 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %118, i32 0, i32 7
  %120 = load i32, i32* %119, align 8
  %121 = add i32 %120, %117
  store i32 %121, i32* %119, align 8
  br label %122

; <label>:122                                     ; preds = %146, %106
  %123 = load i8*, i8** %pSrc, align 8
  %124 = load i8*, i8** %pSrc_end, align 8
  %125 = icmp ne i8* %123, %124
  br i1 %125, label %126, label %177

; <label>:126                                     ; preds = %122
  %127 = load i8*, i8** %pSrc, align 8
  %128 = getelementptr inbounds i8, i8* %127, i32 1
  store i8* %128, i8** %pSrc, align 8
  %129 = load i8, i8* %127, align 1
  store i8 %129, i8* %c, align 1
  %130 = load i8, i8* %c, align 1
  %131 = load i32, i32* %dst_pos, align 4
  %132 = zext i32 %131 to i64
  %133 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %134 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %133, i32 0, i32 35
  %135 = getelementptr inbounds [33025 x i8], [33025 x i8]* %134, i64 0, i64 %132
  store i8 %130, i8* %135, align 1
  %136 = load i32, i32* %dst_pos, align 4
  %137 = icmp ult i32 %136, 257
  br i1 %137, label %138, label %146

; <label>:138                                     ; preds = %126
  %139 = load i8, i8* %c, align 1
  %140 = load i32, i32* %dst_pos, align 4
  %141 = add i32 32768, %140
  %142 = zext i32 %141 to i64
  %143 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %144 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %143, i32 0, i32 35
  %145 = getelementptr inbounds [33025 x i8], [33025 x i8]* %144, i64 0, i64 %142
  store i8 %139, i8* %145, align 1
  br label %146

; <label>:146                                     ; preds = %138, %126
  %147 = load i32, i32* %hash, align 4
  %148 = shl i32 %147, 5
  %149 = load i8, i8* %c, align 1
  %150 = zext i8 %149 to i32
  %151 = xor i32 %148, %150
  %152 = and i32 %151, 32767
  store i32 %152, i32* %hash, align 4
  %153 = load i32, i32* %hash, align 4
  %154 = zext i32 %153 to i64
  %155 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %156 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %155, i32 0, i32 41
  %157 = getelementptr inbounds [32768 x i16], [32768 x i16]* %156, i64 0, i64 %154
  %158 = load i16, i16* %157, align 2
  %159 = load i32, i32* %ins_pos, align 4
  %160 = and i32 %159, 32767
  %161 = zext i32 %160 to i64
  %162 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %163 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %162, i32 0, i32 40
  %164 = getelementptr inbounds [32768 x i16], [32768 x i16]* %163, i64 0, i64 %161
  store i16 %158, i16* %164, align 2
  %165 = load i32, i32* %ins_pos, align 4
  %166 = trunc i32 %165 to i16
  %167 = load i32, i32* %hash, align 4
  %168 = zext i32 %167 to i64
  %169 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %170 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %169, i32 0, i32 41
  %171 = getelementptr inbounds [32768 x i16], [32768 x i16]* %170, i64 0, i64 %168
  store i16 %166, i16* %171, align 2
  %172 = load i32, i32* %dst_pos, align 4
  %173 = add i32 %172, 1
  %174 = and i32 %173, 32767
  store i32 %174, i32* %dst_pos, align 4
  %175 = load i32, i32* %ins_pos, align 4
  %176 = add i32 %175, 1
  store i32 %176, i32* %ins_pos, align 4
  br label %122

; <label>:177                                     ; preds = %122
  br label %284

; <label>:178                                     ; preds = %46
  br label %179

; <label>:179                                     ; preds = %282, %178
  %180 = load i64, i64* %src_buf_left, align 8
  %181 = icmp ne i64 %180, 0
  br i1 %181, label %182, label %187

; <label>:182                                     ; preds = %179
  %183 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %184 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %183, i32 0, i32 7
  %185 = load i32, i32* %184, align 8
  %186 = icmp ult i32 %185, 258
  br label %187

; <label>:187                                     ; preds = %182, %179
  %188 = phi i1 [ false, %179 ], [ %186, %182 ]
  br i1 %188, label %189, label %283

; <label>:189                                     ; preds = %187
  %190 = load i8*, i8** %pSrc, align 8
  %191 = getelementptr inbounds i8, i8* %190, i32 1
  store i8* %191, i8** %pSrc, align 8
  %192 = load i8, i8* %190, align 1
  store i8 %192, i8* %c1, align 1
  %193 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %194 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %193, i32 0, i32 6
  %195 = load i32, i32* %194, align 4
  %196 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %197 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %196, i32 0, i32 7
  %198 = load i32, i32* %197, align 8
  %199 = add i32 %195, %198
  %200 = and i32 %199, 32767
  store i32 %200, i32* %dst_pos2, align 4
  %201 = load i64, i64* %src_buf_left, align 8
  %202 = add i64 %201, -1
  store i64 %202, i64* %src_buf_left, align 8
  %203 = load i8, i8* %c1, align 1
  %204 = load i32, i32* %dst_pos2, align 4
  %205 = zext i32 %204 to i64
  %206 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %207 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %206, i32 0, i32 35
  %208 = getelementptr inbounds [33025 x i8], [33025 x i8]* %207, i64 0, i64 %205
  store i8 %203, i8* %208, align 1
  %209 = load i32, i32* %dst_pos2, align 4
  %210 = icmp ult i32 %209, 257
  br i1 %210, label %211, label %219

; <label>:211                                     ; preds = %189
  %212 = load i8, i8* %c1, align 1
  %213 = load i32, i32* %dst_pos2, align 4
  %214 = add i32 32768, %213
  %215 = zext i32 %214 to i64
  %216 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %217 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %216, i32 0, i32 35
  %218 = getelementptr inbounds [33025 x i8], [33025 x i8]* %217, i64 0, i64 %215
  store i8 %212, i8* %218, align 1
  br label %219

; <label>:219                                     ; preds = %211, %189
  %220 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %221 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %220, i32 0, i32 7
  %222 = load i32, i32* %221, align 8
  %223 = add i32 %222, 1
  store i32 %223, i32* %221, align 8
  %224 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %225 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %224, i32 0, i32 8
  %226 = load i32, i32* %225, align 4
  %227 = add i32 %223, %226
  %228 = icmp uge i32 %227, 3
  br i1 %228, label %229, label %282

; <label>:229                                     ; preds = %219
  %230 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %231 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %230, i32 0, i32 6
  %232 = load i32, i32* %231, align 4
  %233 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %234 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %233, i32 0, i32 7
  %235 = load i32, i32* %234, align 8
  %236 = sub i32 %235, 1
  %237 = add i32 %232, %236
  %238 = sub i32 %237, 2
  store i32 %238, i32* %ins_pos3, align 4
  %239 = load i32, i32* %ins_pos3, align 4
  %240 = and i32 %239, 32767
  %241 = zext i32 %240 to i64
  %242 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %243 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %242, i32 0, i32 35
  %244 = getelementptr inbounds [33025 x i8], [33025 x i8]* %243, i64 0, i64 %241
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i32
  %247 = shl i32 %246, 10
  %248 = load i32, i32* %ins_pos3, align 4
  %249 = add i32 %248, 1
  %250 = and i32 %249, 32767
  %251 = zext i32 %250 to i64
  %252 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %253 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %252, i32 0, i32 35
  %254 = getelementptr inbounds [33025 x i8], [33025 x i8]* %253, i64 0, i64 %251
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i32
  %257 = shl i32 %256, 5
  %258 = xor i32 %247, %257
  %259 = load i8, i8* %c1, align 1
  %260 = zext i8 %259 to i32
  %261 = xor i32 %258, %260
  %262 = and i32 %261, 32767
  store i32 %262, i32* %hash4, align 4
  %263 = load i32, i32* %hash4, align 4
  %264 = zext i32 %263 to i64
  %265 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %266 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %265, i32 0, i32 41
  %267 = getelementptr inbounds [32768 x i16], [32768 x i16]* %266, i64 0, i64 %264
  %268 = load i16, i16* %267, align 2
  %269 = load i32, i32* %ins_pos3, align 4
  %270 = and i32 %269, 32767
  %271 = zext i32 %270 to i64
  %272 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %273 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %272, i32 0, i32 40
  %274 = getelementptr inbounds [32768 x i16], [32768 x i16]* %273, i64 0, i64 %271
  store i16 %268, i16* %274, align 2
  %275 = load i32, i32* %ins_pos3, align 4
  %276 = trunc i32 %275 to i16
  %277 = load i32, i32* %hash4, align 4
  %278 = zext i32 %277 to i64
  %279 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %280 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %279, i32 0, i32 41
  %281 = getelementptr inbounds [32768 x i16], [32768 x i16]* %280, i64 0, i64 %278
  store i16 %276, i16* %281, align 2
  br label %282

; <label>:282                                     ; preds = %229, %219
  br label %179

; <label>:283                                     ; preds = %187
  br label %284

; <label>:284                                     ; preds = %283, %177
  %285 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %286 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %285, i32 0, i32 7
  %287 = load i32, i32* %286, align 8
  %288 = sub i32 32768, %287
  %289 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %290 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %289, i32 0, i32 8
  %291 = load i32, i32* %290, align 4
  %292 = icmp ult i32 %288, %291
  br i1 %292, label %293, label %298

; <label>:293                                     ; preds = %284
  %294 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %295 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %294, i32 0, i32 7
  %296 = load i32, i32* %295, align 8
  %297 = sub i32 32768, %296
  br label %302

; <label>:298                                     ; preds = %284
  %299 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %300 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %299, i32 0, i32 8
  %301 = load i32, i32* %300, align 4
  br label %302

; <label>:302                                     ; preds = %298, %293
  %303 = phi i32 [ %297, %293 ], [ %301, %298 ]
  %304 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %305 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %304, i32 0, i32 8
  store i32 %303, i32* %305, align 4
  %306 = load i32, i32* %flush, align 4
  %307 = icmp ne i32 %306, 0
  br i1 %307, label %314, label %308

; <label>:308                                     ; preds = %302
  %309 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %310 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %309, i32 0, i32 7
  %311 = load i32, i32* %310, align 8
  %312 = icmp ult i32 %311, 258
  br i1 %312, label %313, label %314

; <label>:313                                     ; preds = %308
  br label %1326

; <label>:314                                     ; preds = %308, %302
  store i32 1, i32* %len_to_move, align 4
  store i32 0, i32* %cur_match_dist, align 4
  %315 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %316 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %315, i32 0, i32 19
  %317 = load i32, i32* %316, align 8
  %318 = icmp ne i32 %317, 0
  br i1 %318, label %319, label %323

; <label>:319                                     ; preds = %314
  %320 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %321 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %320, i32 0, i32 19
  %322 = load i32, i32* %321, align 8
  br label %324

; <label>:323                                     ; preds = %314
  br label %324

; <label>:324                                     ; preds = %323, %319
  %325 = phi i32 [ %322, %319 ], [ 2, %323 ]
  store i32 %325, i32* %cur_match_len, align 4
  %326 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %327 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %326, i32 0, i32 6
  %328 = load i32, i32* %327, align 4
  %329 = and i32 %328, 32767
  store i32 %329, i32* %cur_pos, align 4
  %330 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %331 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %330, i32 0, i32 2
  %332 = load i32, i32* %331, align 8
  %333 = and i32 %332, 589824
  %334 = icmp ne i32 %333, 0
  br i1 %334, label %335, label %385

; <label>:335                                     ; preds = %324
  %336 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %337 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %336, i32 0, i32 8
  %338 = load i32, i32* %337, align 4
  %339 = icmp ne i32 %338, 0
  br i1 %339, label %340, label %384

; <label>:340                                     ; preds = %335
  %341 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %342 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %341, i32 0, i32 2
  %343 = load i32, i32* %342, align 8
  %344 = and i32 %343, 524288
  %345 = icmp ne i32 %344, 0
  br i1 %345, label %384, label %346

; <label>:346                                     ; preds = %340
  %347 = load i32, i32* %cur_pos, align 4
  %348 = sub i32 %347, 1
  %349 = and i32 %348, 32767
  %350 = zext i32 %349 to i64
  %351 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %352 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %351, i32 0, i32 35
  %353 = getelementptr inbounds [33025 x i8], [33025 x i8]* %352, i64 0, i64 %350
  %354 = load i8, i8* %353, align 1
  store i8 %354, i8* %c5, align 1
  store i32 0, i32* %cur_match_len, align 4
  br label %355

; <label>:355                                     ; preds = %375, %346
  %356 = load i32, i32* %cur_match_len, align 4
  %357 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %358 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %357, i32 0, i32 7
  %359 = load i32, i32* %358, align 8
  %360 = icmp ult i32 %356, %359
  br i1 %360, label %361, label %378

; <label>:361                                     ; preds = %355
  %362 = load i32, i32* %cur_pos, align 4
  %363 = load i32, i32* %cur_match_len, align 4
  %364 = add i32 %362, %363
  %365 = zext i32 %364 to i64
  %366 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %367 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %366, i32 0, i32 35
  %368 = getelementptr inbounds [33025 x i8], [33025 x i8]* %367, i64 0, i64 %365
  %369 = load i8, i8* %368, align 1
  %370 = zext i8 %369 to i32
  %371 = load i8, i8* %c5, align 1
  %372 = zext i8 %371 to i32
  %373 = icmp ne i32 %370, %372
  br i1 %373, label %374, label %375

; <label>:374                                     ; preds = %361
  br label %378

; <label>:375                                     ; preds = %361
  %376 = load i32, i32* %cur_match_len, align 4
  %377 = add i32 %376, 1
  store i32 %377, i32* %cur_match_len, align 4
  br label %355

; <label>:378                                     ; preds = %374, %355
  %379 = load i32, i32* %cur_match_len, align 4
  %380 = icmp ult i32 %379, 3
  br i1 %380, label %381, label %382

; <label>:381                                     ; preds = %378
  store i32 0, i32* %cur_match_len, align 4
  br label %383

; <label>:382                                     ; preds = %378
  store i32 1, i32* %cur_match_dist, align 4
  br label %383

; <label>:383                                     ; preds = %382, %381
  br label %384

; <label>:384                                     ; preds = %383, %340, %335
  br label %686

; <label>:385                                     ; preds = %324
  %386 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %387 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %388 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %387, i32 0, i32 6
  %389 = load i32, i32* %388, align 4
  %390 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %391 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %390, i32 0, i32 8
  %392 = load i32, i32* %391, align 4
  %393 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %394 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %393, i32 0, i32 7
  %395 = load i32, i32* %394, align 8
  store %struct.tdefl_compressor* %386, %struct.tdefl_compressor** %14, align 8
  store i32 %389, i32* %15, align 4
  store i32 %392, i32* %16, align 4
  store i32 %395, i32* %17, align 4
  store i32* %cur_match_dist, i32** %18, align 8
  store i32* %cur_match_len, i32** %19, align 8
  %396 = load i32, i32* %15, align 4
  %397 = and i32 %396, 32767
  store i32 %397, i32* %pos.i, align 4
  %398 = load i32*, i32** %19, align 8
  %399 = load i32, i32* %398, align 4
  store i32 %399, i32* %match_len.i, align 4
  %400 = load i32, i32* %pos.i, align 4
  store i32 %400, i32* %probe_pos.i, align 4
  %401 = load i32, i32* %match_len.i, align 4
  %402 = icmp uge i32 %401, 32
  %403 = zext i1 %402 to i32
  %404 = sext i32 %403 to i64
  %405 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %14, align 8
  %406 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %405, i32 0, i32 3
  %407 = getelementptr inbounds [2 x i32], [2 x i32]* %406, i64 0, i64 %404
  %408 = load i32, i32* %407, align 4
  store i32 %408, i32* %num_probes_left.i, align 4
  %409 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %14, align 8
  %410 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %409, i32 0, i32 35
  %411 = getelementptr inbounds [33025 x i8], [33025 x i8]* %410, i32 0, i32 0
  %412 = load i32, i32* %pos.i, align 4
  %413 = zext i32 %412 to i64
  %414 = getelementptr inbounds i8, i8* %411, i64 %413
  %415 = bitcast i8* %414 to i16*
  store i16* %415, i16** %s.i, align 8
  %416 = load i32, i32* %pos.i, align 4
  %417 = load i32, i32* %match_len.i, align 4
  %418 = add i32 %416, %417
  %419 = sub i32 %418, 1
  %420 = zext i32 %419 to i64
  %421 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %14, align 8
  %422 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %421, i32 0, i32 35
  %423 = getelementptr inbounds [33025 x i8], [33025 x i8]* %422, i64 0, i64 %420
  %424 = bitcast i8* %423 to i16*
  %425 = load i16, i16* %424, align 1
  store i16 %425, i16* %c01.i, align 2
  %426 = load i16*, i16** %s.i, align 8
  %427 = load i16, i16* %426, align 2
  store i16 %427, i16* %s01.i, align 2
  %428 = load i32, i32* %17, align 4
  %429 = icmp ule i32 %428, 258
  br i1 %429, label %430, label %434

; <label>:430                                     ; preds = %385
  %431 = load i32, i32* %17, align 4
  %432 = load i32, i32* %match_len.i, align 4
  %433 = icmp ule i32 %431, %432
  br i1 %433, label %435, label %436

; <label>:434                                     ; preds = %385
  call void @__assert_fail(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2271, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__.tdefl_find_match, i32 0, i32 0)) #7
  unreachable

; <label>:435                                     ; preds = %430
  br label %tdefl_find_match.exit

; <label>:436                                     ; preds = %430
  br label %437

; <label>:437                                     ; preds = %685, %573, %436
  br label %438

; <label>:438                                     ; preds = %554, %437
  %439 = load i32, i32* %num_probes_left.i, align 4
  %440 = add i32 %439, -1
  store i32 %440, i32* %num_probes_left.i, align 4
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %443

; <label>:442                                     ; preds = %438
  br label %tdefl_find_match.exit

; <label>:443                                     ; preds = %438
  %444 = load i32, i32* %probe_pos.i, align 4
  %445 = zext i32 %444 to i64
  %446 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %14, align 8
  %447 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %446, i32 0, i32 40
  %448 = getelementptr inbounds [32768 x i16], [32768 x i16]* %447, i64 0, i64 %445
  %449 = load i16, i16* %448, align 2
  %450 = zext i16 %449 to i32
  store i32 %450, i32* %next_probe_pos.i, align 4
  %451 = load i32, i32* %next_probe_pos.i, align 4
  %452 = icmp ne i32 %451, 0
  br i1 %452, label %453, label %461

; <label>:453                                     ; preds = %443
  %454 = load i32, i32* %15, align 4
  %455 = load i32, i32* %next_probe_pos.i, align 4
  %456 = sub i32 %454, %455
  %457 = trunc i32 %456 to i16
  %458 = zext i16 %457 to i32
  store i32 %458, i32* %dist.i, align 4
  %459 = load i32, i32* %16, align 4
  %460 = icmp ugt i32 %458, %459
  br i1 %460, label %461, label %462

; <label>:461                                     ; preds = %453, %443
  br label %tdefl_find_match.exit

; <label>:462                                     ; preds = %453
  %463 = load i32, i32* %next_probe_pos.i, align 4
  %464 = and i32 %463, 32767
  store i32 %464, i32* %probe_pos.i, align 4
  %465 = load i32, i32* %probe_pos.i, align 4
  %466 = load i32, i32* %match_len.i, align 4
  %467 = add i32 %465, %466
  %468 = sub i32 %467, 1
  %469 = zext i32 %468 to i64
  %470 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %14, align 8
  %471 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %470, i32 0, i32 35
  %472 = getelementptr inbounds [33025 x i8], [33025 x i8]* %471, i64 0, i64 %469
  %473 = bitcast i8* %472 to i16*
  %474 = load i16, i16* %473, align 1
  %475 = zext i16 %474 to i32
  %476 = load i16, i16* %c01.i, align 2
  %477 = zext i16 %476 to i32
  %478 = icmp eq i32 %475, %477
  br i1 %478, label %479, label %480

; <label>:479                                     ; preds = %462
  br label %555

; <label>:480                                     ; preds = %462
  %481 = load i32, i32* %probe_pos.i, align 4
  %482 = zext i32 %481 to i64
  %483 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %14, align 8
  %484 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %483, i32 0, i32 40
  %485 = getelementptr inbounds [32768 x i16], [32768 x i16]* %484, i64 0, i64 %482
  %486 = load i16, i16* %485, align 2
  %487 = zext i16 %486 to i32
  store i32 %487, i32* %next_probe_pos.i, align 4
  %488 = load i32, i32* %next_probe_pos.i, align 4
  %489 = icmp ne i32 %488, 0
  br i1 %489, label %490, label %498

; <label>:490                                     ; preds = %480
  %491 = load i32, i32* %15, align 4
  %492 = load i32, i32* %next_probe_pos.i, align 4
  %493 = sub i32 %491, %492
  %494 = trunc i32 %493 to i16
  %495 = zext i16 %494 to i32
  store i32 %495, i32* %dist.i, align 4
  %496 = load i32, i32* %16, align 4
  %497 = icmp ugt i32 %495, %496
  br i1 %497, label %498, label %499

; <label>:498                                     ; preds = %490, %480
  br label %tdefl_find_match.exit

; <label>:499                                     ; preds = %490
  %500 = load i32, i32* %next_probe_pos.i, align 4
  %501 = and i32 %500, 32767
  store i32 %501, i32* %probe_pos.i, align 4
  %502 = load i32, i32* %probe_pos.i, align 4
  %503 = load i32, i32* %match_len.i, align 4
  %504 = add i32 %502, %503
  %505 = sub i32 %504, 1
  %506 = zext i32 %505 to i64
  %507 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %14, align 8
  %508 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %507, i32 0, i32 35
  %509 = getelementptr inbounds [33025 x i8], [33025 x i8]* %508, i64 0, i64 %506
  %510 = bitcast i8* %509 to i16*
  %511 = load i16, i16* %510, align 1
  %512 = zext i16 %511 to i32
  %513 = load i16, i16* %c01.i, align 2
  %514 = zext i16 %513 to i32
  %515 = icmp eq i32 %512, %514
  br i1 %515, label %516, label %517

; <label>:516                                     ; preds = %499
  br label %555

; <label>:517                                     ; preds = %499
  %518 = load i32, i32* %probe_pos.i, align 4
  %519 = zext i32 %518 to i64
  %520 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %14, align 8
  %521 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %520, i32 0, i32 40
  %522 = getelementptr inbounds [32768 x i16], [32768 x i16]* %521, i64 0, i64 %519
  %523 = load i16, i16* %522, align 2
  %524 = zext i16 %523 to i32
  store i32 %524, i32* %next_probe_pos.i, align 4
  %525 = load i32, i32* %next_probe_pos.i, align 4
  %526 = icmp ne i32 %525, 0
  br i1 %526, label %527, label %535

; <label>:527                                     ; preds = %517
  %528 = load i32, i32* %15, align 4
  %529 = load i32, i32* %next_probe_pos.i, align 4
  %530 = sub i32 %528, %529
  %531 = trunc i32 %530 to i16
  %532 = zext i16 %531 to i32
  store i32 %532, i32* %dist.i, align 4
  %533 = load i32, i32* %16, align 4
  %534 = icmp ugt i32 %532, %533
  br i1 %534, label %535, label %536

; <label>:535                                     ; preds = %527, %517
  br label %tdefl_find_match.exit

; <label>:536                                     ; preds = %527
  %537 = load i32, i32* %next_probe_pos.i, align 4
  %538 = and i32 %537, 32767
  store i32 %538, i32* %probe_pos.i, align 4
  %539 = load i32, i32* %probe_pos.i, align 4
  %540 = load i32, i32* %match_len.i, align 4
  %541 = add i32 %539, %540
  %542 = sub i32 %541, 1
  %543 = zext i32 %542 to i64
  %544 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %14, align 8
  %545 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %544, i32 0, i32 35
  %546 = getelementptr inbounds [33025 x i8], [33025 x i8]* %545, i64 0, i64 %543
  %547 = bitcast i8* %546 to i16*
  %548 = load i16, i16* %547, align 1
  %549 = zext i16 %548 to i32
  %550 = load i16, i16* %c01.i, align 2
  %551 = zext i16 %550 to i32
  %552 = icmp eq i32 %549, %551
  br i1 %552, label %553, label %554

; <label>:553                                     ; preds = %536
  br label %555

; <label>:554                                     ; preds = %536
  br label %438

; <label>:555                                     ; preds = %553, %516, %479
  %556 = load i32, i32* %dist.i, align 4
  %557 = icmp ne i32 %556, 0
  br i1 %557, label %559, label %558

; <label>:558                                     ; preds = %555
  br label %tdefl_find_match.exit

; <label>:559                                     ; preds = %555
  %560 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %14, align 8
  %561 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %560, i32 0, i32 35
  %562 = getelementptr inbounds [33025 x i8], [33025 x i8]* %561, i32 0, i32 0
  %563 = load i32, i32* %probe_pos.i, align 4
  %564 = zext i32 %563 to i64
  %565 = getelementptr inbounds i8, i8* %562, i64 %564
  %566 = bitcast i8* %565 to i16*
  store i16* %566, i16** %q.i, align 8
  %567 = load i16*, i16** %q.i, align 8
  %568 = load i16, i16* %567, align 2
  %569 = zext i16 %568 to i32
  %570 = load i16, i16* %s01.i, align 2
  %571 = zext i16 %570 to i32
  %572 = icmp ne i32 %569, %571
  br i1 %572, label %573, label %574

; <label>:573                                     ; preds = %559
  br label %437

; <label>:574                                     ; preds = %559
  %575 = load i16*, i16** %s.i, align 8
  store i16* %575, i16** %p.i, align 8
  store i32 32, i32* %probe_len.i, align 4
  br label %576

; <label>:576                                     ; preds = %620, %574
  %577 = load i16*, i16** %p.i, align 8
  %578 = getelementptr inbounds i16, i16* %577, i32 1
  store i16* %578, i16** %p.i, align 8
  %579 = load i16, i16* %578, align 2
  %580 = zext i16 %579 to i32
  %581 = load i16*, i16** %q.i, align 8
  %582 = getelementptr inbounds i16, i16* %581, i32 1
  store i16* %582, i16** %q.i, align 8
  %583 = load i16, i16* %582, align 2
  %584 = zext i16 %583 to i32
  %585 = icmp eq i32 %580, %584
  br i1 %585, label %586, label %620

; <label>:586                                     ; preds = %576
  %587 = load i16*, i16** %p.i, align 8
  %588 = getelementptr inbounds i16, i16* %587, i32 1
  store i16* %588, i16** %p.i, align 8
  %589 = load i16, i16* %588, align 2
  %590 = zext i16 %589 to i32
  %591 = load i16*, i16** %q.i, align 8
  %592 = getelementptr inbounds i16, i16* %591, i32 1
  store i16* %592, i16** %q.i, align 8
  %593 = load i16, i16* %592, align 2
  %594 = zext i16 %593 to i32
  %595 = icmp eq i32 %590, %594
  br i1 %595, label %596, label %620

; <label>:596                                     ; preds = %586
  %597 = load i16*, i16** %p.i, align 8
  %598 = getelementptr inbounds i16, i16* %597, i32 1
  store i16* %598, i16** %p.i, align 8
  %599 = load i16, i16* %598, align 2
  %600 = zext i16 %599 to i32
  %601 = load i16*, i16** %q.i, align 8
  %602 = getelementptr inbounds i16, i16* %601, i32 1
  store i16* %602, i16** %q.i, align 8
  %603 = load i16, i16* %602, align 2
  %604 = zext i16 %603 to i32
  %605 = icmp eq i32 %600, %604
  br i1 %605, label %606, label %620

; <label>:606                                     ; preds = %596
  %607 = load i16*, i16** %p.i, align 8
  %608 = getelementptr inbounds i16, i16* %607, i32 1
  store i16* %608, i16** %p.i, align 8
  %609 = load i16, i16* %608, align 2
  %610 = zext i16 %609 to i32
  %611 = load i16*, i16** %q.i, align 8
  %612 = getelementptr inbounds i16, i16* %611, i32 1
  store i16* %612, i16** %q.i, align 8
  %613 = load i16, i16* %612, align 2
  %614 = zext i16 %613 to i32
  %615 = icmp eq i32 %610, %614
  br i1 %615, label %616, label %620

; <label>:616                                     ; preds = %606
  %617 = load i32, i32* %probe_len.i, align 4
  %618 = add i32 %617, -1
  store i32 %618, i32* %probe_len.i, align 4
  %619 = icmp ugt i32 %618, 0
  br label %620

; <label>:620                                     ; preds = %616, %606, %596, %586, %576
  %621 = phi i1 [ false, %606 ], [ false, %596 ], [ false, %586 ], [ false, %576 ], [ %619, %616 ]
  br i1 %621, label %576, label %622

; <label>:622                                     ; preds = %620
  %623 = load i32, i32* %probe_len.i, align 4
  %624 = icmp ne i32 %623, 0
  br i1 %624, label %636, label %625

; <label>:625                                     ; preds = %622
  %626 = load i32, i32* %dist.i, align 4
  %627 = load i32*, i32** %18, align 8
  store i32 %626, i32* %627, align 4
  %628 = load i32, i32* %17, align 4
  %629 = icmp ult i32 %628, 258
  br i1 %629, label %630, label %632

; <label>:630                                     ; preds = %625
  %631 = load i32, i32* %17, align 4
  br label %633

; <label>:632                                     ; preds = %625
  br label %633

; <label>:633                                     ; preds = %632, %630
  %634 = phi i32 [ %631, %630 ], [ 258, %632 ]
  %635 = load i32*, i32** %19, align 8
  store i32 %634, i32* %635, align 4
  br label %tdefl_find_match.exit

; <label>:636                                     ; preds = %622
  %637 = load i16*, i16** %p.i, align 8
  %638 = load i16*, i16** %s.i, align 8
  %639 = ptrtoint i16* %637 to i64
  %640 = ptrtoint i16* %638 to i64
  %641 = sub i64 %639, %640
  %642 = sdiv exact i64 %641, 2
  %643 = trunc i64 %642 to i32
  %644 = mul i32 %643, 2
  %645 = load i16*, i16** %p.i, align 8
  %646 = bitcast i16* %645 to i8*
  %647 = load i8, i8* %646, align 1
  %648 = zext i8 %647 to i32
  %649 = load i16*, i16** %q.i, align 8
  %650 = bitcast i16* %649 to i8*
  %651 = load i8, i8* %650, align 1
  %652 = zext i8 %651 to i32
  %653 = icmp eq i32 %648, %652
  %654 = zext i1 %653 to i32
  %655 = add i32 %644, %654
  store i32 %655, i32* %probe_len.i, align 4
  %656 = load i32, i32* %match_len.i, align 4
  %657 = icmp ugt i32 %655, %656
  br i1 %657, label %658, label %685

; <label>:658                                     ; preds = %636
  %659 = load i32, i32* %dist.i, align 4
  %660 = load i32*, i32** %18, align 8
  store i32 %659, i32* %660, align 4
  %661 = load i32, i32* %17, align 4
  %662 = load i32, i32* %probe_len.i, align 4
  %663 = icmp ult i32 %661, %662
  br i1 %663, label %664, label %666

; <label>:664                                     ; preds = %658
  %665 = load i32, i32* %17, align 4
  br label %668

; <label>:666                                     ; preds = %658
  %667 = load i32, i32* %probe_len.i, align 4
  br label %668

; <label>:668                                     ; preds = %666, %664
  %669 = phi i32 [ %665, %664 ], [ %667, %666 ]
  store i32 %669, i32* %match_len.i, align 4
  %670 = load i32*, i32** %19, align 8
  store i32 %669, i32* %670, align 4
  %671 = load i32, i32* %17, align 4
  %672 = icmp eq i32 %669, %671
  br i1 %672, label %673, label %674

; <label>:673                                     ; preds = %668
  br label %tdefl_find_match.exit

; <label>:674                                     ; preds = %668
  %675 = load i32, i32* %pos.i, align 4
  %676 = load i32, i32* %match_len.i, align 4
  %677 = add i32 %675, %676
  %678 = sub i32 %677, 1
  %679 = zext i32 %678 to i64
  %680 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %14, align 8
  %681 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %680, i32 0, i32 35
  %682 = getelementptr inbounds [33025 x i8], [33025 x i8]* %681, i64 0, i64 %679
  %683 = bitcast i8* %682 to i16*
  %684 = load i16, i16* %683, align 1
  store i16 %684, i16* %c01.i, align 2
  br label %685

; <label>:685                                     ; preds = %674, %636
  br label %437

tdefl_find_match.exit:                            ; preds = %435, %442, %461, %498, %535, %558, %633, %673
  br label %686

; <label>:686                                     ; preds = %tdefl_find_match.exit, %384
  %687 = load i32, i32* %cur_match_len, align 4
  %688 = icmp eq i32 %687, 3
  br i1 %688, label %689, label %692

; <label>:689                                     ; preds = %686
  %690 = load i32, i32* %cur_match_dist, align 4
  %691 = icmp uge i32 %690, 8192
  br i1 %691, label %705, label %692

; <label>:692                                     ; preds = %689, %686
  %693 = load i32, i32* %cur_pos, align 4
  %694 = load i32, i32* %cur_match_dist, align 4
  %695 = icmp eq i32 %693, %694
  br i1 %695, label %705, label %696

; <label>:696                                     ; preds = %692
  %697 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %698 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %697, i32 0, i32 2
  %699 = load i32, i32* %698, align 8
  %700 = and i32 %699, 131072
  %701 = icmp ne i32 %700, 0
  br i1 %701, label %702, label %706

; <label>:702                                     ; preds = %696
  %703 = load i32, i32* %cur_match_len, align 4
  %704 = icmp ule i32 %703, 5
  br i1 %704, label %705, label %706

; <label>:705                                     ; preds = %702, %692, %689
  store i32 0, i32* %cur_match_len, align 4
  store i32 0, i32* %cur_match_dist, align 4
  br label %706

; <label>:706                                     ; preds = %705, %702, %696
  %707 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %708 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %707, i32 0, i32 19
  %709 = load i32, i32* %708, align 8
  %710 = icmp ne i32 %709, 0
  br i1 %710, label %711, label %1025

; <label>:711                                     ; preds = %706
  %712 = load i32, i32* %cur_match_len, align 4
  %713 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %714 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %713, i32 0, i32 19
  %715 = load i32, i32* %714, align 8
  %716 = icmp ugt i32 %712, %715
  br i1 %716, label %717, label %900

; <label>:717                                     ; preds = %711
  %718 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %719 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %720 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %719, i32 0, i32 20
  %721 = load i32, i32* %720, align 4
  %722 = trunc i32 %721 to i8
  store %struct.tdefl_compressor* %718, %struct.tdefl_compressor** %12, align 8
  store i8 %722, i8* %13, align 1
  %723 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %724 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %723, i32 0, i32 14
  %725 = load i32, i32* %724, align 4
  %726 = add i32 %725, 1
  store i32 %726, i32* %724, align 4
  %727 = load i8, i8* %13, align 1
  %728 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %729 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %728, i32 0, i32 9
  %730 = load i8*, i8** %729, align 8
  %731 = getelementptr inbounds i8, i8* %730, i32 1
  store i8* %731, i8** %729, align 8
  store i8 %727, i8* %730, align 1
  %732 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %733 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %732, i32 0, i32 10
  %734 = load i8*, i8** %733, align 8
  %735 = load i8, i8* %734, align 1
  %736 = zext i8 %735 to i32
  %737 = ashr i32 %736, 1
  %738 = trunc i32 %737 to i8
  %739 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %740 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %739, i32 0, i32 10
  %741 = load i8*, i8** %740, align 8
  store i8 %738, i8* %741, align 1
  %742 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %743 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %742, i32 0, i32 13
  %744 = load i32, i32* %743, align 8
  %745 = add i32 %744, -1
  store i32 %745, i32* %743, align 8
  %746 = icmp eq i32 %745, 0
  br i1 %746, label %747, label %tdefl_record_literal.exit

; <label>:747                                     ; preds = %717
  %748 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %749 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %748, i32 0, i32 13
  store i32 8, i32* %749, align 8
  %750 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %751 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %750, i32 0, i32 9
  %752 = load i8*, i8** %751, align 8
  %753 = getelementptr inbounds i8, i8* %752, i32 1
  store i8* %753, i8** %751, align 8
  %754 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %755 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %754, i32 0, i32 10
  store i8* %752, i8** %755, align 8
  br label %tdefl_record_literal.exit

tdefl_record_literal.exit:                        ; preds = %717, %747
  %756 = load i8, i8* %13, align 1
  %757 = zext i8 %756 to i64
  %758 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %12, align 8
  %759 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %758, i32 0, i32 36
  %760 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %759, i64 0, i64 0
  %761 = getelementptr inbounds [288 x i16], [288 x i16]* %760, i64 0, i64 %757
  %762 = load i16, i16* %761, align 2
  %763 = add i16 %762, 1
  store i16 %763, i16* %761, align 2
  %764 = load i32, i32* %cur_match_len, align 4
  %765 = icmp uge i32 %764, 128
  br i1 %765, label %766, label %883

; <label>:766                                     ; preds = %tdefl_record_literal.exit
  %767 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %768 = load i32, i32* %cur_match_len, align 4
  %769 = load i32, i32* %cur_match_dist, align 4
  store %struct.tdefl_compressor* %767, %struct.tdefl_compressor** %9, align 8
  store i32 %768, i32* %10, align 4
  store i32 %769, i32* %11, align 4
  %770 = load i32, i32* %10, align 4
  %771 = icmp uge i32 %770, 3
  br i1 %771, label %772, label %826

; <label>:772                                     ; preds = %766
  %773 = load i32, i32* %11, align 4
  %774 = icmp uge i32 %773, 1
  br i1 %774, label %775, label %826

; <label>:775                                     ; preds = %772
  %776 = load i32, i32* %11, align 4
  %777 = icmp ule i32 %776, 32768
  br i1 %777, label %778, label %826

; <label>:778                                     ; preds = %775
  %779 = load i32, i32* %10, align 4
  %780 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %9, align 8
  %781 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %780, i32 0, i32 14
  %782 = load i32, i32* %781, align 4
  %783 = add i32 %782, %779
  store i32 %783, i32* %781, align 4
  %784 = load i32, i32* %10, align 4
  %785 = sub i32 %784, 3
  %786 = trunc i32 %785 to i8
  %787 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %9, align 8
  %788 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %787, i32 0, i32 9
  %789 = load i8*, i8** %788, align 8
  store i8 %786, i8* %789, align 1
  %790 = load i32, i32* %11, align 4
  %791 = sub i32 %790, 1
  store i32 %791, i32* %11, align 4
  %792 = load i32, i32* %11, align 4
  %793 = and i32 %792, 255
  %794 = trunc i32 %793 to i8
  %795 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %9, align 8
  %796 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %795, i32 0, i32 9
  %797 = load i8*, i8** %796, align 8
  %798 = getelementptr inbounds i8, i8* %797, i64 1
  store i8 %794, i8* %798, align 1
  %799 = load i32, i32* %11, align 4
  %800 = lshr i32 %799, 8
  %801 = trunc i32 %800 to i8
  %802 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %9, align 8
  %803 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %802, i32 0, i32 9
  %804 = load i8*, i8** %803, align 8
  %805 = getelementptr inbounds i8, i8* %804, i64 2
  store i8 %801, i8* %805, align 1
  %806 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %9, align 8
  %807 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %806, i32 0, i32 9
  %808 = load i8*, i8** %807, align 8
  %809 = getelementptr inbounds i8, i8* %808, i64 3
  store i8* %809, i8** %807, align 8
  %810 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %9, align 8
  %811 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %810, i32 0, i32 10
  %812 = load i8*, i8** %811, align 8
  %813 = load i8, i8* %812, align 1
  %814 = zext i8 %813 to i32
  %815 = ashr i32 %814, 1
  %816 = or i32 %815, 128
  %817 = trunc i32 %816 to i8
  %818 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %9, align 8
  %819 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %818, i32 0, i32 10
  %820 = load i8*, i8** %819, align 8
  store i8 %817, i8* %820, align 1
  %821 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %9, align 8
  %822 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %821, i32 0, i32 13
  %823 = load i32, i32* %822, align 8
  %824 = add i32 %823, -1
  store i32 %824, i32* %822, align 8
  %825 = icmp eq i32 %824, 0
  br i1 %825, label %827, label %836

; <label>:826                                     ; preds = %775, %772, %766
  call void @__assert_fail(i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2479, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__.tdefl_record_match, i32 0, i32 0)) #7
  unreachable

; <label>:827                                     ; preds = %778
  %828 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %9, align 8
  %829 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %828, i32 0, i32 13
  store i32 8, i32* %829, align 8
  %830 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %9, align 8
  %831 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %830, i32 0, i32 9
  %832 = load i8*, i8** %831, align 8
  %833 = getelementptr inbounds i8, i8* %832, i32 1
  store i8* %833, i8** %831, align 8
  %834 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %9, align 8
  %835 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %834, i32 0, i32 10
  store i8* %832, i8** %835, align 8
  br label %836

; <label>:836                                     ; preds = %827, %778
  %837 = load i32, i32* %11, align 4
  %838 = and i32 %837, 511
  %839 = zext i32 %838 to i64
  %840 = getelementptr inbounds [512 x i8], [512 x i8]* @s_tdefl_small_dist_sym, i64 0, i64 %839
  %841 = load i8, i8* %840, align 1
  %842 = zext i8 %841 to i32
  store i32 %842, i32* %s0.i, align 4
  %843 = load i32, i32* %11, align 4
  %844 = lshr i32 %843, 8
  %845 = and i32 %844, 127
  %846 = zext i32 %845 to i64
  %847 = getelementptr inbounds [128 x i8], [128 x i8]* @s_tdefl_large_dist_sym, i64 0, i64 %846
  %848 = load i8, i8* %847, align 1
  %849 = zext i8 %848 to i32
  store i32 %849, i32* %s1.i, align 4
  %850 = load i32, i32* %11, align 4
  %851 = icmp ult i32 %850, 512
  br i1 %851, label %852, label %854

; <label>:852                                     ; preds = %836
  %853 = load i32, i32* %s0.i, align 4
  br label %856

; <label>:854                                     ; preds = %836
  %855 = load i32, i32* %s1.i, align 4
  br label %856

; <label>:856                                     ; preds = %854, %852
  %857 = phi i32 [ %853, %852 ], [ %855, %854 ]
  %858 = zext i32 %857 to i64
  %859 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %9, align 8
  %860 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %859, i32 0, i32 36
  %861 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %860, i64 0, i64 1
  %862 = getelementptr inbounds [288 x i16], [288 x i16]* %861, i64 0, i64 %858
  %863 = load i16, i16* %862, align 2
  %864 = add i16 %863, 1
  store i16 %864, i16* %862, align 2
  %865 = load i32, i32* %10, align 4
  %866 = icmp uge i32 %865, 3
  br i1 %866, label %867, label %tdefl_record_match.exit

; <label>:867                                     ; preds = %856
  %868 = load i32, i32* %10, align 4
  %869 = sub i32 %868, 3
  %870 = zext i32 %869 to i64
  %871 = getelementptr inbounds [256 x i16], [256 x i16]* @s_tdefl_len_sym, i64 0, i64 %870
  %872 = load i16, i16* %871, align 2
  %873 = zext i16 %872 to i64
  %874 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %9, align 8
  %875 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %874, i32 0, i32 36
  %876 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %875, i64 0, i64 0
  %877 = getelementptr inbounds [288 x i16], [288 x i16]* %876, i64 0, i64 %873
  %878 = load i16, i16* %877, align 2
  %879 = add i16 %878, 1
  store i16 %879, i16* %877, align 2
  br label %tdefl_record_match.exit

tdefl_record_match.exit:                          ; preds = %856, %867
  %880 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %881 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %880, i32 0, i32 19
  store i32 0, i32* %881, align 8
  %882 = load i32, i32* %cur_match_len, align 4
  store i32 %882, i32* %len_to_move, align 4
  br label %899

; <label>:883                                     ; preds = %tdefl_record_literal.exit
  %884 = load i32, i32* %cur_pos, align 4
  %885 = zext i32 %884 to i64
  %886 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %887 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %886, i32 0, i32 35
  %888 = getelementptr inbounds [33025 x i8], [33025 x i8]* %887, i64 0, i64 %885
  %889 = load i8, i8* %888, align 1
  %890 = zext i8 %889 to i32
  %891 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %892 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %891, i32 0, i32 20
  store i32 %890, i32* %892, align 4
  %893 = load i32, i32* %cur_match_dist, align 4
  %894 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %895 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %894, i32 0, i32 18
  store i32 %893, i32* %895, align 4
  %896 = load i32, i32* %cur_match_len, align 4
  %897 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %898 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %897, i32 0, i32 19
  store i32 %896, i32* %898, align 8
  br label %899

; <label>:899                                     ; preds = %883, %tdefl_record_match.exit
  br label %1024

; <label>:900                                     ; preds = %711
  %901 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %902 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %903 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %902, i32 0, i32 19
  %904 = load i32, i32* %903, align 8
  %905 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %906 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %905, i32 0, i32 18
  %907 = load i32, i32* %906, align 4
  store %struct.tdefl_compressor* %901, %struct.tdefl_compressor** %6, align 8
  store i32 %904, i32* %7, align 4
  store i32 %907, i32* %8, align 4
  %908 = load i32, i32* %7, align 4
  %909 = icmp uge i32 %908, 3
  br i1 %909, label %910, label %964

; <label>:910                                     ; preds = %900
  %911 = load i32, i32* %8, align 4
  %912 = icmp uge i32 %911, 1
  br i1 %912, label %913, label %964

; <label>:913                                     ; preds = %910
  %914 = load i32, i32* %8, align 4
  %915 = icmp ule i32 %914, 32768
  br i1 %915, label %916, label %964

; <label>:916                                     ; preds = %913
  %917 = load i32, i32* %7, align 4
  %918 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %6, align 8
  %919 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %918, i32 0, i32 14
  %920 = load i32, i32* %919, align 4
  %921 = add i32 %920, %917
  store i32 %921, i32* %919, align 4
  %922 = load i32, i32* %7, align 4
  %923 = sub i32 %922, 3
  %924 = trunc i32 %923 to i8
  %925 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %6, align 8
  %926 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %925, i32 0, i32 9
  %927 = load i8*, i8** %926, align 8
  store i8 %924, i8* %927, align 1
  %928 = load i32, i32* %8, align 4
  %929 = sub i32 %928, 1
  store i32 %929, i32* %8, align 4
  %930 = load i32, i32* %8, align 4
  %931 = and i32 %930, 255
  %932 = trunc i32 %931 to i8
  %933 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %6, align 8
  %934 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %933, i32 0, i32 9
  %935 = load i8*, i8** %934, align 8
  %936 = getelementptr inbounds i8, i8* %935, i64 1
  store i8 %932, i8* %936, align 1
  %937 = load i32, i32* %8, align 4
  %938 = lshr i32 %937, 8
  %939 = trunc i32 %938 to i8
  %940 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %6, align 8
  %941 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %940, i32 0, i32 9
  %942 = load i8*, i8** %941, align 8
  %943 = getelementptr inbounds i8, i8* %942, i64 2
  store i8 %939, i8* %943, align 1
  %944 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %6, align 8
  %945 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %944, i32 0, i32 9
  %946 = load i8*, i8** %945, align 8
  %947 = getelementptr inbounds i8, i8* %946, i64 3
  store i8* %947, i8** %945, align 8
  %948 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %6, align 8
  %949 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %948, i32 0, i32 10
  %950 = load i8*, i8** %949, align 8
  %951 = load i8, i8* %950, align 1
  %952 = zext i8 %951 to i32
  %953 = ashr i32 %952, 1
  %954 = or i32 %953, 128
  %955 = trunc i32 %954 to i8
  %956 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %6, align 8
  %957 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %956, i32 0, i32 10
  %958 = load i8*, i8** %957, align 8
  store i8 %955, i8* %958, align 1
  %959 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %6, align 8
  %960 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %959, i32 0, i32 13
  %961 = load i32, i32* %960, align 8
  %962 = add i32 %961, -1
  store i32 %962, i32* %960, align 8
  %963 = icmp eq i32 %962, 0
  br i1 %963, label %965, label %974

; <label>:964                                     ; preds = %913, %910, %900
  call void @__assert_fail(i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2479, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__.tdefl_record_match, i32 0, i32 0)) #7
  unreachable

; <label>:965                                     ; preds = %916
  %966 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %6, align 8
  %967 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %966, i32 0, i32 13
  store i32 8, i32* %967, align 8
  %968 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %6, align 8
  %969 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %968, i32 0, i32 9
  %970 = load i8*, i8** %969, align 8
  %971 = getelementptr inbounds i8, i8* %970, i32 1
  store i8* %971, i8** %969, align 8
  %972 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %6, align 8
  %973 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %972, i32 0, i32 10
  store i8* %970, i8** %973, align 8
  br label %974

; <label>:974                                     ; preds = %965, %916
  %975 = load i32, i32* %8, align 4
  %976 = and i32 %975, 511
  %977 = zext i32 %976 to i64
  %978 = getelementptr inbounds [512 x i8], [512 x i8]* @s_tdefl_small_dist_sym, i64 0, i64 %977
  %979 = load i8, i8* %978, align 1
  %980 = zext i8 %979 to i32
  store i32 %980, i32* %s0.i6, align 4
  %981 = load i32, i32* %8, align 4
  %982 = lshr i32 %981, 8
  %983 = and i32 %982, 127
  %984 = zext i32 %983 to i64
  %985 = getelementptr inbounds [128 x i8], [128 x i8]* @s_tdefl_large_dist_sym, i64 0, i64 %984
  %986 = load i8, i8* %985, align 1
  %987 = zext i8 %986 to i32
  store i32 %987, i32* %s1.i7, align 4
  %988 = load i32, i32* %8, align 4
  %989 = icmp ult i32 %988, 512
  br i1 %989, label %990, label %992

; <label>:990                                     ; preds = %974
  %991 = load i32, i32* %s0.i6, align 4
  br label %994

; <label>:992                                     ; preds = %974
  %993 = load i32, i32* %s1.i7, align 4
  br label %994

; <label>:994                                     ; preds = %992, %990
  %995 = phi i32 [ %991, %990 ], [ %993, %992 ]
  %996 = zext i32 %995 to i64
  %997 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %6, align 8
  %998 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %997, i32 0, i32 36
  %999 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %998, i64 0, i64 1
  %1000 = getelementptr inbounds [288 x i16], [288 x i16]* %999, i64 0, i64 %996
  %1001 = load i16, i16* %1000, align 2
  %1002 = add i16 %1001, 1
  store i16 %1002, i16* %1000, align 2
  %1003 = load i32, i32* %7, align 4
  %1004 = icmp uge i32 %1003, 3
  br i1 %1004, label %1005, label %tdefl_record_match.exit8

; <label>:1005                                    ; preds = %994
  %1006 = load i32, i32* %7, align 4
  %1007 = sub i32 %1006, 3
  %1008 = zext i32 %1007 to i64
  %1009 = getelementptr inbounds [256 x i16], [256 x i16]* @s_tdefl_len_sym, i64 0, i64 %1008
  %1010 = load i16, i16* %1009, align 2
  %1011 = zext i16 %1010 to i64
  %1012 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %6, align 8
  %1013 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1012, i32 0, i32 36
  %1014 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %1013, i64 0, i64 0
  %1015 = getelementptr inbounds [288 x i16], [288 x i16]* %1014, i64 0, i64 %1011
  %1016 = load i16, i16* %1015, align 2
  %1017 = add i16 %1016, 1
  store i16 %1017, i16* %1015, align 2
  br label %tdefl_record_match.exit8

tdefl_record_match.exit8:                         ; preds = %994, %1005
  %1018 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1019 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1018, i32 0, i32 19
  %1020 = load i32, i32* %1019, align 8
  %1021 = sub i32 %1020, 1
  store i32 %1021, i32* %len_to_move, align 4
  %1022 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1023 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1022, i32 0, i32 19
  store i32 0, i32* %1023, align 8
  br label %1024

; <label>:1024                                    ; preds = %tdefl_record_match.exit8, %899
  br label %1238

; <label>:1025                                    ; preds = %706
  %1026 = load i32, i32* %cur_match_dist, align 4
  %1027 = icmp ne i32 %1026, 0
  br i1 %1027, label %1084, label %1028

; <label>:1028                                    ; preds = %1025
  %1029 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1030 = load i32, i32* %cur_pos, align 4
  %1031 = zext i32 %1030 to i64
  %1032 = icmp ult i64 %1031, 33024
  br i1 %1032, label %1033, label %1036

; <label>:1033                                    ; preds = %1028
  %1034 = load i32, i32* %cur_pos, align 4
  %1035 = zext i32 %1034 to i64
  br label %1037

; <label>:1036                                    ; preds = %1028
  br label %1037

; <label>:1037                                    ; preds = %1036, %1033
  %1038 = phi i64 [ %1035, %1033 ], [ 33024, %1036 ]
  %1039 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1040 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1039, i32 0, i32 35
  %1041 = getelementptr inbounds [33025 x i8], [33025 x i8]* %1040, i64 0, i64 %1038
  %1042 = load i8, i8* %1041, align 1
  store %struct.tdefl_compressor* %1029, %struct.tdefl_compressor** %4, align 8
  store i8 %1042, i8* %5, align 1
  %1043 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1044 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1043, i32 0, i32 14
  %1045 = load i32, i32* %1044, align 4
  %1046 = add i32 %1045, 1
  store i32 %1046, i32* %1044, align 4
  %1047 = load i8, i8* %5, align 1
  %1048 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1049 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1048, i32 0, i32 9
  %1050 = load i8*, i8** %1049, align 8
  %1051 = getelementptr inbounds i8, i8* %1050, i32 1
  store i8* %1051, i8** %1049, align 8
  store i8 %1047, i8* %1050, align 1
  %1052 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1053 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1052, i32 0, i32 10
  %1054 = load i8*, i8** %1053, align 8
  %1055 = load i8, i8* %1054, align 1
  %1056 = zext i8 %1055 to i32
  %1057 = ashr i32 %1056, 1
  %1058 = trunc i32 %1057 to i8
  %1059 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1060 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1059, i32 0, i32 10
  %1061 = load i8*, i8** %1060, align 8
  store i8 %1058, i8* %1061, align 1
  %1062 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1063 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1062, i32 0, i32 13
  %1064 = load i32, i32* %1063, align 8
  %1065 = add i32 %1064, -1
  store i32 %1065, i32* %1063, align 8
  %1066 = icmp eq i32 %1065, 0
  br i1 %1066, label %1067, label %tdefl_record_literal.exit9

; <label>:1067                                    ; preds = %1037
  %1068 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1069 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1068, i32 0, i32 13
  store i32 8, i32* %1069, align 8
  %1070 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1071 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1070, i32 0, i32 9
  %1072 = load i8*, i8** %1071, align 8
  %1073 = getelementptr inbounds i8, i8* %1072, i32 1
  store i8* %1073, i8** %1071, align 8
  %1074 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1075 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1074, i32 0, i32 10
  store i8* %1072, i8** %1075, align 8
  br label %tdefl_record_literal.exit9

tdefl_record_literal.exit9:                       ; preds = %1037, %1067
  %1076 = load i8, i8* %5, align 1
  %1077 = zext i8 %1076 to i64
  %1078 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %4, align 8
  %1079 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1078, i32 0, i32 36
  %1080 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %1079, i64 0, i64 0
  %1081 = getelementptr inbounds [288 x i16], [288 x i16]* %1080, i64 0, i64 %1077
  %1082 = load i16, i16* %1081, align 2
  %1083 = add i16 %1082, 1
  store i16 %1083, i16* %1081, align 2
  br label %1237

; <label>:1084                                    ; preds = %1025
  %1085 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1086 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1085, i32 0, i32 4
  %1087 = load i32, i32* %1086, align 4
  %1088 = icmp ne i32 %1087, 0
  br i1 %1088, label %1098, label %1089

; <label>:1089                                    ; preds = %1084
  %1090 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1091 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1090, i32 0, i32 2
  %1092 = load i32, i32* %1091, align 8
  %1093 = and i32 %1092, 65536
  %1094 = icmp ne i32 %1093, 0
  br i1 %1094, label %1098, label %1095

; <label>:1095                                    ; preds = %1089
  %1096 = load i32, i32* %cur_match_len, align 4
  %1097 = icmp uge i32 %1096, 128
  br i1 %1097, label %1098, label %1213

; <label>:1098                                    ; preds = %1095, %1089, %1084
  %1099 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1100 = load i32, i32* %cur_match_len, align 4
  %1101 = load i32, i32* %cur_match_dist, align 4
  store %struct.tdefl_compressor* %1099, %struct.tdefl_compressor** %1, align 8
  store i32 %1100, i32* %2, align 4
  store i32 %1101, i32* %3, align 4
  %1102 = load i32, i32* %2, align 4
  %1103 = icmp uge i32 %1102, 3
  br i1 %1103, label %1104, label %1158

; <label>:1104                                    ; preds = %1098
  %1105 = load i32, i32* %3, align 4
  %1106 = icmp uge i32 %1105, 1
  br i1 %1106, label %1107, label %1158

; <label>:1107                                    ; preds = %1104
  %1108 = load i32, i32* %3, align 4
  %1109 = icmp ule i32 %1108, 32768
  br i1 %1109, label %1110, label %1158

; <label>:1110                                    ; preds = %1107
  %1111 = load i32, i32* %2, align 4
  %1112 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1113 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1112, i32 0, i32 14
  %1114 = load i32, i32* %1113, align 4
  %1115 = add i32 %1114, %1111
  store i32 %1115, i32* %1113, align 4
  %1116 = load i32, i32* %2, align 4
  %1117 = sub i32 %1116, 3
  %1118 = trunc i32 %1117 to i8
  %1119 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1120 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1119, i32 0, i32 9
  %1121 = load i8*, i8** %1120, align 8
  store i8 %1118, i8* %1121, align 1
  %1122 = load i32, i32* %3, align 4
  %1123 = sub i32 %1122, 1
  store i32 %1123, i32* %3, align 4
  %1124 = load i32, i32* %3, align 4
  %1125 = and i32 %1124, 255
  %1126 = trunc i32 %1125 to i8
  %1127 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1128 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1127, i32 0, i32 9
  %1129 = load i8*, i8** %1128, align 8
  %1130 = getelementptr inbounds i8, i8* %1129, i64 1
  store i8 %1126, i8* %1130, align 1
  %1131 = load i32, i32* %3, align 4
  %1132 = lshr i32 %1131, 8
  %1133 = trunc i32 %1132 to i8
  %1134 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1135 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1134, i32 0, i32 9
  %1136 = load i8*, i8** %1135, align 8
  %1137 = getelementptr inbounds i8, i8* %1136, i64 2
  store i8 %1133, i8* %1137, align 1
  %1138 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1139 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1138, i32 0, i32 9
  %1140 = load i8*, i8** %1139, align 8
  %1141 = getelementptr inbounds i8, i8* %1140, i64 3
  store i8* %1141, i8** %1139, align 8
  %1142 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1143 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1142, i32 0, i32 10
  %1144 = load i8*, i8** %1143, align 8
  %1145 = load i8, i8* %1144, align 1
  %1146 = zext i8 %1145 to i32
  %1147 = ashr i32 %1146, 1
  %1148 = or i32 %1147, 128
  %1149 = trunc i32 %1148 to i8
  %1150 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1151 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1150, i32 0, i32 10
  %1152 = load i8*, i8** %1151, align 8
  store i8 %1149, i8* %1152, align 1
  %1153 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1154 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1153, i32 0, i32 13
  %1155 = load i32, i32* %1154, align 8
  %1156 = add i32 %1155, -1
  store i32 %1156, i32* %1154, align 8
  %1157 = icmp eq i32 %1156, 0
  br i1 %1157, label %1159, label %1168

; <label>:1158                                    ; preds = %1107, %1104, %1098
  call void @__assert_fail(i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2479, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__.tdefl_record_match, i32 0, i32 0)) #7
  unreachable

; <label>:1159                                    ; preds = %1110
  %1160 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1161 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1160, i32 0, i32 13
  store i32 8, i32* %1161, align 8
  %1162 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1163 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1162, i32 0, i32 9
  %1164 = load i8*, i8** %1163, align 8
  %1165 = getelementptr inbounds i8, i8* %1164, i32 1
  store i8* %1165, i8** %1163, align 8
  %1166 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1167 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1166, i32 0, i32 10
  store i8* %1164, i8** %1167, align 8
  br label %1168

; <label>:1168                                    ; preds = %1159, %1110
  %1169 = load i32, i32* %3, align 4
  %1170 = and i32 %1169, 511
  %1171 = zext i32 %1170 to i64
  %1172 = getelementptr inbounds [512 x i8], [512 x i8]* @s_tdefl_small_dist_sym, i64 0, i64 %1171
  %1173 = load i8, i8* %1172, align 1
  %1174 = zext i8 %1173 to i32
  store i32 %1174, i32* %s0.i10, align 4
  %1175 = load i32, i32* %3, align 4
  %1176 = lshr i32 %1175, 8
  %1177 = and i32 %1176, 127
  %1178 = zext i32 %1177 to i64
  %1179 = getelementptr inbounds [128 x i8], [128 x i8]* @s_tdefl_large_dist_sym, i64 0, i64 %1178
  %1180 = load i8, i8* %1179, align 1
  %1181 = zext i8 %1180 to i32
  store i32 %1181, i32* %s1.i11, align 4
  %1182 = load i32, i32* %3, align 4
  %1183 = icmp ult i32 %1182, 512
  br i1 %1183, label %1184, label %1186

; <label>:1184                                    ; preds = %1168
  %1185 = load i32, i32* %s0.i10, align 4
  br label %1188

; <label>:1186                                    ; preds = %1168
  %1187 = load i32, i32* %s1.i11, align 4
  br label %1188

; <label>:1188                                    ; preds = %1186, %1184
  %1189 = phi i32 [ %1185, %1184 ], [ %1187, %1186 ]
  %1190 = zext i32 %1189 to i64
  %1191 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1192 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1191, i32 0, i32 36
  %1193 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %1192, i64 0, i64 1
  %1194 = getelementptr inbounds [288 x i16], [288 x i16]* %1193, i64 0, i64 %1190
  %1195 = load i16, i16* %1194, align 2
  %1196 = add i16 %1195, 1
  store i16 %1196, i16* %1194, align 2
  %1197 = load i32, i32* %2, align 4
  %1198 = icmp uge i32 %1197, 3
  br i1 %1198, label %1199, label %tdefl_record_match.exit12

; <label>:1199                                    ; preds = %1188
  %1200 = load i32, i32* %2, align 4
  %1201 = sub i32 %1200, 3
  %1202 = zext i32 %1201 to i64
  %1203 = getelementptr inbounds [256 x i16], [256 x i16]* @s_tdefl_len_sym, i64 0, i64 %1202
  %1204 = load i16, i16* %1203, align 2
  %1205 = zext i16 %1204 to i64
  %1206 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1207 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1206, i32 0, i32 36
  %1208 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %1207, i64 0, i64 0
  %1209 = getelementptr inbounds [288 x i16], [288 x i16]* %1208, i64 0, i64 %1205
  %1210 = load i16, i16* %1209, align 2
  %1211 = add i16 %1210, 1
  store i16 %1211, i16* %1209, align 2
  br label %tdefl_record_match.exit12

tdefl_record_match.exit12:                        ; preds = %1188, %1199
  %1212 = load i32, i32* %cur_match_len, align 4
  store i32 %1212, i32* %len_to_move, align 4
  br label %1236

; <label>:1213                                    ; preds = %1095
  %1214 = load i32, i32* %cur_pos, align 4
  %1215 = zext i32 %1214 to i64
  %1216 = icmp ult i64 %1215, 33024
  br i1 %1216, label %1217, label %1220

; <label>:1217                                    ; preds = %1213
  %1218 = load i32, i32* %cur_pos, align 4
  %1219 = zext i32 %1218 to i64
  br label %1221

; <label>:1220                                    ; preds = %1213
  br label %1221

; <label>:1221                                    ; preds = %1220, %1217
  %1222 = phi i64 [ %1219, %1217 ], [ 33024, %1220 ]
  %1223 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1224 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1223, i32 0, i32 35
  %1225 = getelementptr inbounds [33025 x i8], [33025 x i8]* %1224, i64 0, i64 %1222
  %1226 = load i8, i8* %1225, align 1
  %1227 = zext i8 %1226 to i32
  %1228 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1229 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1228, i32 0, i32 20
  store i32 %1227, i32* %1229, align 4
  %1230 = load i32, i32* %cur_match_dist, align 4
  %1231 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1232 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1231, i32 0, i32 18
  store i32 %1230, i32* %1232, align 4
  %1233 = load i32, i32* %cur_match_len, align 4
  %1234 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1235 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1234, i32 0, i32 19
  store i32 %1233, i32* %1235, align 8
  br label %1236

; <label>:1236                                    ; preds = %1221, %tdefl_record_match.exit12
  br label %1237

; <label>:1237                                    ; preds = %1236, %tdefl_record_literal.exit9
  br label %1238

; <label>:1238                                    ; preds = %1237, %1024
  %1239 = load i32, i32* %len_to_move, align 4
  %1240 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1241 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1240, i32 0, i32 6
  %1242 = load i32, i32* %1241, align 4
  %1243 = add i32 %1242, %1239
  store i32 %1243, i32* %1241, align 4
  %1244 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1245 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1244, i32 0, i32 7
  %1246 = load i32, i32* %1245, align 8
  %1247 = load i32, i32* %len_to_move, align 4
  %1248 = icmp uge i32 %1246, %1247
  br i1 %1248, label %1249, label %1250

; <label>:1249                                    ; preds = %1238
  br label %1252

; <label>:1250                                    ; preds = %1238
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2597, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_normal, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %1252

; <label>:1252                                    ; preds = %1251, %1249
  %1253 = load i32, i32* %len_to_move, align 4
  %1254 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1255 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1254, i32 0, i32 7
  %1256 = load i32, i32* %1255, align 8
  %1257 = sub i32 %1256, %1253
  store i32 %1257, i32* %1255, align 8
  %1258 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1259 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1258, i32 0, i32 8
  %1260 = load i32, i32* %1259, align 4
  %1261 = load i32, i32* %len_to_move, align 4
  %1262 = add i32 %1260, %1261
  %1263 = icmp ult i32 %1262, 32768
  br i1 %1263, label %1264, label %1270

; <label>:1264                                    ; preds = %1252
  %1265 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1266 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1265, i32 0, i32 8
  %1267 = load i32, i32* %1266, align 4
  %1268 = load i32, i32* %len_to_move, align 4
  %1269 = add i32 %1267, %1268
  br label %1271

; <label>:1270                                    ; preds = %1252
  br label %1271

; <label>:1271                                    ; preds = %1270, %1264
  %1272 = phi i32 [ %1269, %1264 ], [ 32768, %1270 ]
  %1273 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1274 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1273, i32 0, i32 8
  store i32 %1272, i32* %1274, align 4
  %1275 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1276 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1275, i32 0, i32 9
  %1277 = load i8*, i8** %1276, align 8
  %1278 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1279 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1278, i32 0, i32 39
  %1280 = getelementptr inbounds [65536 x i8], [65536 x i8]* %1279, i64 0, i64 65528
  %1281 = icmp ugt i8* %1277, %1280
  br i1 %1281, label %1310, label %1282

; <label>:1282                                    ; preds = %1271
  %1283 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1284 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1283, i32 0, i32 14
  %1285 = load i32, i32* %1284, align 4
  %1286 = icmp ugt i32 %1285, 31744
  br i1 %1286, label %1287, label %1325

; <label>:1287                                    ; preds = %1282
  %1288 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1289 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1288, i32 0, i32 9
  %1290 = load i8*, i8** %1289, align 8
  %1291 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1292 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1291, i32 0, i32 39
  %1293 = getelementptr inbounds [65536 x i8], [65536 x i8]* %1292, i32 0, i32 0
  %1294 = ptrtoint i8* %1290 to i64
  %1295 = ptrtoint i8* %1293 to i64
  %1296 = sub i64 %1294, %1295
  %1297 = trunc i64 %1296 to i32
  %1298 = mul i32 %1297, 115
  %1299 = lshr i32 %1298, 7
  %1300 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1301 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1300, i32 0, i32 14
  %1302 = load i32, i32* %1301, align 4
  %1303 = icmp uge i32 %1299, %1302
  br i1 %1303, label %1310, label %1304

; <label>:1304                                    ; preds = %1287
  %1305 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1306 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1305, i32 0, i32 2
  %1307 = load i32, i32* %1306, align 8
  %1308 = and i32 %1307, 524288
  %1309 = icmp ne i32 %1308, 0
  br i1 %1309, label %1310, label %1325

; <label>:1310                                    ; preds = %1304, %1287, %1271
  %1311 = load i8*, i8** %pSrc, align 8
  %1312 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1313 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1312, i32 0, i32 32
  store i8* %1311, i8** %1313, align 8
  %1314 = load i64, i64* %src_buf_left, align 8
  %1315 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1316 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1315, i32 0, i32 33
  store i64 %1314, i64* %1316, align 8
  %1317 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1318 = call i32 @tdefl_flush_block(%struct.tdefl_compressor* %1317, i32 0)
  store i32 %1318, i32* %n, align 4
  %1319 = icmp ne i32 %1318, 0
  br i1 %1319, label %1320, label %1324

; <label>:1320                                    ; preds = %1310
  %1321 = load i32, i32* %n, align 4
  %1322 = icmp slt i32 %1321, 0
  %1323 = select i1 %1322, i32 0, i32 1
  store i32 %1323, i32* %20, align 4
  br label %1333

; <label>:1324                                    ; preds = %1310
  br label %1325

; <label>:1325                                    ; preds = %1324, %1304, %1282
  br label %31

; <label>:1326                                    ; preds = %313, %44
  %1327 = load i8*, i8** %pSrc, align 8
  %1328 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1329 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1328, i32 0, i32 32
  store i8* %1327, i8** %1329, align 8
  %1330 = load i64, i64* %src_buf_left, align 8
  %1331 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %21, align 8
  %1332 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1331, i32 0, i32 33
  store i64 %1330, i64* %1332, align 8
  store i32 1, i32* %20, align 4
  br label %1333

; <label>:1333                                    ; preds = %1326, %1320
  %1334 = load i32, i32* %20, align 4
  ret i32 %1334
}

; Function Attrs: nounwind uwtable
define internal i32 @tdefl_flush_block(%struct.tdefl_compressor* %d, i32 %flush) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.tdefl_compressor*, align 8
  %3 = alloca i32, align 4
  %saved_bit_buf = alloca i32, align 4
  %saved_bits_in = alloca i32, align 4
  %pSaved_output_buf = alloca i8*, align 8
  %comp_block_succeeded = alloca i32, align 4
  %n = alloca i32, align 4
  %use_raw_block = alloca i32, align 4
  %pOutput_buf_start = alloca i8*, align 8
  %bits = alloca i32, align 4
  %len = alloca i32, align 4
  %bits1 = alloca i32, align 4
  %len2 = alloca i32, align 4
  %bits3 = alloca i32, align 4
  %len4 = alloca i32, align 4
  %i = alloca i32, align 4
  %bits5 = alloca i32, align 4
  %len6 = alloca i32, align 4
  %bits7 = alloca i32, align 4
  %len8 = alloca i32, align 4
  %bits9 = alloca i32, align 4
  %len10 = alloca i32, align 4
  %bits11 = alloca i32, align 4
  %len12 = alloca i32, align 4
  %bits13 = alloca i32, align 4
  %len14 = alloca i32, align 4
  %i15 = alloca i32, align 4
  %a = alloca i32, align 4
  %bits16 = alloca i32, align 4
  %len17 = alloca i32, align 4
  %i18 = alloca i32, align 4
  %z = alloca i32, align 4
  %bits19 = alloca i32, align 4
  %len20 = alloca i32, align 4
  %bits21 = alloca i32, align 4
  %len22 = alloca i32, align 4
  %bits23 = alloca i32, align 4
  %len24 = alloca i32, align 4
  %bytes_to_copy = alloca i32, align 4
  store %struct.tdefl_compressor* %d, %struct.tdefl_compressor** %2, align 8
  store i32 %flush, i32* %3, align 4
  store i32 0, i32* %comp_block_succeeded, align 4
  %4 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %5 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %4, i32 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 524288
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %21

; <label>:9                                       ; preds = %0
  %10 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %11 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %10, i32 0, i32 6
  %12 = load i32, i32* %11, align 4
  %13 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %14 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %13, i32 0, i32 15
  %15 = load i32, i32* %14, align 8
  %16 = sub i32 %12, %15
  %17 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %18 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %17, i32 0, i32 8
  %19 = load i32, i32* %18, align 4
  %20 = icmp ule i32 %16, %19
  br label %21

; <label>:21                                      ; preds = %9, %0
  %22 = phi i1 [ false, %0 ], [ %20, %9 ]
  %23 = zext i1 %22 to i32
  store i32 %23, i32* %use_raw_block, align 4
  %24 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %25 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %24, i32 0, i32 0
  %26 = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %25, align 8
  %27 = icmp eq i32 (i8*, i32, i8*)* %26, null
  br i1 %27, label %28, label %46

; <label>:28                                      ; preds = %21
  %29 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %30 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %29, i32 0, i32 30
  %31 = load i64*, i64** %30, align 8
  %32 = load i64, i64* %31, align 8
  %33 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %34 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %33, i32 0, i32 34
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %32, %35
  %37 = icmp uge i64 %36, 85196
  br i1 %37, label %38, label %46

; <label>:38                                      ; preds = %28
  %39 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %40 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %39, i32 0, i32 28
  %41 = load i8*, i8** %40, align 8
  %42 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %43 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %42, i32 0, i32 34
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds i8, i8* %41, i64 %44
  br label %50

; <label>:46                                      ; preds = %28, %21
  %47 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %48 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %47, i32 0, i32 42
  %49 = getelementptr inbounds [85196 x i8], [85196 x i8]* %48, i32 0, i32 0
  br label %50

; <label>:50                                      ; preds = %46, %38
  %51 = phi i8* [ %45, %38 ], [ %49, %46 ]
  store i8* %51, i8** %pOutput_buf_start, align 8
  %52 = load i8*, i8** %pOutput_buf_start, align 8
  %53 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %54 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %53, i32 0, i32 11
  store i8* %52, i8** %54, align 8
  %55 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %56 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %55, i32 0, i32 11
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 85196
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %61 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %60, i32 0, i32 12
  store i8* %59, i8** %61, align 8
  %62 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %63 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %62, i32 0, i32 22
  %64 = load i32, i32* %63, align 4
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %67, label %66

; <label>:66                                      ; preds = %50
  br label %69

; <label>:67                                      ; preds = %50
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2173, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %69

; <label>:69                                      ; preds = %68, %66
  %70 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %71 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %70, i32 0, i32 21
  store i32 0, i32* %71, align 8
  %72 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %73 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %72, i32 0, i32 22
  store i32 0, i32* %73, align 4
  %74 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %75 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %74, i32 0, i32 10
  %76 = load i8*, i8** %75, align 8
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %80 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %79, i32 0, i32 13
  %81 = load i32, i32* %80, align 8
  %82 = ashr i32 %78, %81
  %83 = trunc i32 %82 to i8
  %84 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %85 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %84, i32 0, i32 10
  %86 = load i8*, i8** %85, align 8
  store i8 %83, i8* %86, align 1
  %87 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %88 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %87, i32 0, i32 13
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %89, 8
  %91 = zext i1 %90 to i32
  %92 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %93 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %92, i32 0, i32 9
  %94 = load i8*, i8** %93, align 8
  %95 = sext i32 %91 to i64
  %96 = sub i64 0, %95
  %97 = getelementptr inbounds i8, i8* %94, i64 %96
  store i8* %97, i8** %93, align 8
  %98 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %99 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %98, i32 0, i32 2
  %100 = load i32, i32* %99, align 8
  %101 = and i32 %100, 4096
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %223

; <label>:103                                     ; preds = %69
  %104 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %105 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %104, i32 0, i32 24
  %106 = load i32, i32* %105, align 4
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %223, label %108

; <label>:108                                     ; preds = %103
  br label %109

; <label>:109                                     ; preds = %108
  store i32 120, i32* %bits, align 4
  store i32 8, i32* %len, align 4
  %110 = load i32, i32* %bits, align 4
  %111 = load i32, i32* %len, align 4
  %112 = shl i32 1, %111
  %113 = sub i32 %112, 1
  %114 = icmp ule i32 %110, %113
  br i1 %114, label %115, label %116

; <label>:115                                     ; preds = %109
  br label %118

; <label>:116                                     ; preds = %109
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2182, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %118

; <label>:118                                     ; preds = %117, %115
  %119 = load i32, i32* %bits, align 4
  %120 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %121 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %120, i32 0, i32 16
  %122 = load i32, i32* %121, align 4
  %123 = shl i32 %119, %122
  %124 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %125 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %124, i32 0, i32 17
  %126 = load i32, i32* %125, align 8
  %127 = or i32 %126, %123
  store i32 %127, i32* %125, align 8
  %128 = load i32, i32* %len, align 4
  %129 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %130 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %129, i32 0, i32 16
  %131 = load i32, i32* %130, align 4
  %132 = add i32 %131, %128
  store i32 %132, i32* %130, align 4
  br label %133

; <label>:133                                     ; preds = %155, %118
  %134 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %135 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %134, i32 0, i32 16
  %136 = load i32, i32* %135, align 4
  %137 = icmp uge i32 %136, 8
  br i1 %137, label %138, label %164

; <label>:138                                     ; preds = %133
  %139 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %140 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %139, i32 0, i32 11
  %141 = load i8*, i8** %140, align 8
  %142 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %143 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %142, i32 0, i32 12
  %144 = load i8*, i8** %143, align 8
  %145 = icmp ult i8* %141, %144
  br i1 %145, label %146, label %155

; <label>:146                                     ; preds = %138
  %147 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %148 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %147, i32 0, i32 17
  %149 = load i32, i32* %148, align 8
  %150 = trunc i32 %149 to i8
  %151 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %152 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %151, i32 0, i32 11
  %153 = load i8*, i8** %152, align 8
  %154 = getelementptr inbounds i8, i8* %153, i32 1
  store i8* %154, i8** %152, align 8
  store i8 %150, i8* %153, align 1
  br label %155

; <label>:155                                     ; preds = %146, %138
  %156 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %157 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %156, i32 0, i32 17
  %158 = load i32, i32* %157, align 8
  %159 = lshr i32 %158, 8
  store i32 %159, i32* %157, align 8
  %160 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %161 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %160, i32 0, i32 16
  %162 = load i32, i32* %161, align 4
  %163 = sub i32 %162, 8
  store i32 %163, i32* %161, align 4
  br label %133

; <label>:164                                     ; preds = %133
  br label %165

; <label>:165                                     ; preds = %164
  br label %166

; <label>:166                                     ; preds = %165
  store i32 1, i32* %bits1, align 4
  store i32 8, i32* %len2, align 4
  %167 = load i32, i32* %bits1, align 4
  %168 = load i32, i32* %len2, align 4
  %169 = shl i32 1, %168
  %170 = sub i32 %169, 1
  %171 = icmp ule i32 %167, %170
  br i1 %171, label %172, label %173

; <label>:172                                     ; preds = %166
  br label %175

; <label>:173                                     ; preds = %166
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2182, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %175

; <label>:175                                     ; preds = %174, %172
  %176 = load i32, i32* %bits1, align 4
  %177 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %178 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %177, i32 0, i32 16
  %179 = load i32, i32* %178, align 4
  %180 = shl i32 %176, %179
  %181 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %182 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %181, i32 0, i32 17
  %183 = load i32, i32* %182, align 8
  %184 = or i32 %183, %180
  store i32 %184, i32* %182, align 8
  %185 = load i32, i32* %len2, align 4
  %186 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %187 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %186, i32 0, i32 16
  %188 = load i32, i32* %187, align 4
  %189 = add i32 %188, %185
  store i32 %189, i32* %187, align 4
  br label %190

; <label>:190                                     ; preds = %212, %175
  %191 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %192 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %191, i32 0, i32 16
  %193 = load i32, i32* %192, align 4
  %194 = icmp uge i32 %193, 8
  br i1 %194, label %195, label %221

; <label>:195                                     ; preds = %190
  %196 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %197 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %196, i32 0, i32 11
  %198 = load i8*, i8** %197, align 8
  %199 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %200 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %199, i32 0, i32 12
  %201 = load i8*, i8** %200, align 8
  %202 = icmp ult i8* %198, %201
  br i1 %202, label %203, label %212

; <label>:203                                     ; preds = %195
  %204 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %205 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %204, i32 0, i32 17
  %206 = load i32, i32* %205, align 8
  %207 = trunc i32 %206 to i8
  %208 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %209 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %208, i32 0, i32 11
  %210 = load i8*, i8** %209, align 8
  %211 = getelementptr inbounds i8, i8* %210, i32 1
  store i8* %211, i8** %209, align 8
  store i8 %207, i8* %210, align 1
  br label %212

; <label>:212                                     ; preds = %203, %195
  %213 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %214 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %213, i32 0, i32 17
  %215 = load i32, i32* %214, align 8
  %216 = lshr i32 %215, 8
  store i32 %216, i32* %214, align 8
  %217 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %218 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %217, i32 0, i32 16
  %219 = load i32, i32* %218, align 4
  %220 = sub i32 %219, 8
  store i32 %220, i32* %218, align 4
  br label %190

; <label>:221                                     ; preds = %190
  br label %222

; <label>:222                                     ; preds = %221
  br label %223

; <label>:223                                     ; preds = %222, %103, %69
  br label %224

; <label>:224                                     ; preds = %223
  %225 = load i32, i32* %3, align 4
  %226 = icmp eq i32 %225, 4
  %227 = zext i1 %226 to i32
  store i32 %227, i32* %bits3, align 4
  store i32 1, i32* %len4, align 4
  %228 = load i32, i32* %bits3, align 4
  %229 = load i32, i32* %len4, align 4
  %230 = shl i32 1, %229
  %231 = sub i32 %230, 1
  %232 = icmp ule i32 %228, %231
  br i1 %232, label %233, label %234

; <label>:233                                     ; preds = %224
  br label %236

; <label>:234                                     ; preds = %224
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2185, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %236

; <label>:236                                     ; preds = %235, %233
  %237 = load i32, i32* %bits3, align 4
  %238 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %239 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %238, i32 0, i32 16
  %240 = load i32, i32* %239, align 4
  %241 = shl i32 %237, %240
  %242 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %243 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %242, i32 0, i32 17
  %244 = load i32, i32* %243, align 8
  %245 = or i32 %244, %241
  store i32 %245, i32* %243, align 8
  %246 = load i32, i32* %len4, align 4
  %247 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %248 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %247, i32 0, i32 16
  %249 = load i32, i32* %248, align 4
  %250 = add i32 %249, %246
  store i32 %250, i32* %248, align 4
  br label %251

; <label>:251                                     ; preds = %273, %236
  %252 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %253 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %252, i32 0, i32 16
  %254 = load i32, i32* %253, align 4
  %255 = icmp uge i32 %254, 8
  br i1 %255, label %256, label %282

; <label>:256                                     ; preds = %251
  %257 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %258 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %257, i32 0, i32 11
  %259 = load i8*, i8** %258, align 8
  %260 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %261 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %260, i32 0, i32 12
  %262 = load i8*, i8** %261, align 8
  %263 = icmp ult i8* %259, %262
  br i1 %263, label %264, label %273

; <label>:264                                     ; preds = %256
  %265 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %266 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %265, i32 0, i32 17
  %267 = load i32, i32* %266, align 8
  %268 = trunc i32 %267 to i8
  %269 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %270 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %269, i32 0, i32 11
  %271 = load i8*, i8** %270, align 8
  %272 = getelementptr inbounds i8, i8* %271, i32 1
  store i8* %272, i8** %270, align 8
  store i8 %268, i8* %271, align 1
  br label %273

; <label>:273                                     ; preds = %264, %256
  %274 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %275 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %274, i32 0, i32 17
  %276 = load i32, i32* %275, align 8
  %277 = lshr i32 %276, 8
  store i32 %277, i32* %275, align 8
  %278 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %279 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %278, i32 0, i32 16
  %280 = load i32, i32* %279, align 4
  %281 = sub i32 %280, 8
  store i32 %281, i32* %279, align 4
  br label %251

; <label>:282                                     ; preds = %251
  br label %283

; <label>:283                                     ; preds = %282
  %284 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %285 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %284, i32 0, i32 11
  %286 = load i8*, i8** %285, align 8
  store i8* %286, i8** %pSaved_output_buf, align 8
  %287 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %288 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %287, i32 0, i32 17
  %289 = load i32, i32* %288, align 8
  store i32 %289, i32* %saved_bit_buf, align 4
  %290 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %291 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %290, i32 0, i32 16
  %292 = load i32, i32* %291, align 4
  store i32 %292, i32* %saved_bits_in, align 4
  %293 = load i32, i32* %use_raw_block, align 4
  %294 = icmp ne i32 %293, 0
  br i1 %294, label %311, label %295

; <label>:295                                     ; preds = %283
  %296 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %297 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %298 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %297, i32 0, i32 2
  %299 = load i32, i32* %298, align 8
  %300 = and i32 %299, 262144
  %301 = icmp ne i32 %300, 0
  br i1 %301, label %307, label %302

; <label>:302                                     ; preds = %295
  %303 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %304 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %303, i32 0, i32 14
  %305 = load i32, i32* %304, align 4
  %306 = icmp ult i32 %305, 48
  br label %307

; <label>:307                                     ; preds = %302, %295
  %308 = phi i1 [ true, %295 ], [ %306, %302 ]
  %309 = zext i1 %308 to i32
  %310 = call i32 @tdefl_compress_block(%struct.tdefl_compressor* %296, i32 %309)
  store i32 %310, i32* %comp_block_succeeded, align 4
  br label %311

; <label>:311                                     ; preds = %307, %283
  %312 = load i32, i32* %use_raw_block, align 4
  %313 = icmp ne i32 %312, 0
  br i1 %313, label %333, label %314

; <label>:314                                     ; preds = %311
  %315 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %316 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %315, i32 0, i32 14
  %317 = load i32, i32* %316, align 4
  %318 = icmp ne i32 %317, 0
  br i1 %318, label %319, label %632

; <label>:319                                     ; preds = %314
  %320 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %321 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %320, i32 0, i32 11
  %322 = load i8*, i8** %321, align 8
  %323 = load i8*, i8** %pSaved_output_buf, align 8
  %324 = ptrtoint i8* %322 to i64
  %325 = ptrtoint i8* %323 to i64
  %326 = sub i64 %324, %325
  %327 = add nsw i64 %326, 1
  %328 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %329 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %328, i32 0, i32 14
  %330 = load i32, i32* %329, align 4
  %331 = zext i32 %330 to i64
  %332 = icmp sge i64 %327, %331
  br i1 %332, label %333, label %632

; <label>:333                                     ; preds = %319, %311
  %334 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %335 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %334, i32 0, i32 6
  %336 = load i32, i32* %335, align 4
  %337 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %338 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %337, i32 0, i32 15
  %339 = load i32, i32* %338, align 8
  %340 = sub i32 %336, %339
  %341 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %342 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %341, i32 0, i32 8
  %343 = load i32, i32* %342, align 4
  %344 = icmp ule i32 %340, %343
  br i1 %344, label %345, label %632

; <label>:345                                     ; preds = %333
  %346 = load i8*, i8** %pSaved_output_buf, align 8
  %347 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %348 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %347, i32 0, i32 11
  store i8* %346, i8** %348, align 8
  %349 = load i32, i32* %saved_bit_buf, align 4
  %350 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %351 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %350, i32 0, i32 17
  store i32 %349, i32* %351, align 8
  %352 = load i32, i32* %saved_bits_in, align 4
  %353 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %354 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %353, i32 0, i32 16
  store i32 %352, i32* %354, align 4
  br label %355

; <label>:355                                     ; preds = %345
  store i32 0, i32* %bits5, align 4
  store i32 2, i32* %len6, align 4
  %356 = load i32, i32* %bits5, align 4
  %357 = load i32, i32* %len6, align 4
  %358 = shl i32 1, %357
  %359 = sub i32 %358, 1
  %360 = icmp ule i32 %356, %359
  br i1 %360, label %361, label %362

; <label>:361                                     ; preds = %355
  br label %364

; <label>:362                                     ; preds = %355
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2197, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %364

; <label>:364                                     ; preds = %363, %361
  %365 = load i32, i32* %bits5, align 4
  %366 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %367 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %366, i32 0, i32 16
  %368 = load i32, i32* %367, align 4
  %369 = shl i32 %365, %368
  %370 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %371 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %370, i32 0, i32 17
  %372 = load i32, i32* %371, align 8
  %373 = or i32 %372, %369
  store i32 %373, i32* %371, align 8
  %374 = load i32, i32* %len6, align 4
  %375 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %376 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %375, i32 0, i32 16
  %377 = load i32, i32* %376, align 4
  %378 = add i32 %377, %374
  store i32 %378, i32* %376, align 4
  br label %379

; <label>:379                                     ; preds = %401, %364
  %380 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %381 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %380, i32 0, i32 16
  %382 = load i32, i32* %381, align 4
  %383 = icmp uge i32 %382, 8
  br i1 %383, label %384, label %410

; <label>:384                                     ; preds = %379
  %385 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %386 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %385, i32 0, i32 11
  %387 = load i8*, i8** %386, align 8
  %388 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %389 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %388, i32 0, i32 12
  %390 = load i8*, i8** %389, align 8
  %391 = icmp ult i8* %387, %390
  br i1 %391, label %392, label %401

; <label>:392                                     ; preds = %384
  %393 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %394 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %393, i32 0, i32 17
  %395 = load i32, i32* %394, align 8
  %396 = trunc i32 %395 to i8
  %397 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %398 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %397, i32 0, i32 11
  %399 = load i8*, i8** %398, align 8
  %400 = getelementptr inbounds i8, i8* %399, i32 1
  store i8* %400, i8** %398, align 8
  store i8 %396, i8* %399, align 1
  br label %401

; <label>:401                                     ; preds = %392, %384
  %402 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %403 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %402, i32 0, i32 17
  %404 = load i32, i32* %403, align 8
  %405 = lshr i32 %404, 8
  store i32 %405, i32* %403, align 8
  %406 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %407 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %406, i32 0, i32 16
  %408 = load i32, i32* %407, align 4
  %409 = sub i32 %408, 8
  store i32 %409, i32* %407, align 4
  br label %379

; <label>:410                                     ; preds = %379
  br label %411

; <label>:411                                     ; preds = %410
  %412 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %413 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %412, i32 0, i32 16
  %414 = load i32, i32* %413, align 4
  %415 = icmp ne i32 %414, 0
  br i1 %415, label %416, label %478

; <label>:416                                     ; preds = %411
  br label %417

; <label>:417                                     ; preds = %416
  store i32 0, i32* %bits7, align 4
  %418 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %419 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %418, i32 0, i32 16
  %420 = load i32, i32* %419, align 4
  %421 = sub i32 8, %420
  store i32 %421, i32* %len8, align 4
  %422 = load i32, i32* %bits7, align 4
  %423 = load i32, i32* %len8, align 4
  %424 = shl i32 1, %423
  %425 = sub i32 %424, 1
  %426 = icmp ule i32 %422, %425
  br i1 %426, label %427, label %428

; <label>:427                                     ; preds = %417
  br label %430

; <label>:428                                     ; preds = %417
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2198, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %430

; <label>:430                                     ; preds = %429, %427
  %431 = load i32, i32* %bits7, align 4
  %432 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %433 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %432, i32 0, i32 16
  %434 = load i32, i32* %433, align 4
  %435 = shl i32 %431, %434
  %436 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %437 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %436, i32 0, i32 17
  %438 = load i32, i32* %437, align 8
  %439 = or i32 %438, %435
  store i32 %439, i32* %437, align 8
  %440 = load i32, i32* %len8, align 4
  %441 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %442 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %441, i32 0, i32 16
  %443 = load i32, i32* %442, align 4
  %444 = add i32 %443, %440
  store i32 %444, i32* %442, align 4
  br label %445

; <label>:445                                     ; preds = %467, %430
  %446 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %447 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %446, i32 0, i32 16
  %448 = load i32, i32* %447, align 4
  %449 = icmp uge i32 %448, 8
  br i1 %449, label %450, label %476

; <label>:450                                     ; preds = %445
  %451 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %452 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %451, i32 0, i32 11
  %453 = load i8*, i8** %452, align 8
  %454 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %455 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %454, i32 0, i32 12
  %456 = load i8*, i8** %455, align 8
  %457 = icmp ult i8* %453, %456
  br i1 %457, label %458, label %467

; <label>:458                                     ; preds = %450
  %459 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %460 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %459, i32 0, i32 17
  %461 = load i32, i32* %460, align 8
  %462 = trunc i32 %461 to i8
  %463 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %464 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %463, i32 0, i32 11
  %465 = load i8*, i8** %464, align 8
  %466 = getelementptr inbounds i8, i8* %465, i32 1
  store i8* %466, i8** %464, align 8
  store i8 %462, i8* %465, align 1
  br label %467

; <label>:467                                     ; preds = %458, %450
  %468 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %469 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %468, i32 0, i32 17
  %470 = load i32, i32* %469, align 8
  %471 = lshr i32 %470, 8
  store i32 %471, i32* %469, align 8
  %472 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %473 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %472, i32 0, i32 16
  %474 = load i32, i32* %473, align 4
  %475 = sub i32 %474, 8
  store i32 %475, i32* %473, align 4
  br label %445

; <label>:476                                     ; preds = %445
  br label %477

; <label>:477                                     ; preds = %476
  br label %478

; <label>:478                                     ; preds = %477, %411
  store i32 2, i32* %i, align 4
  br label %479

; <label>:479                                     ; preds = %544, %478
  %480 = load i32, i32* %i, align 4
  %481 = icmp ne i32 %480, 0
  br i1 %481, label %482, label %551

; <label>:482                                     ; preds = %479
  br label %483

; <label>:483                                     ; preds = %482
  %484 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %485 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %484, i32 0, i32 14
  %486 = load i32, i32* %485, align 4
  %487 = and i32 %486, 65535
  store i32 %487, i32* %bits9, align 4
  store i32 16, i32* %len10, align 4
  %488 = load i32, i32* %bits9, align 4
  %489 = load i32, i32* %len10, align 4
  %490 = shl i32 1, %489
  %491 = sub i32 %490, 1
  %492 = icmp ule i32 %488, %491
  br i1 %492, label %493, label %494

; <label>:493                                     ; preds = %483
  br label %496

; <label>:494                                     ; preds = %483
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2201, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %496

; <label>:496                                     ; preds = %495, %493
  %497 = load i32, i32* %bits9, align 4
  %498 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %499 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %498, i32 0, i32 16
  %500 = load i32, i32* %499, align 4
  %501 = shl i32 %497, %500
  %502 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %503 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %502, i32 0, i32 17
  %504 = load i32, i32* %503, align 8
  %505 = or i32 %504, %501
  store i32 %505, i32* %503, align 8
  %506 = load i32, i32* %len10, align 4
  %507 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %508 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %507, i32 0, i32 16
  %509 = load i32, i32* %508, align 4
  %510 = add i32 %509, %506
  store i32 %510, i32* %508, align 4
  br label %511

; <label>:511                                     ; preds = %533, %496
  %512 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %513 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %512, i32 0, i32 16
  %514 = load i32, i32* %513, align 4
  %515 = icmp uge i32 %514, 8
  br i1 %515, label %516, label %542

; <label>:516                                     ; preds = %511
  %517 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %518 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %517, i32 0, i32 11
  %519 = load i8*, i8** %518, align 8
  %520 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %521 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %520, i32 0, i32 12
  %522 = load i8*, i8** %521, align 8
  %523 = icmp ult i8* %519, %522
  br i1 %523, label %524, label %533

; <label>:524                                     ; preds = %516
  %525 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %526 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %525, i32 0, i32 17
  %527 = load i32, i32* %526, align 8
  %528 = trunc i32 %527 to i8
  %529 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %530 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %529, i32 0, i32 11
  %531 = load i8*, i8** %530, align 8
  %532 = getelementptr inbounds i8, i8* %531, i32 1
  store i8* %532, i8** %530, align 8
  store i8 %528, i8* %531, align 1
  br label %533

; <label>:533                                     ; preds = %524, %516
  %534 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %535 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %534, i32 0, i32 17
  %536 = load i32, i32* %535, align 8
  %537 = lshr i32 %536, 8
  store i32 %537, i32* %535, align 8
  %538 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %539 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %538, i32 0, i32 16
  %540 = load i32, i32* %539, align 4
  %541 = sub i32 %540, 8
  store i32 %541, i32* %539, align 4
  br label %511

; <label>:542                                     ; preds = %511
  br label %543

; <label>:543                                     ; preds = %542
  br label %544

; <label>:544                                     ; preds = %543
  %545 = load i32, i32* %i, align 4
  %546 = add i32 %545, -1
  store i32 %546, i32* %i, align 4
  %547 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %548 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %547, i32 0, i32 14
  %549 = load i32, i32* %548, align 4
  %550 = xor i32 %549, 65535
  store i32 %550, i32* %548, align 4
  br label %479

; <label>:551                                     ; preds = %479
  store i32 0, i32* %i, align 4
  br label %552

; <label>:552                                     ; preds = %628, %551
  %553 = load i32, i32* %i, align 4
  %554 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %555 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %554, i32 0, i32 14
  %556 = load i32, i32* %555, align 4
  %557 = icmp ult i32 %553, %556
  br i1 %557, label %558, label %631

; <label>:558                                     ; preds = %552
  br label %559

; <label>:559                                     ; preds = %558
  %560 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %561 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %560, i32 0, i32 15
  %562 = load i32, i32* %561, align 8
  %563 = load i32, i32* %i, align 4
  %564 = add i32 %562, %563
  %565 = and i32 %564, 32767
  %566 = zext i32 %565 to i64
  %567 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %568 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %567, i32 0, i32 35
  %569 = getelementptr inbounds [33025 x i8], [33025 x i8]* %568, i64 0, i64 %566
  %570 = load i8, i8* %569, align 1
  %571 = zext i8 %570 to i32
  store i32 %571, i32* %bits11, align 4
  store i32 8, i32* %len12, align 4
  %572 = load i32, i32* %bits11, align 4
  %573 = load i32, i32* %len12, align 4
  %574 = shl i32 1, %573
  %575 = sub i32 %574, 1
  %576 = icmp ule i32 %572, %575
  br i1 %576, label %577, label %578

; <label>:577                                     ; preds = %559
  br label %580

; <label>:578                                     ; preds = %559
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2205, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %580

; <label>:580                                     ; preds = %579, %577
  %581 = load i32, i32* %bits11, align 4
  %582 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %583 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %582, i32 0, i32 16
  %584 = load i32, i32* %583, align 4
  %585 = shl i32 %581, %584
  %586 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %587 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %586, i32 0, i32 17
  %588 = load i32, i32* %587, align 8
  %589 = or i32 %588, %585
  store i32 %589, i32* %587, align 8
  %590 = load i32, i32* %len12, align 4
  %591 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %592 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %591, i32 0, i32 16
  %593 = load i32, i32* %592, align 4
  %594 = add i32 %593, %590
  store i32 %594, i32* %592, align 4
  br label %595

; <label>:595                                     ; preds = %617, %580
  %596 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %597 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %596, i32 0, i32 16
  %598 = load i32, i32* %597, align 4
  %599 = icmp uge i32 %598, 8
  br i1 %599, label %600, label %626

; <label>:600                                     ; preds = %595
  %601 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %602 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %601, i32 0, i32 11
  %603 = load i8*, i8** %602, align 8
  %604 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %605 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %604, i32 0, i32 12
  %606 = load i8*, i8** %605, align 8
  %607 = icmp ult i8* %603, %606
  br i1 %607, label %608, label %617

; <label>:608                                     ; preds = %600
  %609 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %610 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %609, i32 0, i32 17
  %611 = load i32, i32* %610, align 8
  %612 = trunc i32 %611 to i8
  %613 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %614 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %613, i32 0, i32 11
  %615 = load i8*, i8** %614, align 8
  %616 = getelementptr inbounds i8, i8* %615, i32 1
  store i8* %616, i8** %614, align 8
  store i8 %612, i8* %615, align 1
  br label %617

; <label>:617                                     ; preds = %608, %600
  %618 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %619 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %618, i32 0, i32 17
  %620 = load i32, i32* %619, align 8
  %621 = lshr i32 %620, 8
  store i32 %621, i32* %619, align 8
  %622 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %623 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %622, i32 0, i32 16
  %624 = load i32, i32* %623, align 4
  %625 = sub i32 %624, 8
  store i32 %625, i32* %623, align 4
  br label %595

; <label>:626                                     ; preds = %595
  br label %627

; <label>:627                                     ; preds = %626
  br label %628

; <label>:628                                     ; preds = %627
  %629 = load i32, i32* %i, align 4
  %630 = add i32 %629, 1
  store i32 %630, i32* %i, align 4
  br label %552

; <label>:631                                     ; preds = %552
  br label %648

; <label>:632                                     ; preds = %333, %319, %314
  %633 = load i32, i32* %comp_block_succeeded, align 4
  %634 = icmp ne i32 %633, 0
  br i1 %634, label %647, label %635

; <label>:635                                     ; preds = %632
  %636 = load i8*, i8** %pSaved_output_buf, align 8
  %637 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %638 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %637, i32 0, i32 11
  store i8* %636, i8** %638, align 8
  %639 = load i32, i32* %saved_bit_buf, align 4
  %640 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %641 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %640, i32 0, i32 17
  store i32 %639, i32* %641, align 8
  %642 = load i32, i32* %saved_bits_in, align 4
  %643 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %644 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %643, i32 0, i32 16
  store i32 %642, i32* %644, align 4
  %645 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %646 = call i32 @tdefl_compress_block(%struct.tdefl_compressor* %645, i32 1)
  br label %647

; <label>:647                                     ; preds = %635, %632
  br label %648

; <label>:648                                     ; preds = %647, %631
  %649 = load i32, i32* %3, align 4
  %650 = icmp ne i32 %649, 0
  br i1 %650, label %651, label %997

; <label>:651                                     ; preds = %648
  %652 = load i32, i32* %3, align 4
  %653 = icmp eq i32 %652, 4
  br i1 %653, label %654, label %802

; <label>:654                                     ; preds = %651
  %655 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %656 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %655, i32 0, i32 16
  %657 = load i32, i32* %656, align 4
  %658 = icmp ne i32 %657, 0
  br i1 %658, label %659, label %721

; <label>:659                                     ; preds = %654
  br label %660

; <label>:660                                     ; preds = %659
  store i32 0, i32* %bits13, align 4
  %661 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %662 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %661, i32 0, i32 16
  %663 = load i32, i32* %662, align 4
  %664 = sub i32 8, %663
  store i32 %664, i32* %len14, align 4
  %665 = load i32, i32* %bits13, align 4
  %666 = load i32, i32* %len14, align 4
  %667 = shl i32 1, %666
  %668 = sub i32 %667, 1
  %669 = icmp ule i32 %665, %668
  br i1 %669, label %670, label %671

; <label>:670                                     ; preds = %660
  br label %673

; <label>:671                                     ; preds = %660
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2219, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %673

; <label>:673                                     ; preds = %672, %670
  %674 = load i32, i32* %bits13, align 4
  %675 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %676 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %675, i32 0, i32 16
  %677 = load i32, i32* %676, align 4
  %678 = shl i32 %674, %677
  %679 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %680 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %679, i32 0, i32 17
  %681 = load i32, i32* %680, align 8
  %682 = or i32 %681, %678
  store i32 %682, i32* %680, align 8
  %683 = load i32, i32* %len14, align 4
  %684 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %685 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %684, i32 0, i32 16
  %686 = load i32, i32* %685, align 4
  %687 = add i32 %686, %683
  store i32 %687, i32* %685, align 4
  br label %688

; <label>:688                                     ; preds = %710, %673
  %689 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %690 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %689, i32 0, i32 16
  %691 = load i32, i32* %690, align 4
  %692 = icmp uge i32 %691, 8
  br i1 %692, label %693, label %719

; <label>:693                                     ; preds = %688
  %694 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %695 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %694, i32 0, i32 11
  %696 = load i8*, i8** %695, align 8
  %697 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %698 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %697, i32 0, i32 12
  %699 = load i8*, i8** %698, align 8
  %700 = icmp ult i8* %696, %699
  br i1 %700, label %701, label %710

; <label>:701                                     ; preds = %693
  %702 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %703 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %702, i32 0, i32 17
  %704 = load i32, i32* %703, align 8
  %705 = trunc i32 %704 to i8
  %706 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %707 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %706, i32 0, i32 11
  %708 = load i8*, i8** %707, align 8
  %709 = getelementptr inbounds i8, i8* %708, i32 1
  store i8* %709, i8** %707, align 8
  store i8 %705, i8* %708, align 1
  br label %710

; <label>:710                                     ; preds = %701, %693
  %711 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %712 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %711, i32 0, i32 17
  %713 = load i32, i32* %712, align 8
  %714 = lshr i32 %713, 8
  store i32 %714, i32* %712, align 8
  %715 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %716 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %715, i32 0, i32 16
  %717 = load i32, i32* %716, align 4
  %718 = sub i32 %717, 8
  store i32 %718, i32* %716, align 4
  br label %688

; <label>:719                                     ; preds = %688
  br label %720

; <label>:720                                     ; preds = %719
  br label %721

; <label>:721                                     ; preds = %720, %654
  %722 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %723 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %722, i32 0, i32 2
  %724 = load i32, i32* %723, align 8
  %725 = and i32 %724, 4096
  %726 = icmp ne i32 %725, 0
  br i1 %726, label %727, label %801

; <label>:727                                     ; preds = %721
  %728 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %729 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %728, i32 0, i32 5
  %730 = load i32, i32* %729, align 8
  store i32 %730, i32* %a, align 4
  store i32 0, i32* %i15, align 4
  br label %731

; <label>:731                                     ; preds = %797, %727
  %732 = load i32, i32* %i15, align 4
  %733 = icmp ult i32 %732, 4
  br i1 %733, label %734, label %800

; <label>:734                                     ; preds = %731
  br label %735

; <label>:735                                     ; preds = %734
  %736 = load i32, i32* %a, align 4
  %737 = lshr i32 %736, 24
  %738 = and i32 %737, 255
  store i32 %738, i32* %bits16, align 4
  store i32 8, i32* %len17, align 4
  %739 = load i32, i32* %bits16, align 4
  %740 = load i32, i32* %len17, align 4
  %741 = shl i32 1, %740
  %742 = sub i32 %741, 1
  %743 = icmp ule i32 %739, %742
  br i1 %743, label %744, label %745

; <label>:744                                     ; preds = %735
  br label %747

; <label>:745                                     ; preds = %735
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2220, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %747

; <label>:747                                     ; preds = %746, %744
  %748 = load i32, i32* %bits16, align 4
  %749 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %750 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %749, i32 0, i32 16
  %751 = load i32, i32* %750, align 4
  %752 = shl i32 %748, %751
  %753 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %754 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %753, i32 0, i32 17
  %755 = load i32, i32* %754, align 8
  %756 = or i32 %755, %752
  store i32 %756, i32* %754, align 8
  %757 = load i32, i32* %len17, align 4
  %758 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %759 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %758, i32 0, i32 16
  %760 = load i32, i32* %759, align 4
  %761 = add i32 %760, %757
  store i32 %761, i32* %759, align 4
  br label %762

; <label>:762                                     ; preds = %784, %747
  %763 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %764 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %763, i32 0, i32 16
  %765 = load i32, i32* %764, align 4
  %766 = icmp uge i32 %765, 8
  br i1 %766, label %767, label %793

; <label>:767                                     ; preds = %762
  %768 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %769 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %768, i32 0, i32 11
  %770 = load i8*, i8** %769, align 8
  %771 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %772 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %771, i32 0, i32 12
  %773 = load i8*, i8** %772, align 8
  %774 = icmp ult i8* %770, %773
  br i1 %774, label %775, label %784

; <label>:775                                     ; preds = %767
  %776 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %777 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %776, i32 0, i32 17
  %778 = load i32, i32* %777, align 8
  %779 = trunc i32 %778 to i8
  %780 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %781 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %780, i32 0, i32 11
  %782 = load i8*, i8** %781, align 8
  %783 = getelementptr inbounds i8, i8* %782, i32 1
  store i8* %783, i8** %781, align 8
  store i8 %779, i8* %782, align 1
  br label %784

; <label>:784                                     ; preds = %775, %767
  %785 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %786 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %785, i32 0, i32 17
  %787 = load i32, i32* %786, align 8
  %788 = lshr i32 %787, 8
  store i32 %788, i32* %786, align 8
  %789 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %790 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %789, i32 0, i32 16
  %791 = load i32, i32* %790, align 4
  %792 = sub i32 %791, 8
  store i32 %792, i32* %790, align 4
  br label %762

; <label>:793                                     ; preds = %762
  br label %794

; <label>:794                                     ; preds = %793
  %795 = load i32, i32* %a, align 4
  %796 = shl i32 %795, 8
  store i32 %796, i32* %a, align 4
  br label %797

; <label>:797                                     ; preds = %794
  %798 = load i32, i32* %i15, align 4
  %799 = add i32 %798, 1
  store i32 %799, i32* %i15, align 4
  br label %731

; <label>:800                                     ; preds = %731
  br label %801

; <label>:801                                     ; preds = %800, %721
  br label %996

; <label>:802                                     ; preds = %651
  store i32 0, i32* %z, align 4
  br label %803

; <label>:803                                     ; preds = %802
  store i32 0, i32* %bits19, align 4
  store i32 3, i32* %len20, align 4
  %804 = load i32, i32* %bits19, align 4
  %805 = load i32, i32* %len20, align 4
  %806 = shl i32 1, %805
  %807 = sub i32 %806, 1
  %808 = icmp ule i32 %804, %807
  br i1 %808, label %809, label %810

; <label>:809                                     ; preds = %803
  br label %812

; <label>:810                                     ; preds = %803
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2224, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %812

; <label>:812                                     ; preds = %811, %809
  %813 = load i32, i32* %bits19, align 4
  %814 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %815 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %814, i32 0, i32 16
  %816 = load i32, i32* %815, align 4
  %817 = shl i32 %813, %816
  %818 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %819 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %818, i32 0, i32 17
  %820 = load i32, i32* %819, align 8
  %821 = or i32 %820, %817
  store i32 %821, i32* %819, align 8
  %822 = load i32, i32* %len20, align 4
  %823 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %824 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %823, i32 0, i32 16
  %825 = load i32, i32* %824, align 4
  %826 = add i32 %825, %822
  store i32 %826, i32* %824, align 4
  br label %827

; <label>:827                                     ; preds = %849, %812
  %828 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %829 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %828, i32 0, i32 16
  %830 = load i32, i32* %829, align 4
  %831 = icmp uge i32 %830, 8
  br i1 %831, label %832, label %858

; <label>:832                                     ; preds = %827
  %833 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %834 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %833, i32 0, i32 11
  %835 = load i8*, i8** %834, align 8
  %836 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %837 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %836, i32 0, i32 12
  %838 = load i8*, i8** %837, align 8
  %839 = icmp ult i8* %835, %838
  br i1 %839, label %840, label %849

; <label>:840                                     ; preds = %832
  %841 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %842 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %841, i32 0, i32 17
  %843 = load i32, i32* %842, align 8
  %844 = trunc i32 %843 to i8
  %845 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %846 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %845, i32 0, i32 11
  %847 = load i8*, i8** %846, align 8
  %848 = getelementptr inbounds i8, i8* %847, i32 1
  store i8* %848, i8** %846, align 8
  store i8 %844, i8* %847, align 1
  br label %849

; <label>:849                                     ; preds = %840, %832
  %850 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %851 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %850, i32 0, i32 17
  %852 = load i32, i32* %851, align 8
  %853 = lshr i32 %852, 8
  store i32 %853, i32* %851, align 8
  %854 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %855 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %854, i32 0, i32 16
  %856 = load i32, i32* %855, align 4
  %857 = sub i32 %856, 8
  store i32 %857, i32* %855, align 4
  br label %827

; <label>:858                                     ; preds = %827
  br label %859

; <label>:859                                     ; preds = %858
  %860 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %861 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %860, i32 0, i32 16
  %862 = load i32, i32* %861, align 4
  %863 = icmp ne i32 %862, 0
  br i1 %863, label %864, label %926

; <label>:864                                     ; preds = %859
  br label %865

; <label>:865                                     ; preds = %864
  store i32 0, i32* %bits21, align 4
  %866 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %867 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %866, i32 0, i32 16
  %868 = load i32, i32* %867, align 4
  %869 = sub i32 8, %868
  store i32 %869, i32* %len22, align 4
  %870 = load i32, i32* %bits21, align 4
  %871 = load i32, i32* %len22, align 4
  %872 = shl i32 1, %871
  %873 = sub i32 %872, 1
  %874 = icmp ule i32 %870, %873
  br i1 %874, label %875, label %876

; <label>:875                                     ; preds = %865
  br label %878

; <label>:876                                     ; preds = %865
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2224, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %878

; <label>:878                                     ; preds = %877, %875
  %879 = load i32, i32* %bits21, align 4
  %880 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %881 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %880, i32 0, i32 16
  %882 = load i32, i32* %881, align 4
  %883 = shl i32 %879, %882
  %884 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %885 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %884, i32 0, i32 17
  %886 = load i32, i32* %885, align 8
  %887 = or i32 %886, %883
  store i32 %887, i32* %885, align 8
  %888 = load i32, i32* %len22, align 4
  %889 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %890 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %889, i32 0, i32 16
  %891 = load i32, i32* %890, align 4
  %892 = add i32 %891, %888
  store i32 %892, i32* %890, align 4
  br label %893

; <label>:893                                     ; preds = %915, %878
  %894 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %895 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %894, i32 0, i32 16
  %896 = load i32, i32* %895, align 4
  %897 = icmp uge i32 %896, 8
  br i1 %897, label %898, label %924

; <label>:898                                     ; preds = %893
  %899 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %900 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %899, i32 0, i32 11
  %901 = load i8*, i8** %900, align 8
  %902 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %903 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %902, i32 0, i32 12
  %904 = load i8*, i8** %903, align 8
  %905 = icmp ult i8* %901, %904
  br i1 %905, label %906, label %915

; <label>:906                                     ; preds = %898
  %907 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %908 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %907, i32 0, i32 17
  %909 = load i32, i32* %908, align 8
  %910 = trunc i32 %909 to i8
  %911 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %912 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %911, i32 0, i32 11
  %913 = load i8*, i8** %912, align 8
  %914 = getelementptr inbounds i8, i8* %913, i32 1
  store i8* %914, i8** %912, align 8
  store i8 %910, i8* %913, align 1
  br label %915

; <label>:915                                     ; preds = %906, %898
  %916 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %917 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %916, i32 0, i32 17
  %918 = load i32, i32* %917, align 8
  %919 = lshr i32 %918, 8
  store i32 %919, i32* %917, align 8
  %920 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %921 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %920, i32 0, i32 16
  %922 = load i32, i32* %921, align 4
  %923 = sub i32 %922, 8
  store i32 %923, i32* %921, align 4
  br label %893

; <label>:924                                     ; preds = %893
  br label %925

; <label>:925                                     ; preds = %924
  br label %926

; <label>:926                                     ; preds = %925, %859
  store i32 2, i32* %i18, align 4
  br label %927

; <label>:927                                     ; preds = %990, %926
  %928 = load i32, i32* %i18, align 4
  %929 = icmp ne i32 %928, 0
  br i1 %929, label %930, label %995

; <label>:930                                     ; preds = %927
  br label %931

; <label>:931                                     ; preds = %930
  %932 = load i32, i32* %z, align 4
  %933 = and i32 %932, 65535
  store i32 %933, i32* %bits23, align 4
  store i32 16, i32* %len24, align 4
  %934 = load i32, i32* %bits23, align 4
  %935 = load i32, i32* %len24, align 4
  %936 = shl i32 1, %935
  %937 = sub i32 %936, 1
  %938 = icmp ule i32 %934, %937
  br i1 %938, label %939, label %940

; <label>:939                                     ; preds = %931
  br label %942

; <label>:940                                     ; preds = %931
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2224, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %942

; <label>:942                                     ; preds = %941, %939
  %943 = load i32, i32* %bits23, align 4
  %944 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %945 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %944, i32 0, i32 16
  %946 = load i32, i32* %945, align 4
  %947 = shl i32 %943, %946
  %948 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %949 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %948, i32 0, i32 17
  %950 = load i32, i32* %949, align 8
  %951 = or i32 %950, %947
  store i32 %951, i32* %949, align 8
  %952 = load i32, i32* %len24, align 4
  %953 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %954 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %953, i32 0, i32 16
  %955 = load i32, i32* %954, align 4
  %956 = add i32 %955, %952
  store i32 %956, i32* %954, align 4
  br label %957

; <label>:957                                     ; preds = %979, %942
  %958 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %959 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %958, i32 0, i32 16
  %960 = load i32, i32* %959, align 4
  %961 = icmp uge i32 %960, 8
  br i1 %961, label %962, label %988

; <label>:962                                     ; preds = %957
  %963 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %964 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %963, i32 0, i32 11
  %965 = load i8*, i8** %964, align 8
  %966 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %967 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %966, i32 0, i32 12
  %968 = load i8*, i8** %967, align 8
  %969 = icmp ult i8* %965, %968
  br i1 %969, label %970, label %979

; <label>:970                                     ; preds = %962
  %971 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %972 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %971, i32 0, i32 17
  %973 = load i32, i32* %972, align 8
  %974 = trunc i32 %973 to i8
  %975 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %976 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %975, i32 0, i32 11
  %977 = load i8*, i8** %976, align 8
  %978 = getelementptr inbounds i8, i8* %977, i32 1
  store i8* %978, i8** %976, align 8
  store i8 %974, i8* %977, align 1
  br label %979

; <label>:979                                     ; preds = %970, %962
  %980 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %981 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %980, i32 0, i32 17
  %982 = load i32, i32* %981, align 8
  %983 = lshr i32 %982, 8
  store i32 %983, i32* %981, align 8
  %984 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %985 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %984, i32 0, i32 16
  %986 = load i32, i32* %985, align 4
  %987 = sub i32 %986, 8
  store i32 %987, i32* %985, align 4
  br label %957

; <label>:988                                     ; preds = %957
  br label %989

; <label>:989                                     ; preds = %988
  br label %990

; <label>:990                                     ; preds = %989
  %991 = load i32, i32* %i18, align 4
  %992 = add i32 %991, -1
  store i32 %992, i32* %i18, align 4
  %993 = load i32, i32* %z, align 4
  %994 = xor i32 %993, 65535
  store i32 %994, i32* %z, align 4
  br label %927

; <label>:995                                     ; preds = %927
  br label %996

; <label>:996                                     ; preds = %995, %801
  br label %997

; <label>:997                                     ; preds = %996, %648
  %998 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %999 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %998, i32 0, i32 11
  %1000 = load i8*, i8** %999, align 8
  %1001 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1002 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1001, i32 0, i32 12
  %1003 = load i8*, i8** %1002, align 8
  %1004 = icmp ult i8* %1000, %1003
  br i1 %1004, label %1005, label %1006

; <label>:1005                                    ; preds = %997
  br label %1008

; <label>:1006                                    ; preds = %997
  call void @__assert_fail(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2228, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.tdefl_flush_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %1008

; <label>:1008                                    ; preds = %1007, %1005
  %1009 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1010 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1009, i32 0, i32 36
  %1011 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %1010, i64 0, i64 0
  %1012 = getelementptr inbounds [288 x i16], [288 x i16]* %1011, i64 0, i64 0
  %1013 = bitcast i16* %1012 to i8*
  call void @llvm.memset.p0i8.i64(i8* %1013, i8 0, i64 576, i32 2, i1 false)
  %1014 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1015 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1014, i32 0, i32 36
  %1016 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %1015, i64 0, i64 1
  %1017 = getelementptr inbounds [288 x i16], [288 x i16]* %1016, i64 0, i64 0
  %1018 = bitcast i16* %1017 to i8*
  call void @llvm.memset.p0i8.i64(i8* %1018, i8 0, i64 64, i32 2, i1 false)
  %1019 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1020 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1019, i32 0, i32 39
  %1021 = getelementptr inbounds [65536 x i8], [65536 x i8]* %1020, i32 0, i32 0
  %1022 = getelementptr inbounds i8, i8* %1021, i64 1
  %1023 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1024 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1023, i32 0, i32 9
  store i8* %1022, i8** %1024, align 8
  %1025 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1026 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1025, i32 0, i32 39
  %1027 = getelementptr inbounds [65536 x i8], [65536 x i8]* %1026, i32 0, i32 0
  %1028 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1029 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1028, i32 0, i32 10
  store i8* %1027, i8** %1029, align 8
  %1030 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1031 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1030, i32 0, i32 13
  store i32 8, i32* %1031, align 8
  %1032 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1033 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1032, i32 0, i32 14
  %1034 = load i32, i32* %1033, align 4
  %1035 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1036 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1035, i32 0, i32 15
  %1037 = load i32, i32* %1036, align 8
  %1038 = add i32 %1037, %1034
  store i32 %1038, i32* %1036, align 8
  %1039 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1040 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1039, i32 0, i32 14
  store i32 0, i32* %1040, align 4
  %1041 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1042 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1041, i32 0, i32 24
  %1043 = load i32, i32* %1042, align 4
  %1044 = add i32 %1043, 1
  store i32 %1044, i32* %1042, align 4
  %1045 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1046 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1045, i32 0, i32 11
  %1047 = load i8*, i8** %1046, align 8
  %1048 = load i8*, i8** %pOutput_buf_start, align 8
  %1049 = ptrtoint i8* %1047 to i64
  %1050 = ptrtoint i8* %1048 to i64
  %1051 = sub i64 %1049, %1050
  %1052 = trunc i64 %1051 to i32
  store i32 %1052, i32* %n, align 4
  %1053 = icmp ne i32 %1052, 0
  br i1 %1053, label %1054, label %1160

; <label>:1054                                    ; preds = %1008
  %1055 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1056 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1055, i32 0, i32 0
  %1057 = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %1056, align 8
  %1058 = icmp ne i32 (i8*, i32, i8*)* %1057, null
  br i1 %1058, label %1059, label %1088

; <label>:1059                                    ; preds = %1054
  %1060 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1061 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1060, i32 0, i32 32
  %1062 = load i8*, i8** %1061, align 8
  %1063 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1064 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1063, i32 0, i32 27
  %1065 = load i8*, i8** %1064, align 8
  %1066 = ptrtoint i8* %1062 to i64
  %1067 = ptrtoint i8* %1065 to i64
  %1068 = sub i64 %1066, %1067
  %1069 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1070 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1069, i32 0, i32 29
  %1071 = load i64*, i64** %1070, align 8
  store i64 %1068, i64* %1071, align 8
  %1072 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1073 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1072, i32 0, i32 0
  %1074 = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %1073, align 8
  %1075 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1076 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1075, i32 0, i32 42
  %1077 = getelementptr inbounds [85196 x i8], [85196 x i8]* %1076, i32 0, i32 0
  %1078 = load i32, i32* %n, align 4
  %1079 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1080 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1079, i32 0, i32 1
  %1081 = load i8*, i8** %1080, align 8
  %1082 = call i32 %1074(i8* %1077, i32 %1078, i8* %1081)
  %1083 = icmp ne i32 %1082, 0
  br i1 %1083, label %1087, label %1084

; <label>:1084                                    ; preds = %1059
  %1085 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1086 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1085, i32 0, i32 26
  store i32 -1, i32* %1086, align 4
  store i32 -1, i32* %1, align 4
  br label %1164

; <label>:1087                                    ; preds = %1059
  br label %1159

; <label>:1088                                    ; preds = %1054
  %1089 = load i8*, i8** %pOutput_buf_start, align 8
  %1090 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1091 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1090, i32 0, i32 42
  %1092 = getelementptr inbounds [85196 x i8], [85196 x i8]* %1091, i32 0, i32 0
  %1093 = icmp eq i8* %1089, %1092
  br i1 %1093, label %1094, label %1151

; <label>:1094                                    ; preds = %1088
  %1095 = load i32, i32* %n, align 4
  %1096 = sext i32 %1095 to i64
  %1097 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1098 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1097, i32 0, i32 30
  %1099 = load i64*, i64** %1098, align 8
  %1100 = load i64, i64* %1099, align 8
  %1101 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1102 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1101, i32 0, i32 34
  %1103 = load i64, i64* %1102, align 8
  %1104 = sub i64 %1100, %1103
  %1105 = icmp ult i64 %1096, %1104
  br i1 %1105, label %1106, label %1109

; <label>:1106                                    ; preds = %1094
  %1107 = load i32, i32* %n, align 4
  %1108 = sext i32 %1107 to i64
  br label %1118

; <label>:1109                                    ; preds = %1094
  %1110 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1111 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1110, i32 0, i32 30
  %1112 = load i64*, i64** %1111, align 8
  %1113 = load i64, i64* %1112, align 8
  %1114 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1115 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1114, i32 0, i32 34
  %1116 = load i64, i64* %1115, align 8
  %1117 = sub i64 %1113, %1116
  br label %1118

; <label>:1118                                    ; preds = %1109, %1106
  %1119 = phi i64 [ %1108, %1106 ], [ %1117, %1109 ]
  %1120 = trunc i64 %1119 to i32
  store i32 %1120, i32* %bytes_to_copy, align 4
  %1121 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1122 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1121, i32 0, i32 28
  %1123 = load i8*, i8** %1122, align 8
  %1124 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1125 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1124, i32 0, i32 34
  %1126 = load i64, i64* %1125, align 8
  %1127 = getelementptr inbounds i8, i8* %1123, i64 %1126
  %1128 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1129 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1128, i32 0, i32 42
  %1130 = getelementptr inbounds [85196 x i8], [85196 x i8]* %1129, i32 0, i32 0
  %1131 = load i32, i32* %bytes_to_copy, align 4
  %1132 = sext i32 %1131 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1127, i8* %1130, i64 %1132, i32 1, i1 false)
  %1133 = load i32, i32* %bytes_to_copy, align 4
  %1134 = sext i32 %1133 to i64
  %1135 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1136 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1135, i32 0, i32 34
  %1137 = load i64, i64* %1136, align 8
  %1138 = add i64 %1137, %1134
  store i64 %1138, i64* %1136, align 8
  %1139 = load i32, i32* %bytes_to_copy, align 4
  %1140 = load i32, i32* %n, align 4
  %1141 = sub nsw i32 %1140, %1139
  store i32 %1141, i32* %n, align 4
  %1142 = icmp ne i32 %1141, 0
  br i1 %1142, label %1143, label %1150

; <label>:1143                                    ; preds = %1118
  %1144 = load i32, i32* %bytes_to_copy, align 4
  %1145 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1146 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1145, i32 0, i32 21
  store i32 %1144, i32* %1146, align 8
  %1147 = load i32, i32* %n, align 4
  %1148 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1149 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1148, i32 0, i32 22
  store i32 %1147, i32* %1149, align 4
  br label %1150

; <label>:1150                                    ; preds = %1143, %1118
  br label %1158

; <label>:1151                                    ; preds = %1088
  %1152 = load i32, i32* %n, align 4
  %1153 = sext i32 %1152 to i64
  %1154 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1155 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1154, i32 0, i32 34
  %1156 = load i64, i64* %1155, align 8
  %1157 = add i64 %1156, %1153
  store i64 %1157, i64* %1155, align 8
  br label %1158

; <label>:1158                                    ; preds = %1151, %1150
  br label %1159

; <label>:1159                                    ; preds = %1158, %1087
  br label %1160

; <label>:1160                                    ; preds = %1159, %1008
  %1161 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %1162 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1161, i32 0, i32 22
  %1163 = load i32, i32* %1162, align 4
  store i32 %1163, i32* %1, align 4
  br label %1164

; <label>:1164                                    ; preds = %1160, %1084
  %1165 = load i32, i32* %1, align 4
  ret i32 %1165
}

; Function Attrs: nounwind uwtable
define i32 @tdefl_compress_buffer(%struct.tdefl_compressor* %d, i8* %pIn_buf, i64 %in_buf_size, i32 %flush) #0 {
  %1 = alloca %struct.tdefl_compressor*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  store %struct.tdefl_compressor* %d, %struct.tdefl_compressor** %1, align 8
  store i8* %pIn_buf, i8** %2, align 8
  store i64 %in_buf_size, i64* %3, align 8
  store i32 %flush, i32* %4, align 4
  %5 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %6 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %5, i32 0, i32 0
  %7 = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %6, align 8
  %8 = icmp ne i32 (i8*, i32, i8*)* %7, null
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %0
  br label %12

; <label>:10                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2694, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_buffer, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %12

; <label>:12                                      ; preds = %11, %9
  %13 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %14 = load i8*, i8** %2, align 8
  %15 = load i32, i32* %4, align 4
  %16 = call i32 @tdefl_compress(%struct.tdefl_compressor* %13, i8* %14, i64* %3, i8* null, i64* null, i32 %15)
  ret i32 %16
}

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #3

; Function Attrs: nounwind uwtable
define i32 @tdefl_get_prev_return_status(%struct.tdefl_compressor* %d) #0 {
  %1 = alloca %struct.tdefl_compressor*, align 8
  store %struct.tdefl_compressor* %d, %struct.tdefl_compressor** %1, align 8
  %2 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %3 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %2, i32 0, i32 26
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define i32 @tdefl_compress_mem_to_output(i8* %pBuf, i64 %buf_len, i32 (i8*, i32, i8*)* %pPut_buf_func, i8* %pPut_buf_user, i32 %flags) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32 (i8*, i32, i8*)*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %pComp = alloca %struct.tdefl_compressor*, align 8
  %succeeded = alloca i32, align 4
  store i8* %pBuf, i8** %2, align 8
  store i64 %buf_len, i64* %3, align 8
  store i32 (i8*, i32, i8*)* %pPut_buf_func, i32 (i8*, i32, i8*)** %4, align 8
  store i8* %pPut_buf_user, i8** %5, align 8
  store i32 %flags, i32* %6, align 4
  %7 = load i64, i64* %3, align 8
  %8 = icmp ne i64 %7, 0
  br i1 %8, label %9, label %12

; <label>:9                                       ; preds = %0
  %10 = load i8*, i8** %2, align 8
  %11 = icmp ne i8* %10, null
  br i1 %11, label %12, label %15

; <label>:12                                      ; preds = %9, %0
  %13 = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %4, align 8
  %14 = icmp ne i32 (i8*, i32, i8*)* %13, null
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %12, %9
  store i32 0, i32* %1, align 4
  br label %44

; <label>:16                                      ; preds = %12
  %17 = call noalias i8* @malloc(i64 319352) #6
  %18 = bitcast i8* %17 to %struct.tdefl_compressor*
  store %struct.tdefl_compressor* %18, %struct.tdefl_compressor** %pComp, align 8
  %19 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %20 = icmp ne %struct.tdefl_compressor* %19, null
  br i1 %20, label %22, label %21

; <label>:21                                      ; preds = %16
  store i32 0, i32* %1, align 4
  br label %44

; <label>:22                                      ; preds = %16
  %23 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %24 = load i32 (i8*, i32, i8*)*, i32 (i8*, i32, i8*)** %4, align 8
  %25 = load i8*, i8** %5, align 8
  %26 = load i32, i32* %6, align 4
  %27 = call i32 @tdefl_init(%struct.tdefl_compressor* %23, i32 (i8*, i32, i8*)* %24, i8* %25, i32 %26)
  %28 = icmp eq i32 %27, 0
  %29 = zext i1 %28 to i32
  store i32 %29, i32* %succeeded, align 4
  %30 = load i32, i32* %succeeded, align 4
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %38

; <label>:32                                      ; preds = %22
  %33 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %34 = load i8*, i8** %2, align 8
  %35 = load i64, i64* %3, align 8
  %36 = call i32 @tdefl_compress_buffer(%struct.tdefl_compressor* %33, i8* %34, i64 %35, i32 4)
  %37 = icmp eq i32 %36, 1
  br label %38

; <label>:38                                      ; preds = %32, %22
  %39 = phi i1 [ false, %22 ], [ %37, %32 ]
  %40 = zext i1 %39 to i32
  store i32 %40, i32* %succeeded, align 4
  %41 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %42 = bitcast %struct.tdefl_compressor* %41 to i8*
  call void @free(i8* %42) #6
  %43 = load i32, i32* %succeeded, align 4
  store i32 %43, i32* %1, align 4
  br label %44

; <label>:44                                      ; preds = %38, %21, %15
  %45 = load i32, i32* %1, align 4
  ret i32 %45
}

; Function Attrs: nounwind uwtable
define i8* @tdefl_compress_mem_to_heap(i8* %pSrc_buf, i64 %src_buf_len, i64* %pOut_len, i32 %flags) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i32, align 4
  %out_buf = alloca %struct.tdefl_output_buffer, align 8
  store i8* %pSrc_buf, i8** %2, align 8
  store i64 %src_buf_len, i64* %3, align 8
  store i64* %pOut_len, i64** %4, align 8
  store i32 %flags, i32* %5, align 4
  %6 = bitcast %struct.tdefl_output_buffer* %out_buf to i8*
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 32, i32 8, i1 false)
  %7 = load i64*, i64** %4, align 8
  %8 = icmp ne i64* %7, null
  br i1 %8, label %10, label %9

; <label>:9                                       ; preds = %0
  store i8* null, i8** %1, align 8
  br label %27

; <label>:10                                      ; preds = %0
  %11 = load i64*, i64** %4, align 8
  store i64 0, i64* %11, align 8
  br label %12

; <label>:12                                      ; preds = %10
  %13 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %out_buf, i32 0, i32 3
  store i32 1, i32* %13, align 8
  %14 = load i8*, i8** %2, align 8
  %15 = load i64, i64* %3, align 8
  %16 = bitcast %struct.tdefl_output_buffer* %out_buf to i8*
  %17 = load i32, i32* %5, align 4
  %18 = call i32 @tdefl_compress_mem_to_output(i8* %14, i64 %15, i32 (i8*, i32, i8*)* @tdefl_output_buffer_putter, i8* %16, i32 %17)
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %21, label %20

; <label>:20                                      ; preds = %12
  store i8* null, i8** %1, align 8
  br label %27

; <label>:21                                      ; preds = %12
  %22 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %out_buf, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = load i64*, i64** %4, align 8
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %out_buf, i32 0, i32 2
  %26 = load i8*, i8** %25, align 8
  store i8* %26, i8** %1, align 8
  br label %27

; <label>:27                                      ; preds = %21, %20, %9
  %28 = load i8*, i8** %1, align 8
  ret i8* %28
}

; Function Attrs: nounwind uwtable
define internal i32 @tdefl_output_buffer_putter(i8* %pBuf, i32 %len, i8* %pUser) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %p = alloca %struct.tdefl_output_buffer*, align 8
  %new_size = alloca i64, align 8
  %new_capacity = alloca i64, align 8
  %pNew_buf = alloca i8*, align 8
  store i8* %pBuf, i8** %2, align 8
  store i32 %len, i32* %3, align 4
  store i8* %pUser, i8** %4, align 8
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast i8* %5 to %struct.tdefl_output_buffer*
  store %struct.tdefl_output_buffer* %6, %struct.tdefl_output_buffer** %p, align 8
  %7 = load %struct.tdefl_output_buffer*, %struct.tdefl_output_buffer** %p, align 8
  %8 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %7, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = load i32, i32* %3, align 4
  %11 = sext i32 %10 to i64
  %12 = add i64 %9, %11
  store i64 %12, i64* %new_size, align 8
  %13 = load i64, i64* %new_size, align 8
  %14 = load %struct.tdefl_output_buffer*, %struct.tdefl_output_buffer** %p, align 8
  %15 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %14, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %13, %16
  br i1 %17, label %18, label %58

; <label>:18                                      ; preds = %0
  %19 = load %struct.tdefl_output_buffer*, %struct.tdefl_output_buffer** %p, align 8
  %20 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %19, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %new_capacity, align 8
  %22 = load %struct.tdefl_output_buffer*, %struct.tdefl_output_buffer** %p, align 8
  %23 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %22, i32 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %27, label %26

; <label>:26                                      ; preds = %18
  store i32 0, i32* %1, align 4
  br label %72

; <label>:27                                      ; preds = %18
  br label %28

; <label>:28                                      ; preds = %38, %27
  %29 = load i64, i64* %new_capacity, align 8
  %30 = shl i64 %29, 1
  %31 = icmp ugt i64 128, %30
  br i1 %31, label %32, label %33

; <label>:32                                      ; preds = %28
  br label %36

; <label>:33                                      ; preds = %28
  %34 = load i64, i64* %new_capacity, align 8
  %35 = shl i64 %34, 1
  br label %36

; <label>:36                                      ; preds = %33, %32
  %37 = phi i64 [ 128, %32 ], [ %35, %33 ]
  store i64 %37, i64* %new_capacity, align 8
  br label %38

; <label>:38                                      ; preds = %36
  %39 = load i64, i64* %new_size, align 8
  %40 = load i64, i64* %new_capacity, align 8
  %41 = icmp ugt i64 %39, %40
  br i1 %41, label %28, label %42

; <label>:42                                      ; preds = %38
  %43 = load %struct.tdefl_output_buffer*, %struct.tdefl_output_buffer** %p, align 8
  %44 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %43, i32 0, i32 2
  %45 = load i8*, i8** %44, align 8
  %46 = load i64, i64* %new_capacity, align 8
  %47 = call i8* @realloc(i8* %45, i64 %46) #6
  store i8* %47, i8** %pNew_buf, align 8
  %48 = load i8*, i8** %pNew_buf, align 8
  %49 = icmp ne i8* %48, null
  br i1 %49, label %51, label %50

; <label>:50                                      ; preds = %42
  store i32 0, i32* %1, align 4
  br label %72

; <label>:51                                      ; preds = %42
  %52 = load i8*, i8** %pNew_buf, align 8
  %53 = load %struct.tdefl_output_buffer*, %struct.tdefl_output_buffer** %p, align 8
  %54 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %53, i32 0, i32 2
  store i8* %52, i8** %54, align 8
  %55 = load i64, i64* %new_capacity, align 8
  %56 = load %struct.tdefl_output_buffer*, %struct.tdefl_output_buffer** %p, align 8
  %57 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %56, i32 0, i32 1
  store i64 %55, i64* %57, align 8
  br label %58

; <label>:58                                      ; preds = %51, %0
  %59 = load %struct.tdefl_output_buffer*, %struct.tdefl_output_buffer** %p, align 8
  %60 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %59, i32 0, i32 2
  %61 = load i8*, i8** %60, align 8
  %62 = load %struct.tdefl_output_buffer*, %struct.tdefl_output_buffer** %p, align 8
  %63 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %62, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds i8, i8* %61, i64 %64
  %66 = load i8*, i8** %2, align 8
  %67 = load i32, i32* %3, align 4
  %68 = sext i32 %67 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 %68, i32 1, i1 false)
  %69 = load i64, i64* %new_size, align 8
  %70 = load %struct.tdefl_output_buffer*, %struct.tdefl_output_buffer** %p, align 8
  %71 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %70, i32 0, i32 0
  store i64 %69, i64* %71, align 8
  store i32 1, i32* %1, align 4
  br label %72

; <label>:72                                      ; preds = %58, %50, %26
  %73 = load i32, i32* %1, align 4
  ret i32 %73
}

; Function Attrs: nounwind uwtable
define i64 @tdefl_compress_mem_to_mem(i8* %pOut_buf, i64 %out_buf_len, i8* %pSrc_buf, i64 %src_buf_len, i32 %flags) #0 {
  %1 = alloca i64, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %out_buf = alloca %struct.tdefl_output_buffer, align 8
  store i8* %pOut_buf, i8** %2, align 8
  store i64 %out_buf_len, i64* %3, align 8
  store i8* %pSrc_buf, i8** %4, align 8
  store i64 %src_buf_len, i64* %5, align 8
  store i32 %flags, i32* %6, align 4
  %7 = bitcast %struct.tdefl_output_buffer* %out_buf to i8*
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 32, i32 8, i1 false)
  %8 = load i8*, i8** %2, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %11, label %10

; <label>:10                                      ; preds = %0
  store i64 0, i64* %1, align 8
  br label %26

; <label>:11                                      ; preds = %0
  %12 = load i8*, i8** %2, align 8
  %13 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %out_buf, i32 0, i32 2
  store i8* %12, i8** %13, align 8
  %14 = load i64, i64* %3, align 8
  %15 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %out_buf, i32 0, i32 1
  store i64 %14, i64* %15, align 8
  %16 = load i8*, i8** %4, align 8
  %17 = load i64, i64* %5, align 8
  %18 = bitcast %struct.tdefl_output_buffer* %out_buf to i8*
  %19 = load i32, i32* %6, align 4
  %20 = call i32 @tdefl_compress_mem_to_output(i8* %16, i64 %17, i32 (i8*, i32, i8*)* @tdefl_output_buffer_putter, i8* %18, i32 %19)
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %23, label %22

; <label>:22                                      ; preds = %11
  store i64 0, i64* %1, align 8
  br label %26

; <label>:23                                      ; preds = %11
  %24 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %out_buf, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %1, align 8
  br label %26

; <label>:26                                      ; preds = %23, %22, %10
  %27 = load i64, i64* %1, align 8
  ret i64 %27
}

; Function Attrs: nounwind uwtable
define i8* @tdefl_write_image_to_png_file_in_memory_ex(i8* %pImage, i32 %w, i32 %h, i32 %num_chans, i64* %pLen_out, i32 %level, i32 %flip) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i64*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %pComp = alloca %struct.tdefl_compressor*, align 8
  %out_buf = alloca %struct.tdefl_output_buffer, align 8
  %i = alloca i32, align 4
  %bpl = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  %c = alloca i32, align 4
  %pnghdr = alloca [41 x i8], align 16
  store i8* %pImage, i8** %2, align 8
  store i32 %w, i32* %3, align 4
  store i32 %h, i32* %4, align 4
  store i32 %num_chans, i32* %5, align 4
  store i64* %pLen_out, i64** %6, align 8
  store i32 %level, i32* %7, align 4
  store i32 %flip, i32* %8, align 4
  %9 = call noalias i8* @malloc(i64 319352) #6
  %10 = bitcast i8* %9 to %struct.tdefl_compressor*
  store %struct.tdefl_compressor* %10, %struct.tdefl_compressor** %pComp, align 8
  %11 = load i32, i32* %3, align 4
  %12 = load i32, i32* %5, align 4
  %13 = mul nsw i32 %11, %12
  store i32 %13, i32* %bpl, align 4
  %14 = load i64*, i64** %6, align 8
  store i64 0, i64* %14, align 8
  %15 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %16 = icmp ne %struct.tdefl_compressor* %15, null
  br i1 %16, label %18, label %17

; <label>:17                                      ; preds = %0
  store i8* null, i8** %1, align 8
  br label %259

; <label>:18                                      ; preds = %0
  %19 = bitcast %struct.tdefl_output_buffer* %out_buf to i8*
  call void @llvm.memset.p0i8.i64(i8* %19, i8 0, i64 32, i32 8, i1 false)
  %20 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %out_buf, i32 0, i32 3
  store i32 1, i32* %20, align 8
  %21 = load i32, i32* %bpl, align 4
  %22 = add nsw i32 1, %21
  %23 = load i32, i32* %4, align 4
  %24 = mul nsw i32 %22, %23
  %25 = icmp sgt i32 64, %24
  br i1 %25, label %26, label %27

; <label>:26                                      ; preds = %18
  br label %32

; <label>:27                                      ; preds = %18
  %28 = load i32, i32* %bpl, align 4
  %29 = add nsw i32 1, %28
  %30 = load i32, i32* %4, align 4
  %31 = mul nsw i32 %29, %30
  br label %32

; <label>:32                                      ; preds = %27, %26
  %33 = phi i32 [ 64, %26 ], [ %31, %27 ]
  %34 = add nsw i32 57, %33
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %out_buf, i32 0, i32 1
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %out_buf, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = call noalias i8* @malloc(i64 %38) #6
  %40 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %out_buf, i32 0, i32 2
  store i8* %39, i8** %40, align 8
  %41 = icmp eq i8* null, %39
  br i1 %41, label %42, label %45

; <label>:42                                      ; preds = %32
  %43 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %44 = bitcast %struct.tdefl_compressor* %43 to i8*
  call void @free(i8* %44) #6
  store i8* null, i8** %1, align 8
  br label %259

; <label>:45                                      ; preds = %32
  store i32 41, i32* %z, align 4
  br label %46

; <label>:46                                      ; preds = %53, %45
  %47 = load i32, i32* %z, align 4
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %56

; <label>:49                                      ; preds = %46
  %50 = bitcast i32* %z to i8*
  %51 = bitcast %struct.tdefl_output_buffer* %out_buf to i8*
  %52 = call i32 @tdefl_output_buffer_putter(i8* %50, i32 1, i8* %51)
  br label %53

; <label>:53                                      ; preds = %49
  %54 = load i32, i32* %z, align 4
  %55 = add nsw i32 %54, -1
  store i32 %55, i32* %z, align 4
  br label %46

; <label>:56                                      ; preds = %46
  %57 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %58 = bitcast %struct.tdefl_output_buffer* %out_buf to i8*
  %59 = load i32, i32* %7, align 4
  %60 = icmp ult i32 10, %59
  br i1 %60, label %61, label %62

; <label>:61                                      ; preds = %56
  br label %64

; <label>:62                                      ; preds = %56
  %63 = load i32, i32* %7, align 4
  br label %64

; <label>:64                                      ; preds = %62, %61
  %65 = phi i32 [ 10, %61 ], [ %63, %62 ]
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds [11 x i32], [11 x i32]* @tdefl_write_image_to_png_file_in_memory_ex.s_tdefl_png_num_probes, i64 0, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = or i32 %68, 4096
  %70 = call i32 @tdefl_init(%struct.tdefl_compressor* %57, i32 (i8*, i32, i8*)* @tdefl_output_buffer_putter, i8* %58, i32 %69)
  store i32 0, i32* %y, align 4
  br label %71

; <label>:71                                      ; preds = %99, %64
  %72 = load i32, i32* %y, align 4
  %73 = load i32, i32* %4, align 4
  %74 = icmp slt i32 %72, %73
  br i1 %74, label %75, label %102

; <label>:75                                      ; preds = %71
  %76 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %77 = bitcast i32* %z to i8*
  %78 = call i32 @tdefl_compress_buffer(%struct.tdefl_compressor* %76, i8* %77, i64 1, i32 0)
  %79 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %80 = load i8*, i8** %2, align 8
  %81 = load i32, i32* %8, align 4
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %88

; <label>:83                                      ; preds = %75
  %84 = load i32, i32* %4, align 4
  %85 = sub nsw i32 %84, 1
  %86 = load i32, i32* %y, align 4
  %87 = sub nsw i32 %85, %86
  br label %90

; <label>:88                                      ; preds = %75
  %89 = load i32, i32* %y, align 4
  br label %90

; <label>:90                                      ; preds = %88, %83
  %91 = phi i32 [ %87, %83 ], [ %89, %88 ]
  %92 = load i32, i32* %bpl, align 4
  %93 = mul nsw i32 %91, %92
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i8, i8* %80, i64 %94
  %96 = load i32, i32* %bpl, align 4
  %97 = sext i32 %96 to i64
  %98 = call i32 @tdefl_compress_buffer(%struct.tdefl_compressor* %79, i8* %95, i64 %97, i32 0)
  br label %99

; <label>:99                                      ; preds = %90
  %100 = load i32, i32* %y, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %y, align 4
  br label %71

; <label>:102                                     ; preds = %71
  %103 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %104 = call i32 @tdefl_compress_buffer(%struct.tdefl_compressor* %103, i8* null, i64 0, i32 4)
  %105 = icmp ne i32 %104, 1
  br i1 %105, label %106, label %111

; <label>:106                                     ; preds = %102
  %107 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %108 = bitcast %struct.tdefl_compressor* %107 to i8*
  call void @free(i8* %108) #6
  %109 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %out_buf, i32 0, i32 2
  %110 = load i8*, i8** %109, align 8
  call void @free(i8* %110) #6
  store i8* null, i8** %1, align 8
  br label %259

; <label>:111                                     ; preds = %102
  %112 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %out_buf, i32 0, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = sub i64 %113, 41
  %115 = load i64*, i64** %6, align 8
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds [41 x i8], [41 x i8]* %pnghdr, i64 0, i64 0
  store i8 -119, i8* %116, align 1
  %117 = getelementptr inbounds i8, i8* %116, i64 1
  store i8 80, i8* %117, align 1
  %118 = getelementptr inbounds i8, i8* %117, i64 1
  store i8 78, i8* %118, align 1
  %119 = getelementptr inbounds i8, i8* %118, i64 1
  store i8 71, i8* %119, align 1
  %120 = getelementptr inbounds i8, i8* %119, i64 1
  store i8 13, i8* %120, align 1
  %121 = getelementptr inbounds i8, i8* %120, i64 1
  store i8 10, i8* %121, align 1
  %122 = getelementptr inbounds i8, i8* %121, i64 1
  store i8 26, i8* %122, align 1
  %123 = getelementptr inbounds i8, i8* %122, i64 1
  store i8 10, i8* %123, align 1
  %124 = getelementptr inbounds i8, i8* %123, i64 1
  store i8 0, i8* %124, align 1
  %125 = getelementptr inbounds i8, i8* %124, i64 1
  store i8 0, i8* %125, align 1
  %126 = getelementptr inbounds i8, i8* %125, i64 1
  store i8 0, i8* %126, align 1
  %127 = getelementptr inbounds i8, i8* %126, i64 1
  store i8 13, i8* %127, align 1
  %128 = getelementptr inbounds i8, i8* %127, i64 1
  store i8 73, i8* %128, align 1
  %129 = getelementptr inbounds i8, i8* %128, i64 1
  store i8 72, i8* %129, align 1
  %130 = getelementptr inbounds i8, i8* %129, i64 1
  store i8 68, i8* %130, align 1
  %131 = getelementptr inbounds i8, i8* %130, i64 1
  store i8 82, i8* %131, align 1
  %132 = getelementptr inbounds i8, i8* %131, i64 1
  store i8 0, i8* %132, align 1
  %133 = getelementptr inbounds i8, i8* %132, i64 1
  store i8 0, i8* %133, align 1
  %134 = getelementptr inbounds i8, i8* %133, i64 1
  %135 = load i32, i32* %3, align 4
  %136 = ashr i32 %135, 8
  %137 = trunc i32 %136 to i8
  store i8 %137, i8* %134, align 1
  %138 = getelementptr inbounds i8, i8* %134, i64 1
  %139 = load i32, i32* %3, align 4
  %140 = trunc i32 %139 to i8
  store i8 %140, i8* %138, align 1
  %141 = getelementptr inbounds i8, i8* %138, i64 1
  store i8 0, i8* %141, align 1
  %142 = getelementptr inbounds i8, i8* %141, i64 1
  store i8 0, i8* %142, align 1
  %143 = getelementptr inbounds i8, i8* %142, i64 1
  %144 = load i32, i32* %4, align 4
  %145 = ashr i32 %144, 8
  %146 = trunc i32 %145 to i8
  store i8 %146, i8* %143, align 1
  %147 = getelementptr inbounds i8, i8* %143, i64 1
  %148 = load i32, i32* %4, align 4
  %149 = trunc i32 %148 to i8
  store i8 %149, i8* %147, align 1
  %150 = getelementptr inbounds i8, i8* %147, i64 1
  store i8 8, i8* %150, align 1
  %151 = getelementptr inbounds i8, i8* %150, i64 1
  %152 = load i32, i32* %5, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [5 x i8], [5 x i8]* @tdefl_write_image_to_png_file_in_memory_ex.chans, i64 0, i64 %153
  %155 = load i8, i8* %154, align 1
  store i8 %155, i8* %151, align 1
  %156 = getelementptr inbounds i8, i8* %151, i64 1
  store i8 0, i8* %156, align 1
  %157 = getelementptr inbounds i8, i8* %156, i64 1
  store i8 0, i8* %157, align 1
  %158 = getelementptr inbounds i8, i8* %157, i64 1
  store i8 0, i8* %158, align 1
  %159 = getelementptr inbounds i8, i8* %158, i64 1
  store i8 0, i8* %159, align 1
  %160 = getelementptr inbounds i8, i8* %159, i64 1
  store i8 0, i8* %160, align 1
  %161 = getelementptr inbounds i8, i8* %160, i64 1
  store i8 0, i8* %161, align 1
  %162 = getelementptr inbounds i8, i8* %161, i64 1
  store i8 0, i8* %162, align 1
  %163 = getelementptr inbounds i8, i8* %162, i64 1
  %164 = load i64*, i64** %6, align 8
  %165 = load i64, i64* %164, align 8
  %166 = lshr i64 %165, 24
  %167 = trunc i64 %166 to i8
  store i8 %167, i8* %163, align 1
  %168 = getelementptr inbounds i8, i8* %163, i64 1
  %169 = load i64*, i64** %6, align 8
  %170 = load i64, i64* %169, align 8
  %171 = lshr i64 %170, 16
  %172 = trunc i64 %171 to i8
  store i8 %172, i8* %168, align 1
  %173 = getelementptr inbounds i8, i8* %168, i64 1
  %174 = load i64*, i64** %6, align 8
  %175 = load i64, i64* %174, align 8
  %176 = lshr i64 %175, 8
  %177 = trunc i64 %176 to i8
  store i8 %177, i8* %173, align 1
  %178 = getelementptr inbounds i8, i8* %173, i64 1
  %179 = load i64*, i64** %6, align 8
  %180 = load i64, i64* %179, align 8
  %181 = trunc i64 %180 to i8
  store i8 %181, i8* %178, align 1
  %182 = getelementptr inbounds i8, i8* %178, i64 1
  store i8 73, i8* %182, align 1
  %183 = getelementptr inbounds i8, i8* %182, i64 1
  store i8 68, i8* %183, align 1
  %184 = getelementptr inbounds i8, i8* %183, i64 1
  store i8 65, i8* %184, align 1
  %185 = getelementptr inbounds i8, i8* %184, i64 1
  store i8 84, i8* %185, align 1
  %186 = getelementptr inbounds [41 x i8], [41 x i8]* %pnghdr, i32 0, i32 0
  %187 = getelementptr inbounds i8, i8* %186, i64 12
  %188 = call i64 @mz_crc32(i64 0, i8* %187, i64 17)
  %189 = trunc i64 %188 to i32
  store i32 %189, i32* %c, align 4
  store i32 0, i32* %i, align 4
  br label %190

; <label>:190                                     ; preds = %202, %111
  %191 = load i32, i32* %i, align 4
  %192 = icmp slt i32 %191, 4
  br i1 %192, label %193, label %207

; <label>:193                                     ; preds = %190
  %194 = load i32, i32* %c, align 4
  %195 = lshr i32 %194, 24
  %196 = trunc i32 %195 to i8
  %197 = load i32, i32* %i, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [41 x i8], [41 x i8]* %pnghdr, i32 0, i32 0
  %200 = getelementptr inbounds i8, i8* %199, i64 29
  %201 = getelementptr inbounds i8, i8* %200, i64 %198
  store i8 %196, i8* %201, align 1
  br label %202

; <label>:202                                     ; preds = %193
  %203 = load i32, i32* %i, align 4
  %204 = add nsw i32 %203, 1
  store i32 %204, i32* %i, align 4
  %205 = load i32, i32* %c, align 4
  %206 = shl i32 %205, 8
  store i32 %206, i32* %c, align 4
  br label %190

; <label>:207                                     ; preds = %190
  %208 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %out_buf, i32 0, i32 2
  %209 = load i8*, i8** %208, align 8
  %210 = getelementptr inbounds [41 x i8], [41 x i8]* %pnghdr, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %209, i8* %210, i64 41, i32 1, i1 false)
  %211 = bitcast %struct.tdefl_output_buffer* %out_buf to i8*
  %212 = call i32 @tdefl_output_buffer_putter(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i32 0, i32 0), i32 16, i8* %211)
  %213 = icmp ne i32 %212, 0
  br i1 %213, label %220, label %214

; <label>:214                                     ; preds = %207
  %215 = load i64*, i64** %6, align 8
  store i64 0, i64* %215, align 8
  %216 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %217 = bitcast %struct.tdefl_compressor* %216 to i8*
  call void @free(i8* %217) #6
  %218 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %out_buf, i32 0, i32 2
  %219 = load i8*, i8** %218, align 8
  call void @free(i8* %219) #6
  store i8* null, i8** %1, align 8
  br label %259

; <label>:220                                     ; preds = %207
  %221 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %out_buf, i32 0, i32 2
  %222 = load i8*, i8** %221, align 8
  %223 = getelementptr inbounds i8, i8* %222, i64 41
  %224 = getelementptr inbounds i8, i8* %223, i64 -4
  %225 = load i64*, i64** %6, align 8
  %226 = load i64, i64* %225, align 8
  %227 = add i64 %226, 4
  %228 = call i64 @mz_crc32(i64 0, i8* %224, i64 %227)
  %229 = trunc i64 %228 to i32
  store i32 %229, i32* %c, align 4
  store i32 0, i32* %i, align 4
  br label %230

; <label>:230                                     ; preds = %246, %220
  %231 = load i32, i32* %i, align 4
  %232 = icmp slt i32 %231, 4
  br i1 %232, label %233, label %251

; <label>:233                                     ; preds = %230
  %234 = load i32, i32* %c, align 4
  %235 = lshr i32 %234, 24
  %236 = trunc i32 %235 to i8
  %237 = load i32, i32* %i, align 4
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %out_buf, i32 0, i32 2
  %240 = load i8*, i8** %239, align 8
  %241 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %out_buf, i32 0, i32 0
  %242 = load i64, i64* %241, align 8
  %243 = getelementptr inbounds i8, i8* %240, i64 %242
  %244 = getelementptr inbounds i8, i8* %243, i64 -16
  %245 = getelementptr inbounds i8, i8* %244, i64 %238
  store i8 %236, i8* %245, align 1
  br label %246

; <label>:246                                     ; preds = %233
  %247 = load i32, i32* %i, align 4
  %248 = add nsw i32 %247, 1
  store i32 %248, i32* %i, align 4
  %249 = load i32, i32* %c, align 4
  %250 = shl i32 %249, 8
  store i32 %250, i32* %c, align 4
  br label %230

; <label>:251                                     ; preds = %230
  %252 = load i64*, i64** %6, align 8
  %253 = load i64, i64* %252, align 8
  %254 = add i64 %253, 57
  store i64 %254, i64* %252, align 8
  %255 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %256 = bitcast %struct.tdefl_compressor* %255 to i8*
  call void @free(i8* %256) #6
  %257 = getelementptr inbounds %struct.tdefl_output_buffer, %struct.tdefl_output_buffer* %out_buf, i32 0, i32 2
  %258 = load i8*, i8** %257, align 8
  store i8* %258, i8** %1, align 8
  br label %259

; <label>:259                                     ; preds = %251, %214, %106, %42, %17
  %260 = load i8*, i8** %1, align 8
  ret i8* %260
}

; Function Attrs: nounwind uwtable
define i8* @tdefl_write_image_to_png_file_in_memory(i8* %pImage, i32 %w, i32 %h, i32 %num_chans, i64* %pLen_out) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i64*, align 8
  store i8* %pImage, i8** %1, align 8
  store i32 %w, i32* %2, align 4
  store i32 %h, i32* %3, align 4
  store i32 %num_chans, i32* %4, align 4
  store i64* %pLen_out, i64** %5, align 8
  %6 = load i8*, i8** %1, align 8
  %7 = load i32, i32* %2, align 4
  %8 = load i32, i32* %3, align 4
  %9 = load i32, i32* %4, align 4
  %10 = load i64*, i64** %5, align 8
  %11 = call i8* @tdefl_write_image_to_png_file_in_memory_ex(i8* %6, i32 %7, i32 %8, i32 %9, i64* %10, i32 6, i32 0)
  ret i8* %11
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_reader_init(%struct.mz_zip_archive_tag* %pZip, i64 %size, i32 %flags) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  store i64 %size, i64* %3, align 8
  store i32 %flags, i32* %4, align 4
  %5 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %6 = icmp ne %struct.mz_zip_archive_tag* %5, null
  br i1 %6, label %7, label %12

; <label>:7                                       ; preds = %0
  %8 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %9 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %8, i32 0, i32 9
  %10 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %9, align 8
  %11 = icmp ne i64 (i8*, i64, i8*, i64)* %10, null
  br i1 %11, label %13, label %12

; <label>:12                                      ; preds = %7, %0
  store i32 0, i32* %1, align 4
  br label %31

; <label>:13                                      ; preds = %7
  %14 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %15 = load i32, i32* %4, align 4
  %16 = call i32 @mz_zip_reader_init_internal(%struct.mz_zip_archive_tag* %14, i32 %15)
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %19, label %18

; <label>:18                                      ; preds = %13
  store i32 0, i32* %1, align 4
  br label %31

; <label>:19                                      ; preds = %13
  %20 = load i64, i64* %3, align 8
  %21 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %22 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %21, i32 0, i32 0
  store i64 %20, i64* %22, align 8
  %23 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %24 = load i32, i32* %4, align 4
  %25 = call i32 @mz_zip_reader_read_central_dir(%struct.mz_zip_archive_tag* %23, i32 %24)
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %30, label %27

; <label>:27                                      ; preds = %19
  %28 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %29 = call i32 @mz_zip_reader_end(%struct.mz_zip_archive_tag* %28)
  store i32 0, i32* %1, align 4
  br label %31

; <label>:30                                      ; preds = %19
  store i32 1, i32* %1, align 4
  br label %31

; <label>:31                                      ; preds = %30, %27, %18, %12
  %32 = load i32, i32* %1, align 4
  ret i32 %32
}

; Function Attrs: nounwind uwtable
define internal i32 @mz_zip_reader_init_internal(%struct.mz_zip_archive_tag* %pZip, i32 %flags) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i32, align 4
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  store i32 %flags, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %6 = icmp ne %struct.mz_zip_archive_tag* %5, null
  br i1 %6, label %7, label %17

; <label>:7                                       ; preds = %0
  %8 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %9 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %8, i32 0, i32 12
  %10 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %9, align 8
  %11 = icmp ne %struct.mz_zip_internal_state_tag* %10, null
  br i1 %11, label %17, label %12

; <label>:12                                      ; preds = %7
  %13 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %14 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %13, i32 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %12, %7, %0
  store i32 0, i32* %1, align 4
  br label %83

; <label>:18                                      ; preds = %12
  %19 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %20 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %19, i32 0, i32 5
  %21 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %20, align 8
  %22 = icmp ne i8* (i8*, i64, i64)* %21, null
  br i1 %22, label %26, label %23

; <label>:23                                      ; preds = %18
  %24 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %25 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %24, i32 0, i32 5
  store i8* (i8*, i64, i64)* @def_alloc_func, i8* (i8*, i64, i64)** %25, align 8
  br label %26

; <label>:26                                      ; preds = %23, %18
  %27 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %28 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %27, i32 0, i32 6
  %29 = load void (i8*, i8*)*, void (i8*, i8*)** %28, align 8
  %30 = icmp ne void (i8*, i8*)* %29, null
  br i1 %30, label %34, label %31

; <label>:31                                      ; preds = %26
  %32 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %33 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %32, i32 0, i32 6
  store void (i8*, i8*)* @def_free_func, void (i8*, i8*)** %33, align 8
  br label %34

; <label>:34                                      ; preds = %31, %26
  %35 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %36 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %35, i32 0, i32 7
  %37 = load i8* (i8*, i8*, i64, i64)*, i8* (i8*, i8*, i64, i64)** %36, align 8
  %38 = icmp ne i8* (i8*, i8*, i64, i64)* %37, null
  br i1 %38, label %42, label %39

; <label>:39                                      ; preds = %34
  %40 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %41 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %40, i32 0, i32 7
  store i8* (i8*, i8*, i64, i64)* @def_realloc_func, i8* (i8*, i8*, i64, i64)** %41, align 8
  br label %42

; <label>:42                                      ; preds = %39, %34
  %43 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %44 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %43, i32 0, i32 3
  store i32 1, i32* %44, align 4
  %45 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %46 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %45, i32 0, i32 0
  store i64 0, i64* %46, align 8
  %47 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %48 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %47, i32 0, i32 1
  store i64 0, i64* %48, align 8
  %49 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %50 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %49, i32 0, i32 2
  store i32 0, i32* %50, align 8
  %51 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %52 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %51, i32 0, i32 5
  %53 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %52, align 8
  %54 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %55 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %54, i32 0, i32 8
  %56 = load i8*, i8** %55, align 8
  %57 = call i8* %53(i8* %56, i64 1, i64 128)
  %58 = bitcast i8* %57 to %struct.mz_zip_internal_state_tag*
  %59 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %60 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %59, i32 0, i32 12
  store %struct.mz_zip_internal_state_tag* %58, %struct.mz_zip_internal_state_tag** %60, align 8
  %61 = icmp eq %struct.mz_zip_internal_state_tag* null, %58
  br i1 %61, label %62, label %63

; <label>:62                                      ; preds = %42
  store i32 0, i32* %1, align 4
  br label %83

; <label>:63                                      ; preds = %42
  %64 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %65 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %64, i32 0, i32 12
  %66 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %65, align 8
  %67 = bitcast %struct.mz_zip_internal_state_tag* %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* %67, i8 0, i64 128, i32 8, i1 false)
  %68 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %69 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %68, i32 0, i32 12
  %70 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %69, align 8
  %71 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %70, i32 0, i32 0
  %72 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %71, i32 0, i32 3
  store i32 1, i32* %72, align 8
  %73 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %74 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %73, i32 0, i32 12
  %75 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %74, align 8
  %76 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %75, i32 0, i32 1
  %77 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %76, i32 0, i32 3
  store i32 4, i32* %77, align 8
  %78 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %79 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %78, i32 0, i32 12
  %80 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %79, align 8
  %81 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %80, i32 0, i32 2
  %82 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %81, i32 0, i32 3
  store i32 4, i32* %82, align 8
  store i32 1, i32* %1, align 4
  br label %83

; <label>:83                                      ; preds = %63, %62, %17
  %84 = load i32, i32* %1, align 4
  ret i32 %84
}

; Function Attrs: nounwind uwtable
define internal i32 @mz_zip_reader_read_central_dir(%struct.mz_zip_archive_tag* %pZip, i32 %flags) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca %struct.mz_zip_array*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.mz_zip_archive_tag*, align 8
  %8 = alloca %struct.mz_zip_array*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.mz_zip_archive_tag*, align 8
  %13 = alloca %struct.mz_zip_array*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct.mz_zip_archive_tag*, align 8
  %18 = alloca i32, align 4
  %cdir_size = alloca i32, align 4
  %num_this_disk = alloca i32, align 4
  %cdir_disk_index = alloca i32, align 4
  %cdir_ofs = alloca i64, align 8
  %cur_file_ofs = alloca i64, align 8
  %p = alloca i8*, align 8
  %buf_u32 = alloca [1024 x i32], align 16
  %pBuf = alloca i8*, align 8
  %sort_central_dir = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %i1 = alloca i32, align 4
  %n2 = alloca i32, align 4
  %total_header_size = alloca i32, align 4
  %comp_size = alloca i32, align 4
  %decomp_size = alloca i32, align 4
  %disk_index = alloca i32, align 4
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %17, align 8
  store i32 %flags, i32* %18, align 4
  %19 = getelementptr inbounds [1024 x i32], [1024 x i32]* %buf_u32, i32 0, i32 0
  %20 = bitcast i32* %19 to i8*
  store i8* %20, i8** %pBuf, align 8
  %21 = load i32, i32* %18, align 4
  %22 = and i32 %21, 2048
  %23 = icmp eq i32 %22, 0
  %24 = zext i1 %23 to i32
  store i32 %24, i32* %sort_central_dir, align 4
  %25 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %26 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %25, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, 22
  br i1 %28, label %29, label %30

; <label>:29                                      ; preds = %0
  store i32 0, i32* %16, align 4
  br label %486

; <label>:30                                      ; preds = %0
  %31 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %32 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %31, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = sub nsw i64 %33, 4096
  %35 = icmp sgt i64 %34, 0
  br i1 %35, label %36, label %41

; <label>:36                                      ; preds = %30
  %37 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %38 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %37, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = sub nsw i64 %39, 4096
  br label %42

; <label>:41                                      ; preds = %30
  br label %42

; <label>:42                                      ; preds = %41, %36
  %43 = phi i64 [ %40, %36 ], [ 0, %41 ]
  store i64 %43, i64* %cur_file_ofs, align 8
  br label %44

; <label>:44                                      ; preds = %122, %42
  %45 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %46 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %45, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = load i64, i64* %cur_file_ofs, align 8
  %49 = sub i64 %47, %48
  %50 = icmp ult i64 4096, %49
  br i1 %50, label %51, label %52

; <label>:51                                      ; preds = %44
  br label %58

; <label>:52                                      ; preds = %44
  %53 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %54 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %53, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = load i64, i64* %cur_file_ofs, align 8
  %57 = sub i64 %55, %56
  br label %58

; <label>:58                                      ; preds = %52, %51
  %59 = phi i64 [ 4096, %51 ], [ %57, %52 ]
  %60 = trunc i64 %59 to i32
  store i32 %60, i32* %n, align 4
  %61 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %62 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %61, i32 0, i32 9
  %63 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %62, align 8
  %64 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %65 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %64, i32 0, i32 11
  %66 = load i8*, i8** %65, align 8
  %67 = load i64, i64* %cur_file_ofs, align 8
  %68 = load i8*, i8** %pBuf, align 8
  %69 = load i32, i32* %n, align 4
  %70 = sext i32 %69 to i64
  %71 = call i64 %63(i8* %66, i64 %67, i8* %68, i64 %70)
  %72 = load i32, i32* %n, align 4
  %73 = zext i32 %72 to i64
  %74 = icmp ne i64 %71, %73
  br i1 %74, label %75, label %76

; <label>:75                                      ; preds = %58
  store i32 0, i32* %16, align 4
  br label %486

; <label>:76                                      ; preds = %58
  %77 = load i32, i32* %n, align 4
  %78 = sub nsw i32 %77, 4
  store i32 %78, i32* %i, align 4
  br label %79

; <label>:79                                      ; preds = %92, %76
  %80 = load i32, i32* %i, align 4
  %81 = icmp sge i32 %80, 0
  br i1 %81, label %82, label %95

; <label>:82                                      ; preds = %79
  %83 = load i8*, i8** %pBuf, align 8
  %84 = load i32, i32* %i, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %83, i64 %85
  %87 = bitcast i8* %86 to i32*
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 101010256
  br i1 %89, label %90, label %91

; <label>:90                                      ; preds = %82
  br label %95

; <label>:91                                      ; preds = %82
  br label %92

; <label>:92                                      ; preds = %91
  %93 = load i32, i32* %i, align 4
  %94 = add nsw i32 %93, -1
  store i32 %94, i32* %i, align 4
  br label %79

; <label>:95                                      ; preds = %90, %79
  %96 = load i32, i32* %i, align 4
  %97 = icmp sge i32 %96, 0
  br i1 %97, label %98, label %103

; <label>:98                                      ; preds = %95
  %99 = load i32, i32* %i, align 4
  %100 = sext i32 %99 to i64
  %101 = load i64, i64* %cur_file_ofs, align 8
  %102 = add nsw i64 %101, %100
  store i64 %102, i64* %cur_file_ofs, align 8
  br label %124

; <label>:103                                     ; preds = %95
  %104 = load i64, i64* %cur_file_ofs, align 8
  %105 = icmp ne i64 %104, 0
  br i1 %105, label %106, label %113

; <label>:106                                     ; preds = %103
  %107 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %108 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %107, i32 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = load i64, i64* %cur_file_ofs, align 8
  %111 = sub i64 %109, %110
  %112 = icmp uge i64 %111, 65557
  br i1 %112, label %113, label %114

; <label>:113                                     ; preds = %106, %103
  store i32 0, i32* %16, align 4
  br label %486

; <label>:114                                     ; preds = %106
  %115 = load i64, i64* %cur_file_ofs, align 8
  %116 = sub i64 %115, 4093
  %117 = icmp ugt i64 %116, 0
  br i1 %117, label %118, label %121

; <label>:118                                     ; preds = %114
  %119 = load i64, i64* %cur_file_ofs, align 8
  %120 = sub i64 %119, 4093
  br label %122

; <label>:121                                     ; preds = %114
  br label %122

; <label>:122                                     ; preds = %121, %118
  %123 = phi i64 [ %120, %118 ], [ 0, %121 ]
  store i64 %123, i64* %cur_file_ofs, align 8
  br label %44

; <label>:124                                     ; preds = %98
  %125 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %126 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %125, i32 0, i32 9
  %127 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %126, align 8
  %128 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %129 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %128, i32 0, i32 11
  %130 = load i8*, i8** %129, align 8
  %131 = load i64, i64* %cur_file_ofs, align 8
  %132 = load i8*, i8** %pBuf, align 8
  %133 = call i64 %127(i8* %130, i64 %131, i8* %132, i64 22)
  %134 = icmp ne i64 %133, 22
  br i1 %134, label %135, label %136

; <label>:135                                     ; preds = %124
  store i32 0, i32* %16, align 4
  br label %486

; <label>:136                                     ; preds = %124
  %137 = load i8*, i8** %pBuf, align 8
  %138 = getelementptr inbounds i8, i8* %137, i64 0
  %139 = bitcast i8* %138 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = icmp ne i32 %140, 101010256
  br i1 %141, label %156, label %142

; <label>:142                                     ; preds = %136
  %143 = load i8*, i8** %pBuf, align 8
  %144 = getelementptr inbounds i8, i8* %143, i64 10
  %145 = bitcast i8* %144 to i16*
  %146 = load i16, i16* %145, align 2
  %147 = zext i16 %146 to i32
  %148 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %149 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %148, i32 0, i32 2
  store i32 %147, i32* %149, align 8
  %150 = load i8*, i8** %pBuf, align 8
  %151 = getelementptr inbounds i8, i8* %150, i64 8
  %152 = bitcast i8* %151 to i16*
  %153 = load i16, i16* %152, align 2
  %154 = zext i16 %153 to i32
  %155 = icmp ne i32 %147, %154
  br i1 %155, label %156, label %157

; <label>:156                                     ; preds = %142, %136
  store i32 0, i32* %16, align 4
  br label %486

; <label>:157                                     ; preds = %142
  %158 = load i8*, i8** %pBuf, align 8
  %159 = getelementptr inbounds i8, i8* %158, i64 4
  %160 = bitcast i8* %159 to i16*
  %161 = load i16, i16* %160, align 2
  %162 = zext i16 %161 to i32
  store i32 %162, i32* %num_this_disk, align 4
  %163 = load i8*, i8** %pBuf, align 8
  %164 = getelementptr inbounds i8, i8* %163, i64 6
  %165 = bitcast i8* %164 to i16*
  %166 = load i16, i16* %165, align 2
  %167 = zext i16 %166 to i32
  store i32 %167, i32* %cdir_disk_index, align 4
  %168 = load i32, i32* %num_this_disk, align 4
  %169 = load i32, i32* %cdir_disk_index, align 4
  %170 = or i32 %168, %169
  %171 = icmp ne i32 %170, 0
  br i1 %171, label %172, label %179

; <label>:172                                     ; preds = %157
  %173 = load i32, i32* %num_this_disk, align 4
  %174 = icmp ne i32 %173, 1
  br i1 %174, label %178, label %175

; <label>:175                                     ; preds = %172
  %176 = load i32, i32* %cdir_disk_index, align 4
  %177 = icmp ne i32 %176, 1
  br i1 %177, label %178, label %179

; <label>:178                                     ; preds = %175, %172
  store i32 0, i32* %16, align 4
  br label %486

; <label>:179                                     ; preds = %175, %157
  %180 = load i8*, i8** %pBuf, align 8
  %181 = getelementptr inbounds i8, i8* %180, i64 12
  %182 = bitcast i8* %181 to i32*
  %183 = load i32, i32* %182, align 4
  store i32 %183, i32* %cdir_size, align 4
  %184 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %185 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %184, i32 0, i32 2
  %186 = load i32, i32* %185, align 8
  %187 = mul i32 %186, 46
  %188 = icmp ult i32 %183, %187
  br i1 %188, label %189, label %190

; <label>:189                                     ; preds = %179
  store i32 0, i32* %16, align 4
  br label %486

; <label>:190                                     ; preds = %179
  %191 = load i8*, i8** %pBuf, align 8
  %192 = getelementptr inbounds i8, i8* %191, i64 16
  %193 = bitcast i8* %192 to i32*
  %194 = load i32, i32* %193, align 4
  %195 = zext i32 %194 to i64
  store i64 %195, i64* %cdir_ofs, align 8
  %196 = load i64, i64* %cdir_ofs, align 8
  %197 = load i32, i32* %cdir_size, align 4
  %198 = zext i32 %197 to i64
  %199 = add i64 %196, %198
  %200 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %201 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %200, i32 0, i32 0
  %202 = load i64, i64* %201, align 8
  %203 = icmp ugt i64 %199, %202
  br i1 %203, label %204, label %205

; <label>:204                                     ; preds = %190
  store i32 0, i32* %16, align 4
  br label %486

; <label>:205                                     ; preds = %190
  %206 = load i64, i64* %cdir_ofs, align 8
  %207 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %208 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %207, i32 0, i32 1
  store i64 %206, i64* %208, align 8
  %209 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %210 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %209, i32 0, i32 2
  %211 = load i32, i32* %210, align 8
  %212 = icmp ne i32 %211, 0
  br i1 %212, label %213, label %480

; <label>:213                                     ; preds = %205
  %214 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %215 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %216 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %215, i32 0, i32 12
  %217 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %216, align 8
  %218 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %217, i32 0, i32 0
  %219 = load i32, i32* %cdir_size, align 4
  %220 = zext i32 %219 to i64
  store %struct.mz_zip_archive_tag* %214, %struct.mz_zip_archive_tag** %12, align 8
  store %struct.mz_zip_array* %218, %struct.mz_zip_array** %13, align 8
  store i64 %220, i64* %14, align 8
  store i32 0, i32* %15, align 4
  %221 = load i64, i64* %14, align 8
  %222 = load %struct.mz_zip_array*, %struct.mz_zip_array** %13, align 8
  %223 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %222, i32 0, i32 2
  %224 = load i64, i64* %223, align 8
  %225 = icmp ugt i64 %221, %224
  br i1 %225, label %226, label %235

; <label>:226                                     ; preds = %213
  %227 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %12, align 8
  %228 = load %struct.mz_zip_array*, %struct.mz_zip_array** %13, align 8
  %229 = load i64, i64* %14, align 8
  %230 = load i32, i32* %15, align 4
  %231 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive_tag* %227, %struct.mz_zip_array* %228, i64 %229, i32 %230) #6
  %232 = icmp ne i32 %231, 0
  br i1 %232, label %234, label %233

; <label>:233                                     ; preds = %226
  store i32 0, i32* %11, align 4
  br label %mz_zip_array_resize.exit

; <label>:234                                     ; preds = %226
  br label %235

; <label>:235                                     ; preds = %234, %213
  %236 = load i64, i64* %14, align 8
  %237 = load %struct.mz_zip_array*, %struct.mz_zip_array** %13, align 8
  %238 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %237, i32 0, i32 1
  store i64 %236, i64* %238, align 8
  store i32 1, i32* %11, align 4
  br label %mz_zip_array_resize.exit

mz_zip_array_resize.exit:                         ; preds = %233, %235
  %239 = load i32, i32* %11, align 4
  %240 = icmp ne i32 %239, 0
  br i1 %240, label %241, label %271

; <label>:241                                     ; preds = %mz_zip_array_resize.exit
  %242 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %243 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %244 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %243, i32 0, i32 12
  %245 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %244, align 8
  %246 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %245, i32 0, i32 1
  %247 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %248 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %247, i32 0, i32 2
  %249 = load i32, i32* %248, align 8
  %250 = zext i32 %249 to i64
  store %struct.mz_zip_archive_tag* %242, %struct.mz_zip_archive_tag** %7, align 8
  store %struct.mz_zip_array* %246, %struct.mz_zip_array** %8, align 8
  store i64 %250, i64* %9, align 8
  store i32 0, i32* %10, align 4
  %251 = load i64, i64* %9, align 8
  %252 = load %struct.mz_zip_array*, %struct.mz_zip_array** %8, align 8
  %253 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %252, i32 0, i32 2
  %254 = load i64, i64* %253, align 8
  %255 = icmp ugt i64 %251, %254
  br i1 %255, label %256, label %265

; <label>:256                                     ; preds = %241
  %257 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %7, align 8
  %258 = load %struct.mz_zip_array*, %struct.mz_zip_array** %8, align 8
  %259 = load i64, i64* %9, align 8
  %260 = load i32, i32* %10, align 4
  %261 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive_tag* %257, %struct.mz_zip_array* %258, i64 %259, i32 %260) #6
  %262 = icmp ne i32 %261, 0
  br i1 %262, label %264, label %263

; <label>:263                                     ; preds = %256
  store i32 0, i32* %6, align 4
  br label %mz_zip_array_resize.exit3

; <label>:264                                     ; preds = %256
  br label %265

; <label>:265                                     ; preds = %264, %241
  %266 = load i64, i64* %9, align 8
  %267 = load %struct.mz_zip_array*, %struct.mz_zip_array** %8, align 8
  %268 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %267, i32 0, i32 1
  store i64 %266, i64* %268, align 8
  store i32 1, i32* %6, align 4
  br label %mz_zip_array_resize.exit3

mz_zip_array_resize.exit3:                        ; preds = %263, %265
  %269 = load i32, i32* %6, align 4
  %270 = icmp ne i32 %269, 0
  br i1 %270, label %272, label %271

; <label>:271                                     ; preds = %mz_zip_array_resize.exit3, %mz_zip_array_resize.exit
  store i32 0, i32* %16, align 4
  br label %486

; <label>:272                                     ; preds = %mz_zip_array_resize.exit3
  %273 = load i32, i32* %sort_central_dir, align 4
  %274 = icmp ne i32 %273, 0
  br i1 %274, label %275, label %307

; <label>:275                                     ; preds = %272
  %276 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %277 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %278 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %277, i32 0, i32 12
  %279 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %278, align 8
  %280 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %279, i32 0, i32 2
  %281 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %282 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %281, i32 0, i32 2
  %283 = load i32, i32* %282, align 8
  %284 = zext i32 %283 to i64
  store %struct.mz_zip_archive_tag* %276, %struct.mz_zip_archive_tag** %2, align 8
  store %struct.mz_zip_array* %280, %struct.mz_zip_array** %3, align 8
  store i64 %284, i64* %4, align 8
  store i32 0, i32* %5, align 4
  %285 = load i64, i64* %4, align 8
  %286 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %287 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %286, i32 0, i32 2
  %288 = load i64, i64* %287, align 8
  %289 = icmp ugt i64 %285, %288
  br i1 %289, label %290, label %299

; <label>:290                                     ; preds = %275
  %291 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %292 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %293 = load i64, i64* %4, align 8
  %294 = load i32, i32* %5, align 4
  %295 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive_tag* %291, %struct.mz_zip_array* %292, i64 %293, i32 %294) #6
  %296 = icmp ne i32 %295, 0
  br i1 %296, label %298, label %297

; <label>:297                                     ; preds = %290
  store i32 0, i32* %1, align 4
  br label %mz_zip_array_resize.exit4

; <label>:298                                     ; preds = %290
  br label %299

; <label>:299                                     ; preds = %298, %275
  %300 = load i64, i64* %4, align 8
  %301 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %302 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %301, i32 0, i32 1
  store i64 %300, i64* %302, align 8
  store i32 1, i32* %1, align 4
  br label %mz_zip_array_resize.exit4

mz_zip_array_resize.exit4:                        ; preds = %297, %299
  %303 = load i32, i32* %1, align 4
  %304 = icmp ne i32 %303, 0
  br i1 %304, label %306, label %305

; <label>:305                                     ; preds = %mz_zip_array_resize.exit4
  store i32 0, i32* %16, align 4
  br label %486

; <label>:306                                     ; preds = %mz_zip_array_resize.exit4
  br label %307

; <label>:307                                     ; preds = %306, %272
  %308 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %309 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %308, i32 0, i32 9
  %310 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %309, align 8
  %311 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %312 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %311, i32 0, i32 11
  %313 = load i8*, i8** %312, align 8
  %314 = load i64, i64* %cdir_ofs, align 8
  %315 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %316 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %315, i32 0, i32 12
  %317 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %316, align 8
  %318 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %317, i32 0, i32 0
  %319 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %318, i32 0, i32 0
  %320 = load i8*, i8** %319, align 8
  %321 = load i32, i32* %cdir_size, align 4
  %322 = zext i32 %321 to i64
  %323 = call i64 %310(i8* %313, i64 %314, i8* %320, i64 %322)
  %324 = load i32, i32* %cdir_size, align 4
  %325 = zext i32 %324 to i64
  %326 = icmp ne i64 %323, %325
  br i1 %326, label %327, label %328

; <label>:327                                     ; preds = %307
  store i32 0, i32* %16, align 4
  br label %486

; <label>:328                                     ; preds = %307
  %329 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %330 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %329, i32 0, i32 12
  %331 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %330, align 8
  %332 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %331, i32 0, i32 0
  %333 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %332, i32 0, i32 0
  %334 = load i8*, i8** %333, align 8
  store i8* %334, i8** %p, align 8
  %335 = load i32, i32* %cdir_size, align 4
  store i32 %335, i32* %n2, align 4
  store i32 0, i32* %i1, align 4
  br label %336

; <label>:336                                     ; preds = %476, %328
  %337 = load i32, i32* %i1, align 4
  %338 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %339 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %338, i32 0, i32 2
  %340 = load i32, i32* %339, align 8
  %341 = icmp ult i32 %337, %340
  br i1 %341, label %342, label %479

; <label>:342                                     ; preds = %336
  %343 = load i32, i32* %n2, align 4
  %344 = icmp ult i32 %343, 46
  br i1 %344, label %350, label %345

; <label>:345                                     ; preds = %342
  %346 = load i8*, i8** %p, align 8
  %347 = bitcast i8* %346 to i32*
  %348 = load i32, i32* %347, align 4
  %349 = icmp ne i32 %348, 33639248
  br i1 %349, label %350, label %351

; <label>:350                                     ; preds = %345, %342
  store i32 0, i32* %16, align 4
  br label %486

; <label>:351                                     ; preds = %345
  %352 = load i8*, i8** %p, align 8
  %353 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %354 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %353, i32 0, i32 12
  %355 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %354, align 8
  %356 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %355, i32 0, i32 0
  %357 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %356, i32 0, i32 0
  %358 = load i8*, i8** %357, align 8
  %359 = ptrtoint i8* %352 to i64
  %360 = ptrtoint i8* %358 to i64
  %361 = sub i64 %359, %360
  %362 = trunc i64 %361 to i32
  %363 = load i32, i32* %i1, align 4
  %364 = zext i32 %363 to i64
  %365 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %366 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %365, i32 0, i32 12
  %367 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %366, align 8
  %368 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %367, i32 0, i32 1
  %369 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %368, i32 0, i32 0
  %370 = load i8*, i8** %369, align 8
  %371 = bitcast i8* %370 to i32*
  %372 = getelementptr inbounds i32, i32* %371, i64 %364
  store i32 %362, i32* %372, align 4
  %373 = load i32, i32* %sort_central_dir, align 4
  %374 = icmp ne i32 %373, 0
  br i1 %374, label %375, label %387

; <label>:375                                     ; preds = %351
  %376 = load i32, i32* %i1, align 4
  %377 = load i32, i32* %i1, align 4
  %378 = zext i32 %377 to i64
  %379 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %380 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %379, i32 0, i32 12
  %381 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %380, align 8
  %382 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %381, i32 0, i32 2
  %383 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %382, i32 0, i32 0
  %384 = load i8*, i8** %383, align 8
  %385 = bitcast i8* %384 to i32*
  %386 = getelementptr inbounds i32, i32* %385, i64 %378
  store i32 %376, i32* %386, align 4
  br label %387

; <label>:387                                     ; preds = %375, %351
  %388 = load i8*, i8** %p, align 8
  %389 = getelementptr inbounds i8, i8* %388, i64 20
  %390 = bitcast i8* %389 to i32*
  %391 = load i32, i32* %390, align 4
  store i32 %391, i32* %comp_size, align 4
  %392 = load i8*, i8** %p, align 8
  %393 = getelementptr inbounds i8, i8* %392, i64 24
  %394 = bitcast i8* %393 to i32*
  %395 = load i32, i32* %394, align 4
  store i32 %395, i32* %decomp_size, align 4
  %396 = load i8*, i8** %p, align 8
  %397 = getelementptr inbounds i8, i8* %396, i64 10
  %398 = bitcast i8* %397 to i32*
  %399 = load i32, i32* %398, align 4
  %400 = icmp ne i32 %399, 0
  br i1 %400, label %405, label %401

; <label>:401                                     ; preds = %387
  %402 = load i32, i32* %decomp_size, align 4
  %403 = load i32, i32* %comp_size, align 4
  %404 = icmp ne i32 %402, %403
  br i1 %404, label %417, label %405

; <label>:405                                     ; preds = %401, %387
  %406 = load i32, i32* %decomp_size, align 4
  %407 = icmp ne i32 %406, 0
  br i1 %407, label %408, label %411

; <label>:408                                     ; preds = %405
  %409 = load i32, i32* %comp_size, align 4
  %410 = icmp ne i32 %409, 0
  br i1 %410, label %411, label %417

; <label>:411                                     ; preds = %408, %405
  %412 = load i32, i32* %decomp_size, align 4
  %413 = icmp eq i32 %412, -1
  br i1 %413, label %417, label %414

; <label>:414                                     ; preds = %411
  %415 = load i32, i32* %comp_size, align 4
  %416 = icmp eq i32 %415, -1
  br i1 %416, label %417, label %418

; <label>:417                                     ; preds = %414, %411, %408, %401
  store i32 0, i32* %16, align 4
  br label %486

; <label>:418                                     ; preds = %414
  %419 = load i8*, i8** %p, align 8
  %420 = getelementptr inbounds i8, i8* %419, i64 34
  %421 = bitcast i8* %420 to i16*
  %422 = load i16, i16* %421, align 2
  %423 = zext i16 %422 to i32
  store i32 %423, i32* %disk_index, align 4
  %424 = load i32, i32* %disk_index, align 4
  %425 = load i32, i32* %num_this_disk, align 4
  %426 = icmp ne i32 %424, %425
  br i1 %426, label %427, label %431

; <label>:427                                     ; preds = %418
  %428 = load i32, i32* %disk_index, align 4
  %429 = icmp ne i32 %428, 1
  br i1 %429, label %430, label %431

; <label>:430                                     ; preds = %427
  store i32 0, i32* %16, align 4
  br label %486

; <label>:431                                     ; preds = %427, %418
  %432 = load i8*, i8** %p, align 8
  %433 = getelementptr inbounds i8, i8* %432, i64 42
  %434 = bitcast i8* %433 to i32*
  %435 = load i32, i32* %434, align 4
  %436 = zext i32 %435 to i64
  %437 = add i64 %436, 30
  %438 = load i32, i32* %comp_size, align 4
  %439 = zext i32 %438 to i64
  %440 = add i64 %437, %439
  %441 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %442 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %441, i32 0, i32 0
  %443 = load i64, i64* %442, align 8
  %444 = icmp ugt i64 %440, %443
  br i1 %444, label %445, label %446

; <label>:445                                     ; preds = %431
  store i32 0, i32* %16, align 4
  br label %486

; <label>:446                                     ; preds = %431
  %447 = load i8*, i8** %p, align 8
  %448 = getelementptr inbounds i8, i8* %447, i64 28
  %449 = bitcast i8* %448 to i16*
  %450 = load i16, i16* %449, align 2
  %451 = zext i16 %450 to i32
  %452 = add nsw i32 46, %451
  %453 = load i8*, i8** %p, align 8
  %454 = getelementptr inbounds i8, i8* %453, i64 30
  %455 = bitcast i8* %454 to i16*
  %456 = load i16, i16* %455, align 2
  %457 = zext i16 %456 to i32
  %458 = add nsw i32 %452, %457
  %459 = load i8*, i8** %p, align 8
  %460 = getelementptr inbounds i8, i8* %459, i64 32
  %461 = bitcast i8* %460 to i16*
  %462 = load i16, i16* %461, align 2
  %463 = zext i16 %462 to i32
  %464 = add nsw i32 %458, %463
  store i32 %464, i32* %total_header_size, align 4
  %465 = load i32, i32* %n2, align 4
  %466 = icmp ugt i32 %464, %465
  br i1 %466, label %467, label %468

; <label>:467                                     ; preds = %446
  store i32 0, i32* %16, align 4
  br label %486

; <label>:468                                     ; preds = %446
  %469 = load i32, i32* %total_header_size, align 4
  %470 = load i32, i32* %n2, align 4
  %471 = sub i32 %470, %469
  store i32 %471, i32* %n2, align 4
  %472 = load i32, i32* %total_header_size, align 4
  %473 = load i8*, i8** %p, align 8
  %474 = zext i32 %472 to i64
  %475 = getelementptr inbounds i8, i8* %473, i64 %474
  store i8* %475, i8** %p, align 8
  br label %476

; <label>:476                                     ; preds = %468
  %477 = load i32, i32* %i1, align 4
  %478 = add i32 %477, 1
  store i32 %478, i32* %i1, align 4
  br label %336

; <label>:479                                     ; preds = %336
  br label %480

; <label>:480                                     ; preds = %479, %205
  %481 = load i32, i32* %sort_central_dir, align 4
  %482 = icmp ne i32 %481, 0
  br i1 %482, label %483, label %485

; <label>:483                                     ; preds = %480
  %484 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  call void @mz_zip_reader_sort_central_dir_offsets_by_filename(%struct.mz_zip_archive_tag* %484)
  br label %485

; <label>:485                                     ; preds = %483, %480
  store i32 1, i32* %16, align 4
  br label %486

; <label>:486                                     ; preds = %485, %467, %445, %430, %417, %350, %327, %305, %271, %204, %189, %178, %156, %135, %113, %75, %29
  %487 = load i32, i32* %16, align 4
  ret i32 %487
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_reader_end(%struct.mz_zip_archive_tag* %pZip) #0 {
  %1 = alloca %struct.mz_zip_archive_tag*, align 8
  %2 = alloca %struct.mz_zip_array*, align 8
  %3 = alloca %struct.mz_zip_archive_tag*, align 8
  %4 = alloca %struct.mz_zip_array*, align 8
  %5 = alloca %struct.mz_zip_archive_tag*, align 8
  %6 = alloca %struct.mz_zip_array*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.mz_zip_archive_tag*, align 8
  %pState = alloca %struct.mz_zip_internal_state_tag*, align 8
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %8, align 8
  %9 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %10 = icmp ne %struct.mz_zip_archive_tag* %9, null
  br i1 %10, label %11, label %31

; <label>:11                                      ; preds = %0
  %12 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %13 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %12, i32 0, i32 12
  %14 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %15 = icmp ne %struct.mz_zip_internal_state_tag* %14, null
  br i1 %15, label %16, label %31

; <label>:16                                      ; preds = %11
  %17 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %18 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %17, i32 0, i32 5
  %19 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %18, align 8
  %20 = icmp ne i8* (i8*, i64, i64)* %19, null
  br i1 %20, label %21, label %31

; <label>:21                                      ; preds = %16
  %22 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %23 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %22, i32 0, i32 6
  %24 = load void (i8*, i8*)*, void (i8*, i8*)** %23, align 8
  %25 = icmp ne void (i8*, i8*)* %24, null
  br i1 %25, label %26, label %31

; <label>:26                                      ; preds = %21
  %27 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %28 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %27, i32 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = icmp ne i32 %29, 1
  br i1 %30, label %31, label %32

; <label>:31                                      ; preds = %26, %21, %16, %11, %0
  store i32 0, i32* %7, align 4
  br label %108

; <label>:32                                      ; preds = %26
  %33 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %34 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %33, i32 0, i32 12
  %35 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %34, align 8
  %36 = icmp ne %struct.mz_zip_internal_state_tag* %35, null
  br i1 %36, label %37, label %105

; <label>:37                                      ; preds = %32
  %38 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %39 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %38, i32 0, i32 12
  %40 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %39, align 8
  store %struct.mz_zip_internal_state_tag* %40, %struct.mz_zip_internal_state_tag** %pState, align 8
  %41 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %42 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %41, i32 0, i32 12
  store %struct.mz_zip_internal_state_tag* null, %struct.mz_zip_internal_state_tag** %42, align 8
  %43 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %44 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %45 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %44, i32 0, i32 0
  store %struct.mz_zip_archive_tag* %43, %struct.mz_zip_archive_tag** %5, align 8
  store %struct.mz_zip_array* %45, %struct.mz_zip_array** %6, align 8
  %46 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %5, align 8
  %47 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %46, i32 0, i32 6
  %48 = load void (i8*, i8*)*, void (i8*, i8*)** %47, align 8
  %49 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %5, align 8
  %50 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %49, i32 0, i32 8
  %51 = load i8*, i8** %50, align 8
  %52 = load %struct.mz_zip_array*, %struct.mz_zip_array** %6, align 8
  %53 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %52, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void %48(i8* %51, i8* %54) #6
  %55 = load %struct.mz_zip_array*, %struct.mz_zip_array** %6, align 8
  %56 = bitcast %struct.mz_zip_array* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* %56, i8 0, i64 32, i32 8, i1 false) #6
  %57 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %58 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %59 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %58, i32 0, i32 1
  store %struct.mz_zip_archive_tag* %57, %struct.mz_zip_archive_tag** %3, align 8
  store %struct.mz_zip_array* %59, %struct.mz_zip_array** %4, align 8
  %60 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %3, align 8
  %61 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %60, i32 0, i32 6
  %62 = load void (i8*, i8*)*, void (i8*, i8*)** %61, align 8
  %63 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %3, align 8
  %64 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %63, i32 0, i32 8
  %65 = load i8*, i8** %64, align 8
  %66 = load %struct.mz_zip_array*, %struct.mz_zip_array** %4, align 8
  %67 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %66, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void %62(i8* %65, i8* %68) #6
  %69 = load %struct.mz_zip_array*, %struct.mz_zip_array** %4, align 8
  %70 = bitcast %struct.mz_zip_array* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* %70, i8 0, i64 32, i32 8, i1 false) #6
  %71 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %72 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %73 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %72, i32 0, i32 2
  store %struct.mz_zip_archive_tag* %71, %struct.mz_zip_archive_tag** %1, align 8
  store %struct.mz_zip_array* %73, %struct.mz_zip_array** %2, align 8
  %74 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %1, align 8
  %75 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %74, i32 0, i32 6
  %76 = load void (i8*, i8*)*, void (i8*, i8*)** %75, align 8
  %77 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %1, align 8
  %78 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %77, i32 0, i32 8
  %79 = load i8*, i8** %78, align 8
  %80 = load %struct.mz_zip_array*, %struct.mz_zip_array** %2, align 8
  %81 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %80, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  call void %76(i8* %79, i8* %82) #6
  %83 = load %struct.mz_zip_array*, %struct.mz_zip_array** %2, align 8
  %84 = bitcast %struct.mz_zip_array* %83 to i8*
  call void @llvm.memset.p0i8.i64(i8* %84, i8 0, i64 32, i32 8, i1 false) #6
  %85 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %86 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %85, i32 0, i32 3
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** %86, align 8
  %88 = icmp ne %struct._IO_FILE* %87, null
  br i1 %88, label %89, label %96

; <label>:89                                      ; preds = %37
  %90 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %91 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %90, i32 0, i32 3
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** %91, align 8
  %93 = call i32 @fclose(%struct._IO_FILE* %92)
  %94 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %95 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %94, i32 0, i32 3
  store %struct._IO_FILE* null, %struct._IO_FILE** %95, align 8
  br label %96

; <label>:96                                      ; preds = %89, %37
  %97 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %98 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %97, i32 0, i32 6
  %99 = load void (i8*, i8*)*, void (i8*, i8*)** %98, align 8
  %100 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %101 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %100, i32 0, i32 8
  %102 = load i8*, i8** %101, align 8
  %103 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %104 = bitcast %struct.mz_zip_internal_state_tag* %103 to i8*
  call void %99(i8* %102, i8* %104)
  br label %105

; <label>:105                                     ; preds = %96, %32
  %106 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %107 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %106, i32 0, i32 3
  store i32 0, i32* %107, align 4
  store i32 1, i32* %7, align 4
  br label %108

; <label>:108                                     ; preds = %105, %31
  %109 = load i32, i32* %7, align 4
  ret i32 %109
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_reader_init_mem(%struct.mz_zip_archive_tag* %pZip, i8* %pMem, i64 %size, i32 %flags) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  store i8* %pMem, i8** %3, align 8
  store i64 %size, i64* %4, align 8
  store i32 %flags, i32* %5, align 4
  %6 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %7 = load i32, i32* %5, align 4
  %8 = call i32 @mz_zip_reader_init_internal(%struct.mz_zip_archive_tag* %6, i32 %7)
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %11, label %10

; <label>:10                                      ; preds = %0
  store i32 0, i32* %1, align 4
  br label %39

; <label>:11                                      ; preds = %0
  %12 = load i64, i64* %4, align 8
  %13 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %14 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %13, i32 0, i32 0
  store i64 %12, i64* %14, align 8
  %15 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %16 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %15, i32 0, i32 9
  store i64 (i8*, i64, i8*, i64)* @mz_zip_mem_read_func, i64 (i8*, i64, i8*, i64)** %16, align 8
  %17 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %18 = bitcast %struct.mz_zip_archive_tag* %17 to i8*
  %19 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %20 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %19, i32 0, i32 11
  store i8* %18, i8** %20, align 8
  %21 = load i8*, i8** %3, align 8
  %22 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %23 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %22, i32 0, i32 12
  %24 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %23, align 8
  %25 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %24, i32 0, i32 4
  store i8* %21, i8** %25, align 8
  %26 = load i64, i64* %4, align 8
  %27 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %28 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %27, i32 0, i32 12
  %29 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %28, align 8
  %30 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %29, i32 0, i32 5
  store i64 %26, i64* %30, align 8
  %31 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %32 = load i32, i32* %5, align 4
  %33 = call i32 @mz_zip_reader_read_central_dir(%struct.mz_zip_archive_tag* %31, i32 %32)
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %38, label %35

; <label>:35                                      ; preds = %11
  %36 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %37 = call i32 @mz_zip_reader_end(%struct.mz_zip_archive_tag* %36)
  store i32 0, i32* %1, align 4
  br label %39

; <label>:38                                      ; preds = %11
  store i32 1, i32* %1, align 4
  br label %39

; <label>:39                                      ; preds = %38, %35, %10
  %40 = load i32, i32* %1, align 4
  ret i32 %40
}

; Function Attrs: nounwind uwtable
define internal i64 @mz_zip_mem_read_func(i8* %pOpaque, i64 %file_ofs, i8* %pBuf, i64 %n) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %pZip = alloca %struct.mz_zip_archive_tag*, align 8
  %s = alloca i64, align 8
  store i8* %pOpaque, i8** %1, align 8
  store i64 %file_ofs, i64* %2, align 8
  store i8* %pBuf, i8** %3, align 8
  store i64 %n, i64* %4, align 8
  %5 = load i8*, i8** %1, align 8
  %6 = bitcast i8* %5 to %struct.mz_zip_archive_tag*
  store %struct.mz_zip_archive_tag* %6, %struct.mz_zip_archive_tag** %pZip, align 8
  %7 = load i64, i64* %2, align 8
  %8 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %pZip, align 8
  %9 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %8, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp uge i64 %7, %10
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %0
  br label %31

; <label>:13                                      ; preds = %0
  %14 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %pZip, align 8
  %15 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %14, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = load i64, i64* %2, align 8
  %18 = sub i64 %16, %17
  %19 = load i64, i64* %4, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %21, label %27

; <label>:21                                      ; preds = %13
  %22 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %pZip, align 8
  %23 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %22, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = load i64, i64* %2, align 8
  %26 = sub i64 %24, %25
  br label %29

; <label>:27                                      ; preds = %13
  %28 = load i64, i64* %4, align 8
  br label %29

; <label>:29                                      ; preds = %27, %21
  %30 = phi i64 [ %26, %21 ], [ %28, %27 ]
  br label %31

; <label>:31                                      ; preds = %29, %12
  %32 = phi i64 [ 0, %12 ], [ %30, %29 ]
  store i64 %32, i64* %s, align 8
  %33 = load i8*, i8** %3, align 8
  %34 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %pZip, align 8
  %35 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %34, i32 0, i32 12
  %36 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %35, align 8
  %37 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %36, i32 0, i32 4
  %38 = load i8*, i8** %37, align 8
  %39 = load i64, i64* %2, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  %41 = load i64, i64* %s, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %40, i64 %41, i32 1, i1 false)
  %42 = load i64, i64* %s, align 8
  ret i64 %42
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_reader_init_file(%struct.mz_zip_archive_tag* %pZip, i8* %pFilename, i32 %flags) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %file_size = alloca i64, align 8
  %pFile = alloca %struct._IO_FILE*, align 8
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  store i8* %pFilename, i8** %3, align 8
  store i32 %flags, i32* %4, align 4
  %5 = load i8*, i8** %3, align 8
  %6 = call %struct._IO_FILE* @fopen(i8* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i32 0, i32 0))
  store %struct._IO_FILE* %6, %struct._IO_FILE** %pFile, align 8
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %pFile, align 8
  %8 = icmp ne %struct._IO_FILE* %7, null
  br i1 %8, label %10, label %9

; <label>:9                                       ; preds = %0
  store i32 0, i32* %1, align 4
  br label %50

; <label>:10                                      ; preds = %0
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %pFile, align 8
  %12 = call i32 @fseeko(%struct._IO_FILE* %11, i64 0, i32 2)
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %17

; <label>:14                                      ; preds = %10
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %pFile, align 8
  %16 = call i32 @fclose(%struct._IO_FILE* %15)
  store i32 0, i32* %1, align 4
  br label %50

; <label>:17                                      ; preds = %10
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %pFile, align 8
  %19 = call i64 @ftello(%struct._IO_FILE* %18)
  store i64 %19, i64* %file_size, align 8
  %20 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %21 = load i32, i32* %4, align 4
  %22 = call i32 @mz_zip_reader_init_internal(%struct.mz_zip_archive_tag* %20, i32 %21)
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %27, label %24

; <label>:24                                      ; preds = %17
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %pFile, align 8
  %26 = call i32 @fclose(%struct._IO_FILE* %25)
  store i32 0, i32* %1, align 4
  br label %50

; <label>:27                                      ; preds = %17
  %28 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %29 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %28, i32 0, i32 9
  store i64 (i8*, i64, i8*, i64)* @mz_zip_file_read_func, i64 (i8*, i64, i8*, i64)** %29, align 8
  %30 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %31 = bitcast %struct.mz_zip_archive_tag* %30 to i8*
  %32 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %33 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %32, i32 0, i32 11
  store i8* %31, i8** %33, align 8
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %pFile, align 8
  %35 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %36 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %35, i32 0, i32 12
  %37 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %36, align 8
  %38 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %37, i32 0, i32 3
  store %struct._IO_FILE* %34, %struct._IO_FILE** %38, align 8
  %39 = load i64, i64* %file_size, align 8
  %40 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %41 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %40, i32 0, i32 0
  store i64 %39, i64* %41, align 8
  %42 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %43 = load i32, i32* %4, align 4
  %44 = call i32 @mz_zip_reader_read_central_dir(%struct.mz_zip_archive_tag* %42, i32 %43)
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %49, label %46

; <label>:46                                      ; preds = %27
  %47 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %48 = call i32 @mz_zip_reader_end(%struct.mz_zip_archive_tag* %47)
  store i32 0, i32* %1, align 4
  br label %50

; <label>:49                                      ; preds = %27
  store i32 1, i32* %1, align 4
  br label %50

; <label>:50                                      ; preds = %49, %46, %24, %14, %9
  %51 = load i32, i32* %1, align 4
  ret i32 %51
}

declare %struct._IO_FILE* @fopen(i8*, i8*) #4

declare i32 @fseeko(%struct._IO_FILE*, i64, i32) #4

declare i32 @fclose(%struct._IO_FILE*) #4

declare i64 @ftello(%struct._IO_FILE*) #4

; Function Attrs: nounwind uwtable
define internal i64 @mz_zip_file_read_func(i8* %pOpaque, i64 %file_ofs, i8* %pBuf, i64 %n) #0 {
  %1 = alloca i64, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %pZip = alloca %struct.mz_zip_archive_tag*, align 8
  %cur_ofs = alloca i64, align 8
  store i8* %pOpaque, i8** %2, align 8
  store i64 %file_ofs, i64* %3, align 8
  store i8* %pBuf, i8** %4, align 8
  store i64 %n, i64* %5, align 8
  %6 = load i8*, i8** %2, align 8
  %7 = bitcast i8* %6 to %struct.mz_zip_archive_tag*
  store %struct.mz_zip_archive_tag* %7, %struct.mz_zip_archive_tag** %pZip, align 8
  %8 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %pZip, align 8
  %9 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %8, i32 0, i32 12
  %10 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %9, align 8
  %11 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %10, i32 0, i32 3
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %13 = call i64 @ftello(%struct._IO_FILE* %12)
  store i64 %13, i64* %cur_ofs, align 8
  %14 = load i64, i64* %3, align 8
  %15 = icmp slt i64 %14, 0
  br i1 %15, label %29, label %16

; <label>:16                                      ; preds = %0
  %17 = load i64, i64* %cur_ofs, align 8
  %18 = load i64, i64* %3, align 8
  %19 = icmp ne i64 %17, %18
  br i1 %19, label %20, label %30

; <label>:20                                      ; preds = %16
  %21 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %pZip, align 8
  %22 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %21, i32 0, i32 12
  %23 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %22, align 8
  %24 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %23, i32 0, i32 3
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %26 = load i64, i64* %3, align 8
  %27 = call i32 @fseeko(%struct._IO_FILE* %25, i64 %26, i32 0)
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %30

; <label>:29                                      ; preds = %20, %0
  store i64 0, i64* %1, align 8
  br label %39

; <label>:30                                      ; preds = %20, %16
  %31 = load i8*, i8** %4, align 8
  %32 = load i64, i64* %5, align 8
  %33 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %pZip, align 8
  %34 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %33, i32 0, i32 12
  %35 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %34, align 8
  %36 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %35, i32 0, i32 3
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %38 = call i64 @fread(i8* %31, i64 1, i64 %32, %struct._IO_FILE* %37)
  store i64 %38, i64* %1, align 8
  br label %39

; <label>:39                                      ; preds = %30, %29
  %40 = load i64, i64* %1, align 8
  ret i64 %40
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_reader_get_num_files(%struct.mz_zip_archive_tag* %pZip) #0 {
  %1 = alloca %struct.mz_zip_archive_tag*, align 8
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %1, align 8
  %2 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %1, align 8
  %3 = icmp ne %struct.mz_zip_archive_tag* %2, null
  br i1 %3, label %4, label %8

; <label>:4                                       ; preds = %0
  %5 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %1, align 8
  %6 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %5, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  br label %9

; <label>:8                                       ; preds = %0
  br label %9

; <label>:9                                       ; preds = %8, %4
  %10 = phi i32 [ %7, %4 ], [ 0, %8 ]
  ret i32 %10
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_reader_is_file_encrypted(%struct.mz_zip_archive_tag* %pZip, i32 %file_index) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.mz_zip_archive_tag*, align 8
  %6 = alloca i32, align 4
  %m_bit_flag = alloca i32, align 4
  %p = alloca i8*, align 8
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %5, align 8
  store i32 %file_index, i32* %6, align 4
  %7 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %5, align 8
  %8 = load i32, i32* %6, align 4
  store %struct.mz_zip_archive_tag* %7, %struct.mz_zip_archive_tag** %2, align 8
  store i32 %8, i32* %3, align 4
  %9 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %10 = icmp ne %struct.mz_zip_archive_tag* %9, null
  br i1 %10, label %11, label %27

; <label>:11                                      ; preds = %0
  %12 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %13 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %12, i32 0, i32 12
  %14 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %15 = icmp ne %struct.mz_zip_internal_state_tag* %14, null
  br i1 %15, label %16, label %27

; <label>:16                                      ; preds = %11
  %17 = load i32, i32* %3, align 4
  %18 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %19 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = icmp uge i32 %17, %20
  br i1 %21, label %27, label %22

; <label>:22                                      ; preds = %16
  %23 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %24 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %23, i32 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = icmp ne i32 %25, 1
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %22, %16, %11, %0
  store i8* null, i8** %1, align 8
  br label %mz_zip_reader_get_cdh.exit

; <label>:28                                      ; preds = %22
  %29 = load i32, i32* %3, align 4
  %30 = zext i32 %29 to i64
  %31 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %32 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %31, i32 0, i32 12
  %33 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %32, align 8
  %34 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %33, i32 0, i32 1
  %35 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %34, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast i8* %36 to i32*
  %38 = getelementptr inbounds i32, i32* %37, i64 %30
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  %41 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %42 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %41, i32 0, i32 12
  %43 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %42, align 8
  %44 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %43, i32 0, i32 0
  %45 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %44, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 %40
  store i8* %47, i8** %1, align 8
  br label %mz_zip_reader_get_cdh.exit

mz_zip_reader_get_cdh.exit:                       ; preds = %27, %28
  %48 = load i8*, i8** %1, align 8
  store i8* %48, i8** %p, align 8
  %49 = load i8*, i8** %p, align 8
  %50 = icmp ne i8* %49, null
  br i1 %50, label %52, label %51

; <label>:51                                      ; preds = %mz_zip_reader_get_cdh.exit
  store i32 0, i32* %4, align 4
  br label %60

; <label>:52                                      ; preds = %mz_zip_reader_get_cdh.exit
  %53 = load i8*, i8** %p, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 8
  %55 = bitcast i8* %54 to i16*
  %56 = load i16, i16* %55, align 2
  %57 = zext i16 %56 to i32
  store i32 %57, i32* %m_bit_flag, align 4
  %58 = load i32, i32* %m_bit_flag, align 4
  %59 = and i32 %58, 1
  store i32 %59, i32* %4, align 4
  br label %60

; <label>:60                                      ; preds = %52, %51
  %61 = load i32, i32* %4, align 4
  ret i32 %61
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_reader_is_file_a_directory(%struct.mz_zip_archive_tag* %pZip, i32 %file_index) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.mz_zip_archive_tag*, align 8
  %6 = alloca i32, align 4
  %filename_len = alloca i32, align 4
  %external_attr = alloca i32, align 4
  %p = alloca i8*, align 8
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %5, align 8
  store i32 %file_index, i32* %6, align 4
  %7 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %5, align 8
  %8 = load i32, i32* %6, align 4
  store %struct.mz_zip_archive_tag* %7, %struct.mz_zip_archive_tag** %2, align 8
  store i32 %8, i32* %3, align 4
  %9 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %10 = icmp ne %struct.mz_zip_archive_tag* %9, null
  br i1 %10, label %11, label %27

; <label>:11                                      ; preds = %0
  %12 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %13 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %12, i32 0, i32 12
  %14 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %15 = icmp ne %struct.mz_zip_internal_state_tag* %14, null
  br i1 %15, label %16, label %27

; <label>:16                                      ; preds = %11
  %17 = load i32, i32* %3, align 4
  %18 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %19 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = icmp uge i32 %17, %20
  br i1 %21, label %27, label %22

; <label>:22                                      ; preds = %16
  %23 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %24 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %23, i32 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = icmp ne i32 %25, 1
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %22, %16, %11, %0
  store i8* null, i8** %1, align 8
  br label %mz_zip_reader_get_cdh.exit

; <label>:28                                      ; preds = %22
  %29 = load i32, i32* %3, align 4
  %30 = zext i32 %29 to i64
  %31 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %32 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %31, i32 0, i32 12
  %33 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %32, align 8
  %34 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %33, i32 0, i32 1
  %35 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %34, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast i8* %36 to i32*
  %38 = getelementptr inbounds i32, i32* %37, i64 %30
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  %41 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %42 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %41, i32 0, i32 12
  %43 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %42, align 8
  %44 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %43, i32 0, i32 0
  %45 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %44, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 %40
  store i8* %47, i8** %1, align 8
  br label %mz_zip_reader_get_cdh.exit

mz_zip_reader_get_cdh.exit:                       ; preds = %27, %28
  %48 = load i8*, i8** %1, align 8
  store i8* %48, i8** %p, align 8
  %49 = load i8*, i8** %p, align 8
  %50 = icmp ne i8* %49, null
  br i1 %50, label %52, label %51

; <label>:51                                      ; preds = %mz_zip_reader_get_cdh.exit
  store i32 0, i32* %4, align 4
  br label %82

; <label>:52                                      ; preds = %mz_zip_reader_get_cdh.exit
  %53 = load i8*, i8** %p, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 28
  %55 = bitcast i8* %54 to i16*
  %56 = load i16, i16* %55, align 2
  %57 = zext i16 %56 to i32
  store i32 %57, i32* %filename_len, align 4
  %58 = load i32, i32* %filename_len, align 4
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %72

; <label>:60                                      ; preds = %52
  %61 = load i8*, i8** %p, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 46
  %63 = load i32, i32* %filename_len, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds i8, i8* %62, i64 %64
  %66 = getelementptr inbounds i8, i8* %65, i64 -1
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = icmp eq i32 %68, 47
  br i1 %69, label %70, label %71

; <label>:70                                      ; preds = %60
  store i32 1, i32* %4, align 4
  br label %82

; <label>:71                                      ; preds = %60
  br label %72

; <label>:72                                      ; preds = %71, %52
  %73 = load i8*, i8** %p, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 38
  %75 = bitcast i8* %74 to i32*
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %external_attr, align 4
  %77 = load i32, i32* %external_attr, align 4
  %78 = and i32 %77, 16
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %81

; <label>:80                                      ; preds = %72
  store i32 1, i32* %4, align 4
  br label %82

; <label>:81                                      ; preds = %72
  store i32 0, i32* %4, align 4
  br label %82

; <label>:82                                      ; preds = %81, %80, %70, %51
  %83 = load i32, i32* %4, align 4
  ret i32 %83
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_reader_file_stat(%struct.mz_zip_archive_tag* %pZip, i32 %file_index, %struct.mz_zip_archive_file_stat* %pStat) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.mz_zip_archive_tag*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.mz_zip_archive_file_stat*, align 8
  %n = alloca i32, align 4
  %p = alloca i8*, align 8
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %5, align 8
  store i32 %file_index, i32* %6, align 4
  store %struct.mz_zip_archive_file_stat* %pStat, %struct.mz_zip_archive_file_stat** %7, align 8
  %8 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %5, align 8
  %9 = load i32, i32* %6, align 4
  store %struct.mz_zip_archive_tag* %8, %struct.mz_zip_archive_tag** %2, align 8
  store i32 %9, i32* %3, align 4
  %10 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %11 = icmp ne %struct.mz_zip_archive_tag* %10, null
  br i1 %11, label %12, label %28

; <label>:12                                      ; preds = %0
  %13 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %14 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %13, i32 0, i32 12
  %15 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %14, align 8
  %16 = icmp ne %struct.mz_zip_internal_state_tag* %15, null
  br i1 %16, label %17, label %28

; <label>:17                                      ; preds = %12
  %18 = load i32, i32* %3, align 4
  %19 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %20 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %19, i32 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp uge i32 %18, %21
  br i1 %22, label %28, label %23

; <label>:23                                      ; preds = %17
  %24 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %25 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %24, i32 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %29

; <label>:28                                      ; preds = %23, %17, %12, %0
  store i8* null, i8** %1, align 8
  br label %mz_zip_reader_get_cdh.exit

; <label>:29                                      ; preds = %23
  %30 = load i32, i32* %3, align 4
  %31 = zext i32 %30 to i64
  %32 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %33 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %32, i32 0, i32 12
  %34 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %33, align 8
  %35 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %34, i32 0, i32 1
  %36 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %35, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast i8* %37 to i32*
  %39 = getelementptr inbounds i32, i32* %38, i64 %31
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %43 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %42, i32 0, i32 12
  %44 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %43, align 8
  %45 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %44, i32 0, i32 0
  %46 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %45, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 %41
  store i8* %48, i8** %1, align 8
  br label %mz_zip_reader_get_cdh.exit

mz_zip_reader_get_cdh.exit:                       ; preds = %28, %29
  %49 = load i8*, i8** %1, align 8
  store i8* %49, i8** %p, align 8
  %50 = load i8*, i8** %p, align 8
  %51 = icmp ne i8* %50, null
  br i1 %51, label %52, label %55

; <label>:52                                      ; preds = %mz_zip_reader_get_cdh.exit
  %53 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %7, align 8
  %54 = icmp ne %struct.mz_zip_archive_file_stat* %53, null
  br i1 %54, label %56, label %55

; <label>:55                                      ; preds = %52, %mz_zip_reader_get_cdh.exit
  store i32 0, i32* %4, align 4
  br label %214

; <label>:56                                      ; preds = %52
  %57 = load i32, i32* %6, align 4
  %58 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %7, align 8
  %59 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %58, i32 0, i32 0
  store i32 %57, i32* %59, align 8
  %60 = load i32, i32* %6, align 4
  %61 = zext i32 %60 to i64
  %62 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %5, align 8
  %63 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %62, i32 0, i32 12
  %64 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %63, align 8
  %65 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %64, i32 0, i32 1
  %66 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %65, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = bitcast i8* %67 to i32*
  %69 = getelementptr inbounds i32, i32* %68, i64 %61
  %70 = load i32, i32* %69, align 4
  %71 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %7, align 8
  %72 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %71, i32 0, i32 1
  store i32 %70, i32* %72, align 4
  %73 = load i8*, i8** %p, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %7, align 8
  %78 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %77, i32 0, i32 2
  store i16 %76, i16* %78, align 8
  %79 = load i8*, i8** %p, align 8
  %80 = getelementptr inbounds i8, i8* %79, i64 6
  %81 = bitcast i8* %80 to i16*
  %82 = load i16, i16* %81, align 2
  %83 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %7, align 8
  %84 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %83, i32 0, i32 3
  store i16 %82, i16* %84, align 2
  %85 = load i8*, i8** %p, align 8
  %86 = getelementptr inbounds i8, i8* %85, i64 8
  %87 = bitcast i8* %86 to i16*
  %88 = load i16, i16* %87, align 2
  %89 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %7, align 8
  %90 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %89, i32 0, i32 4
  store i16 %88, i16* %90, align 4
  %91 = load i8*, i8** %p, align 8
  %92 = getelementptr inbounds i8, i8* %91, i64 10
  %93 = bitcast i8* %92 to i16*
  %94 = load i16, i16* %93, align 2
  %95 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %7, align 8
  %96 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %95, i32 0, i32 5
  store i16 %94, i16* %96, align 2
  %97 = load i8*, i8** %p, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 12
  %99 = bitcast i8* %98 to i16*
  %100 = load i16, i16* %99, align 2
  %101 = zext i16 %100 to i32
  %102 = load i8*, i8** %p, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 14
  %104 = bitcast i8* %103 to i16*
  %105 = load i16, i16* %104, align 2
  %106 = zext i16 %105 to i32
  %107 = call i64 @mz_zip_dos_to_time_t(i32 %101, i32 %106)
  %108 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %7, align 8
  %109 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %108, i32 0, i32 6
  store i64 %107, i64* %109, align 8
  %110 = load i8*, i8** %p, align 8
  %111 = getelementptr inbounds i8, i8* %110, i64 16
  %112 = bitcast i8* %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %7, align 8
  %115 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %114, i32 0, i32 7
  store i32 %113, i32* %115, align 8
  %116 = load i8*, i8** %p, align 8
  %117 = getelementptr inbounds i8, i8* %116, i64 20
  %118 = bitcast i8* %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = zext i32 %119 to i64
  %121 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %7, align 8
  %122 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %121, i32 0, i32 8
  store i64 %120, i64* %122, align 8
  %123 = load i8*, i8** %p, align 8
  %124 = getelementptr inbounds i8, i8* %123, i64 24
  %125 = bitcast i8* %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = zext i32 %126 to i64
  %128 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %7, align 8
  %129 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %128, i32 0, i32 9
  store i64 %127, i64* %129, align 8
  %130 = load i8*, i8** %p, align 8
  %131 = getelementptr inbounds i8, i8* %130, i64 36
  %132 = bitcast i8* %131 to i16*
  %133 = load i16, i16* %132, align 2
  %134 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %7, align 8
  %135 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %134, i32 0, i32 10
  store i16 %133, i16* %135, align 8
  %136 = load i8*, i8** %p, align 8
  %137 = getelementptr inbounds i8, i8* %136, i64 38
  %138 = bitcast i8* %137 to i32*
  %139 = load i32, i32* %138, align 4
  %140 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %7, align 8
  %141 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %140, i32 0, i32 11
  store i32 %139, i32* %141, align 4
  %142 = load i8*, i8** %p, align 8
  %143 = getelementptr inbounds i8, i8* %142, i64 42
  %144 = bitcast i8* %143 to i32*
  %145 = load i32, i32* %144, align 4
  %146 = zext i32 %145 to i64
  %147 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %7, align 8
  %148 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %147, i32 0, i32 12
  store i64 %146, i64* %148, align 8
  %149 = load i8*, i8** %p, align 8
  %150 = getelementptr inbounds i8, i8* %149, i64 28
  %151 = bitcast i8* %150 to i16*
  %152 = load i16, i16* %151, align 2
  %153 = zext i16 %152 to i32
  store i32 %153, i32* %n, align 4
  %154 = load i32, i32* %n, align 4
  %155 = icmp ult i32 %154, 259
  br i1 %155, label %156, label %158

; <label>:156                                     ; preds = %56
  %157 = load i32, i32* %n, align 4
  br label %159

; <label>:158                                     ; preds = %56
  br label %159

; <label>:159                                     ; preds = %158, %156
  %160 = phi i32 [ %157, %156 ], [ 259, %158 ]
  store i32 %160, i32* %n, align 4
  %161 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %7, align 8
  %162 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %161, i32 0, i32 14
  %163 = getelementptr inbounds [260 x i8], [260 x i8]* %162, i32 0, i32 0
  %164 = load i8*, i8** %p, align 8
  %165 = getelementptr inbounds i8, i8* %164, i64 46
  %166 = load i32, i32* %n, align 4
  %167 = zext i32 %166 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %163, i8* %165, i64 %167, i32 1, i1 false)
  %168 = load i32, i32* %n, align 4
  %169 = zext i32 %168 to i64
  %170 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %7, align 8
  %171 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %170, i32 0, i32 14
  %172 = getelementptr inbounds [260 x i8], [260 x i8]* %171, i64 0, i64 %169
  store i8 0, i8* %172, align 1
  %173 = load i8*, i8** %p, align 8
  %174 = getelementptr inbounds i8, i8* %173, i64 32
  %175 = bitcast i8* %174 to i16*
  %176 = load i16, i16* %175, align 2
  %177 = zext i16 %176 to i32
  store i32 %177, i32* %n, align 4
  %178 = load i32, i32* %n, align 4
  %179 = icmp ult i32 %178, 255
  br i1 %179, label %180, label %182

; <label>:180                                     ; preds = %159
  %181 = load i32, i32* %n, align 4
  br label %183

; <label>:182                                     ; preds = %159
  br label %183

; <label>:183                                     ; preds = %182, %180
  %184 = phi i32 [ %181, %180 ], [ 255, %182 ]
  store i32 %184, i32* %n, align 4
  %185 = load i32, i32* %n, align 4
  %186 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %7, align 8
  %187 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %186, i32 0, i32 13
  store i32 %185, i32* %187, align 8
  %188 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %7, align 8
  %189 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %188, i32 0, i32 15
  %190 = getelementptr inbounds [256 x i8], [256 x i8]* %189, i32 0, i32 0
  %191 = load i8*, i8** %p, align 8
  %192 = getelementptr inbounds i8, i8* %191, i64 46
  %193 = load i8*, i8** %p, align 8
  %194 = getelementptr inbounds i8, i8* %193, i64 28
  %195 = bitcast i8* %194 to i16*
  %196 = load i16, i16* %195, align 2
  %197 = zext i16 %196 to i32
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds i8, i8* %192, i64 %198
  %200 = load i8*, i8** %p, align 8
  %201 = getelementptr inbounds i8, i8* %200, i64 30
  %202 = bitcast i8* %201 to i16*
  %203 = load i16, i16* %202, align 2
  %204 = zext i16 %203 to i32
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds i8, i8* %199, i64 %205
  %207 = load i32, i32* %n, align 4
  %208 = zext i32 %207 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %190, i8* %206, i64 %208, i32 1, i1 false)
  %209 = load i32, i32* %n, align 4
  %210 = zext i32 %209 to i64
  %211 = load %struct.mz_zip_archive_file_stat*, %struct.mz_zip_archive_file_stat** %7, align 8
  %212 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %211, i32 0, i32 15
  %213 = getelementptr inbounds [256 x i8], [256 x i8]* %212, i64 0, i64 %210
  store i8 0, i8* %213, align 1
  store i32 1, i32* %4, align 4
  br label %214

; <label>:214                                     ; preds = %183, %55
  %215 = load i32, i32* %4, align 4
  ret i32 %215
}

; Function Attrs: nounwind uwtable
define internal i64 @mz_zip_dos_to_time_t(i32 %dos_time, i32 %dos_date) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %tm = alloca %struct.tm, align 8
  store i32 %dos_time, i32* %1, align 4
  store i32 %dos_date, i32* %2, align 4
  %3 = bitcast %struct.tm* %tm to i8*
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 56, i32 8, i1 false)
  %4 = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 8
  store i32 -1, i32* %4, align 8
  %5 = load i32, i32* %2, align 4
  %6 = ashr i32 %5, 9
  %7 = and i32 %6, 127
  %8 = add nsw i32 %7, 1980
  %9 = sub nsw i32 %8, 1900
  %10 = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 5
  store i32 %9, i32* %10, align 4
  %11 = load i32, i32* %2, align 4
  %12 = ashr i32 %11, 5
  %13 = and i32 %12, 15
  %14 = sub nsw i32 %13, 1
  %15 = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 4
  store i32 %14, i32* %15, align 8
  %16 = load i32, i32* %2, align 4
  %17 = and i32 %16, 31
  %18 = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 3
  store i32 %17, i32* %18, align 4
  %19 = load i32, i32* %1, align 4
  %20 = ashr i32 %19, 11
  %21 = and i32 %20, 31
  %22 = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 2
  store i32 %21, i32* %22, align 8
  %23 = load i32, i32* %1, align 4
  %24 = ashr i32 %23, 5
  %25 = and i32 %24, 63
  %26 = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 1
  store i32 %25, i32* %26, align 4
  %27 = load i32, i32* %1, align 4
  %28 = shl i32 %27, 1
  %29 = and i32 %28, 62
  %30 = getelementptr inbounds %struct.tm, %struct.tm* %tm, i32 0, i32 0
  store i32 %29, i32* %30, align 8
  %31 = call i64 @mktime(%struct.tm* %tm) #6
  ret i64 %31
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_reader_get_filename(%struct.mz_zip_archive_tag* %pZip, i32 %file_index, i8* %pFilename, i32 %filename_buf_size) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.mz_zip_archive_tag*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %n = alloca i32, align 4
  %p = alloca i8*, align 8
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %5, align 8
  store i32 %file_index, i32* %6, align 4
  store i8* %pFilename, i8** %7, align 8
  store i32 %filename_buf_size, i32* %8, align 4
  %9 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %5, align 8
  %10 = load i32, i32* %6, align 4
  store %struct.mz_zip_archive_tag* %9, %struct.mz_zip_archive_tag** %2, align 8
  store i32 %10, i32* %3, align 4
  %11 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %12 = icmp ne %struct.mz_zip_archive_tag* %11, null
  br i1 %12, label %13, label %29

; <label>:13                                      ; preds = %0
  %14 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %15 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %14, i32 0, i32 12
  %16 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %15, align 8
  %17 = icmp ne %struct.mz_zip_internal_state_tag* %16, null
  br i1 %17, label %18, label %29

; <label>:18                                      ; preds = %13
  %19 = load i32, i32* %3, align 4
  %20 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %21 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %20, i32 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp uge i32 %19, %22
  br i1 %23, label %29, label %24

; <label>:24                                      ; preds = %18
  %25 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %26 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %25, i32 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = icmp ne i32 %27, 1
  br i1 %28, label %29, label %30

; <label>:29                                      ; preds = %24, %18, %13, %0
  store i8* null, i8** %1, align 8
  br label %mz_zip_reader_get_cdh.exit

; <label>:30                                      ; preds = %24
  %31 = load i32, i32* %3, align 4
  %32 = zext i32 %31 to i64
  %33 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %34 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %33, i32 0, i32 12
  %35 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %34, align 8
  %36 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %35, i32 0, i32 1
  %37 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %36, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast i8* %38 to i32*
  %40 = getelementptr inbounds i32, i32* %39, i64 %32
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %44 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %43, i32 0, i32 12
  %45 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %44, align 8
  %46 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %45, i32 0, i32 0
  %47 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %46, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %42
  store i8* %49, i8** %1, align 8
  br label %mz_zip_reader_get_cdh.exit

mz_zip_reader_get_cdh.exit:                       ; preds = %29, %30
  %50 = load i8*, i8** %1, align 8
  store i8* %50, i8** %p, align 8
  %51 = load i8*, i8** %p, align 8
  %52 = icmp ne i8* %51, null
  br i1 %52, label %60, label %53

; <label>:53                                      ; preds = %mz_zip_reader_get_cdh.exit
  %54 = load i32, i32* %8, align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %59

; <label>:56                                      ; preds = %53
  %57 = load i8*, i8** %7, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 0
  store i8 0, i8* %58, align 1
  br label %59

; <label>:59                                      ; preds = %56, %53
  store i32 0, i32* %4, align 4
  br label %92

; <label>:60                                      ; preds = %mz_zip_reader_get_cdh.exit
  %61 = load i8*, i8** %p, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 28
  %63 = bitcast i8* %62 to i16*
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  store i32 %65, i32* %n, align 4
  %66 = load i32, i32* %8, align 4
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %89

; <label>:68                                      ; preds = %60
  %69 = load i32, i32* %n, align 4
  %70 = load i32, i32* %8, align 4
  %71 = sub i32 %70, 1
  %72 = icmp ult i32 %69, %71
  br i1 %72, label %73, label %75

; <label>:73                                      ; preds = %68
  %74 = load i32, i32* %n, align 4
  br label %78

; <label>:75                                      ; preds = %68
  %76 = load i32, i32* %8, align 4
  %77 = sub i32 %76, 1
  br label %78

; <label>:78                                      ; preds = %75, %73
  %79 = phi i32 [ %74, %73 ], [ %77, %75 ]
  store i32 %79, i32* %n, align 4
  %80 = load i8*, i8** %7, align 8
  %81 = load i8*, i8** %p, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 46
  %83 = load i32, i32* %n, align 4
  %84 = zext i32 %83 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* %82, i64 %84, i32 1, i1 false)
  %85 = load i32, i32* %n, align 4
  %86 = zext i32 %85 to i64
  %87 = load i8*, i8** %7, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 %86
  store i8 0, i8* %88, align 1
  br label %89

; <label>:89                                      ; preds = %78, %60
  %90 = load i32, i32* %n, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %4, align 4
  br label %92

; <label>:92                                      ; preds = %89, %59
  %93 = load i32, i32* %4, align 4
  ret i32 %93
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_reader_locate_file(%struct.mz_zip_archive_tag* %pZip, i8* %pName, i8* %pComment, i32 %flags) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %i.i1 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %i.i = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.mz_zip_archive_tag*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %file_index = alloca i32, align 4
  %name_len = alloca i64, align 8
  %comment_len = alloca i64, align 8
  %pHeader = alloca i8*, align 8
  %filename_len = alloca i32, align 4
  %pFilename = alloca i8*, align 8
  %file_extra_len = alloca i32, align 4
  %file_comment_len = alloca i32, align 4
  %pFile_comment = alloca i8*, align 8
  %ofs = alloca i32, align 4
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %12, align 8
  store i8* %pName, i8** %13, align 8
  store i8* %pComment, i8** %14, align 8
  store i32 %flags, i32* %15, align 4
  %16 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %12, align 8
  %17 = icmp ne %struct.mz_zip_archive_tag* %16, null
  br i1 %17, label %18, label %31

; <label>:18                                      ; preds = %0
  %19 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %12, align 8
  %20 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %19, i32 0, i32 12
  %21 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %20, align 8
  %22 = icmp ne %struct.mz_zip_internal_state_tag* %21, null
  br i1 %22, label %23, label %31

; <label>:23                                      ; preds = %18
  %24 = load i8*, i8** %13, align 8
  %25 = icmp ne i8* %24, null
  br i1 %25, label %26, label %31

; <label>:26                                      ; preds = %23
  %27 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %12, align 8
  %28 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %27, i32 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = icmp ne i32 %29, 1
  br i1 %30, label %31, label %32

; <label>:31                                      ; preds = %26, %23, %18, %0
  store i32 -1, i32* %11, align 4
  br label %389

; <label>:32                                      ; preds = %26
  %33 = load i32, i32* %15, align 4
  %34 = and i32 %33, 768
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %51

; <label>:36                                      ; preds = %32
  %37 = load i8*, i8** %14, align 8
  %38 = icmp ne i8* %37, null
  br i1 %38, label %51, label %39

; <label>:39                                      ; preds = %36
  %40 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %12, align 8
  %41 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %40, i32 0, i32 12
  %42 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %41, align 8
  %43 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %42, i32 0, i32 2
  %44 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %43, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp ne i64 %45, 0
  br i1 %46, label %47, label %51

; <label>:47                                      ; preds = %39
  %48 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %12, align 8
  %49 = load i8*, i8** %13, align 8
  %50 = call i32 @mz_zip_reader_locate_file_binary_search(%struct.mz_zip_archive_tag* %48, i8* %49)
  store i32 %50, i32* %11, align 4
  br label %389

; <label>:51                                      ; preds = %39, %36, %32
  %52 = load i8*, i8** %13, align 8
  %53 = call i64 @strlen(i8* %52) #8
  store i64 %53, i64* %name_len, align 8
  %54 = load i64, i64* %name_len, align 8
  %55 = icmp ugt i64 %54, 65535
  br i1 %55, label %56, label %57

; <label>:56                                      ; preds = %51
  store i32 -1, i32* %11, align 4
  br label %389

; <label>:57                                      ; preds = %51
  %58 = load i8*, i8** %14, align 8
  %59 = icmp ne i8* %58, null
  br i1 %59, label %60, label %63

; <label>:60                                      ; preds = %57
  %61 = load i8*, i8** %14, align 8
  %62 = call i64 @strlen(i8* %61) #8
  br label %64

; <label>:63                                      ; preds = %57
  br label %64

; <label>:64                                      ; preds = %63, %60
  %65 = phi i64 [ %62, %60 ], [ 0, %63 ]
  store i64 %65, i64* %comment_len, align 8
  %66 = load i64, i64* %comment_len, align 8
  %67 = icmp ugt i64 %66, 65535
  br i1 %67, label %68, label %69

; <label>:68                                      ; preds = %64
  store i32 -1, i32* %11, align 4
  br label %389

; <label>:69                                      ; preds = %64
  store i32 0, i32* %file_index, align 4
  br label %70

; <label>:70                                      ; preds = %385, %69
  %71 = load i32, i32* %file_index, align 4
  %72 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %12, align 8
  %73 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %72, i32 0, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = icmp ult i32 %71, %74
  br i1 %75, label %76, label %388

; <label>:76                                      ; preds = %70
  %77 = load i32, i32* %file_index, align 4
  %78 = zext i32 %77 to i64
  %79 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %12, align 8
  %80 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %79, i32 0, i32 12
  %81 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %80, align 8
  %82 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %81, i32 0, i32 1
  %83 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %82, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = bitcast i8* %84 to i32*
  %86 = getelementptr inbounds i32, i32* %85, i64 %78
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i64
  %89 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %12, align 8
  %90 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %89, i32 0, i32 12
  %91 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %90, align 8
  %92 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %91, i32 0, i32 0
  %93 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %92, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 %88
  store i8* %95, i8** %pHeader, align 8
  %96 = load i8*, i8** %pHeader, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 28
  %98 = bitcast i8* %97 to i16*
  %99 = load i16, i16* %98, align 2
  %100 = zext i16 %99 to i32
  store i32 %100, i32* %filename_len, align 4
  %101 = load i8*, i8** %pHeader, align 8
  %102 = getelementptr inbounds i8, i8* %101, i64 46
  store i8* %102, i8** %pFilename, align 8
  %103 = load i32, i32* %filename_len, align 4
  %104 = zext i32 %103 to i64
  %105 = load i64, i64* %name_len, align 8
  %106 = icmp ult i64 %104, %105
  br i1 %106, label %107, label %108

; <label>:107                                     ; preds = %76
  br label %385

; <label>:108                                     ; preds = %76
  %109 = load i64, i64* %comment_len, align 8
  %110 = icmp ne i64 %109, 0
  br i1 %110, label %111, label %231

; <label>:111                                     ; preds = %108
  %112 = load i8*, i8** %pHeader, align 8
  %113 = getelementptr inbounds i8, i8* %112, i64 30
  %114 = bitcast i8* %113 to i16*
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  store i32 %116, i32* %file_extra_len, align 4
  %117 = load i8*, i8** %pHeader, align 8
  %118 = getelementptr inbounds i8, i8* %117, i64 32
  %119 = bitcast i8* %118 to i16*
  %120 = load i16, i16* %119, align 2
  %121 = zext i16 %120 to i32
  store i32 %121, i32* %file_comment_len, align 4
  %122 = load i8*, i8** %pFilename, align 8
  %123 = load i32, i32* %filename_len, align 4
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds i8, i8* %122, i64 %124
  %126 = load i32, i32* %file_extra_len, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds i8, i8* %125, i64 %127
  store i8* %128, i8** %pFile_comment, align 8
  %129 = load i32, i32* %file_comment_len, align 4
  %130 = zext i32 %129 to i64
  %131 = load i64, i64* %comment_len, align 8
  %132 = icmp ne i64 %130, %131
  br i1 %132, label %229, label %133

; <label>:133                                     ; preds = %111
  %134 = load i8*, i8** %14, align 8
  %135 = load i8*, i8** %pFile_comment, align 8
  %136 = load i32, i32* %file_comment_len, align 4
  %137 = load i32, i32* %15, align 4
  store i8* %134, i8** %7, align 8
  store i8* %135, i8** %8, align 8
  store i32 %136, i32* %9, align 4
  store i32 %137, i32* %10, align 4
  %138 = load i32, i32* %10, align 4
  %139 = and i32 %138, 256
  %140 = icmp ne i32 %139, 0
  br i1 %140, label %141, label %149

; <label>:141                                     ; preds = %133
  %142 = load i8*, i8** %7, align 8
  %143 = load i8*, i8** %8, align 8
  %144 = load i32, i32* %9, align 4
  %145 = zext i32 %144 to i64
  %146 = call i32 @memcmp(i8* %142, i8* %143, i64 %145) #8
  %147 = icmp eq i32 0, %146
  %148 = zext i1 %147 to i32
  store i32 %148, i32* %6, align 4
  br label %mz_zip_reader_string_equal.exit

; <label>:149                                     ; preds = %133
  store i32 0, i32* %i.i, align 4
  br label %150

; <label>:150                                     ; preds = %223, %149
  %151 = load i32, i32* %i.i, align 4
  %152 = load i32, i32* %9, align 4
  %153 = icmp ult i32 %151, %152
  br i1 %153, label %154, label %226

; <label>:154                                     ; preds = %150
  %155 = load i32, i32* %i.i, align 4
  %156 = zext i32 %155 to i64
  %157 = load i8*, i8** %7, align 8
  %158 = getelementptr inbounds i8, i8* %157, i64 %156
  %159 = load i8, i8* %158, align 1
  %160 = sext i8 %159 to i32
  %161 = icmp sge i32 %160, 65
  br i1 %161, label %162, label %179

; <label>:162                                     ; preds = %154
  %163 = load i32, i32* %i.i, align 4
  %164 = zext i32 %163 to i64
  %165 = load i8*, i8** %7, align 8
  %166 = getelementptr inbounds i8, i8* %165, i64 %164
  %167 = load i8, i8* %166, align 1
  %168 = sext i8 %167 to i32
  %169 = icmp sle i32 %168, 90
  br i1 %169, label %170, label %179

; <label>:170                                     ; preds = %162
  %171 = load i32, i32* %i.i, align 4
  %172 = zext i32 %171 to i64
  %173 = load i8*, i8** %7, align 8
  %174 = getelementptr inbounds i8, i8* %173, i64 %172
  %175 = load i8, i8* %174, align 1
  %176 = sext i8 %175 to i32
  %177 = sub nsw i32 %176, 65
  %178 = add nsw i32 %177, 97
  br label %186

; <label>:179                                     ; preds = %162, %154
  %180 = load i32, i32* %i.i, align 4
  %181 = zext i32 %180 to i64
  %182 = load i8*, i8** %7, align 8
  %183 = getelementptr inbounds i8, i8* %182, i64 %181
  %184 = load i8, i8* %183, align 1
  %185 = sext i8 %184 to i32
  br label %186

; <label>:186                                     ; preds = %179, %170
  %187 = phi i32 [ %178, %170 ], [ %185, %179 ]
  %188 = load i32, i32* %i.i, align 4
  %189 = zext i32 %188 to i64
  %190 = load i8*, i8** %8, align 8
  %191 = getelementptr inbounds i8, i8* %190, i64 %189
  %192 = load i8, i8* %191, align 1
  %193 = sext i8 %192 to i32
  %194 = icmp sge i32 %193, 65
  br i1 %194, label %195, label %212

; <label>:195                                     ; preds = %186
  %196 = load i32, i32* %i.i, align 4
  %197 = zext i32 %196 to i64
  %198 = load i8*, i8** %8, align 8
  %199 = getelementptr inbounds i8, i8* %198, i64 %197
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i32
  %202 = icmp sle i32 %201, 90
  br i1 %202, label %203, label %212

; <label>:203                                     ; preds = %195
  %204 = load i32, i32* %i.i, align 4
  %205 = zext i32 %204 to i64
  %206 = load i8*, i8** %8, align 8
  %207 = getelementptr inbounds i8, i8* %206, i64 %205
  %208 = load i8, i8* %207, align 1
  %209 = sext i8 %208 to i32
  %210 = sub nsw i32 %209, 65
  %211 = add nsw i32 %210, 97
  br label %219

; <label>:212                                     ; preds = %195, %186
  %213 = load i32, i32* %i.i, align 4
  %214 = zext i32 %213 to i64
  %215 = load i8*, i8** %8, align 8
  %216 = getelementptr inbounds i8, i8* %215, i64 %214
  %217 = load i8, i8* %216, align 1
  %218 = sext i8 %217 to i32
  br label %219

; <label>:219                                     ; preds = %212, %203
  %220 = phi i32 [ %211, %203 ], [ %218, %212 ]
  %221 = icmp ne i32 %187, %220
  br i1 %221, label %222, label %223

; <label>:222                                     ; preds = %219
  store i32 0, i32* %6, align 4
  br label %mz_zip_reader_string_equal.exit

; <label>:223                                     ; preds = %219
  %224 = load i32, i32* %i.i, align 4
  %225 = add i32 %224, 1
  store i32 %225, i32* %i.i, align 4
  br label %150

; <label>:226                                     ; preds = %150
  store i32 1, i32* %6, align 4
  br label %mz_zip_reader_string_equal.exit

mz_zip_reader_string_equal.exit:                  ; preds = %141, %222, %226
  %227 = load i32, i32* %6, align 4
  %228 = icmp ne i32 %227, 0
  br i1 %228, label %230, label %229

; <label>:229                                     ; preds = %mz_zip_reader_string_equal.exit, %111
  br label %385

; <label>:230                                     ; preds = %mz_zip_reader_string_equal.exit
  br label %231

; <label>:231                                     ; preds = %230, %108
  %232 = load i32, i32* %15, align 4
  %233 = and i32 %232, 512
  %234 = icmp ne i32 %233, 0
  br i1 %234, label %235, label %281

; <label>:235                                     ; preds = %231
  %236 = load i32, i32* %filename_len, align 4
  %237 = icmp ne i32 %236, 0
  br i1 %237, label %238, label %281

; <label>:238                                     ; preds = %235
  %239 = load i32, i32* %filename_len, align 4
  %240 = sub i32 %239, 1
  store i32 %240, i32* %ofs, align 4
  br label %241

; <label>:241                                     ; preds = %267, %238
  %242 = load i32, i32* %ofs, align 4
  %243 = sext i32 %242 to i64
  %244 = load i8*, i8** %pFilename, align 8
  %245 = getelementptr inbounds i8, i8* %244, i64 %243
  %246 = load i8, i8* %245, align 1
  %247 = sext i8 %246 to i32
  %248 = icmp eq i32 %247, 47
  br i1 %248, label %265, label %249

; <label>:249                                     ; preds = %241
  %250 = load i32, i32* %ofs, align 4
  %251 = sext i32 %250 to i64
  %252 = load i8*, i8** %pFilename, align 8
  %253 = getelementptr inbounds i8, i8* %252, i64 %251
  %254 = load i8, i8* %253, align 1
  %255 = sext i8 %254 to i32
  %256 = icmp eq i32 %255, 92
  br i1 %256, label %265, label %257

; <label>:257                                     ; preds = %249
  %258 = load i32, i32* %ofs, align 4
  %259 = sext i32 %258 to i64
  %260 = load i8*, i8** %pFilename, align 8
  %261 = getelementptr inbounds i8, i8* %260, i64 %259
  %262 = load i8, i8* %261, align 1
  %263 = sext i8 %262 to i32
  %264 = icmp eq i32 %263, 58
  br i1 %264, label %265, label %266

; <label>:265                                     ; preds = %257, %249, %241
  br label %271

; <label>:266                                     ; preds = %257
  br label %267

; <label>:267                                     ; preds = %266
  %268 = load i32, i32* %ofs, align 4
  %269 = add nsw i32 %268, -1
  store i32 %269, i32* %ofs, align 4
  %270 = icmp sge i32 %269, 0
  br i1 %270, label %241, label %271

; <label>:271                                     ; preds = %267, %265
  %272 = load i32, i32* %ofs, align 4
  %273 = add nsw i32 %272, 1
  store i32 %273, i32* %ofs, align 4
  %274 = load i32, i32* %ofs, align 4
  %275 = load i8*, i8** %pFilename, align 8
  %276 = sext i32 %274 to i64
  %277 = getelementptr inbounds i8, i8* %275, i64 %276
  store i8* %277, i8** %pFilename, align 8
  %278 = load i32, i32* %ofs, align 4
  %279 = load i32, i32* %filename_len, align 4
  %280 = sub i32 %279, %278
  store i32 %280, i32* %filename_len, align 4
  br label %281

; <label>:281                                     ; preds = %271, %235, %231
  %282 = load i32, i32* %filename_len, align 4
  %283 = zext i32 %282 to i64
  %284 = load i64, i64* %name_len, align 8
  %285 = icmp eq i64 %283, %284
  br i1 %285, label %286, label %384

; <label>:286                                     ; preds = %281
  %287 = load i8*, i8** %13, align 8
  %288 = load i8*, i8** %pFilename, align 8
  %289 = load i32, i32* %filename_len, align 4
  %290 = load i32, i32* %15, align 4
  store i8* %287, i8** %2, align 8
  store i8* %288, i8** %3, align 8
  store i32 %289, i32* %4, align 4
  store i32 %290, i32* %5, align 4
  %291 = load i32, i32* %5, align 4
  %292 = and i32 %291, 256
  %293 = icmp ne i32 %292, 0
  br i1 %293, label %294, label %302

; <label>:294                                     ; preds = %286
  %295 = load i8*, i8** %2, align 8
  %296 = load i8*, i8** %3, align 8
  %297 = load i32, i32* %4, align 4
  %298 = zext i32 %297 to i64
  %299 = call i32 @memcmp(i8* %295, i8* %296, i64 %298) #8
  %300 = icmp eq i32 0, %299
  %301 = zext i1 %300 to i32
  store i32 %301, i32* %1, align 4
  br label %mz_zip_reader_string_equal.exit2

; <label>:302                                     ; preds = %286
  store i32 0, i32* %i.i1, align 4
  br label %303

; <label>:303                                     ; preds = %376, %302
  %304 = load i32, i32* %i.i1, align 4
  %305 = load i32, i32* %4, align 4
  %306 = icmp ult i32 %304, %305
  br i1 %306, label %307, label %379

; <label>:307                                     ; preds = %303
  %308 = load i32, i32* %i.i1, align 4
  %309 = zext i32 %308 to i64
  %310 = load i8*, i8** %2, align 8
  %311 = getelementptr inbounds i8, i8* %310, i64 %309
  %312 = load i8, i8* %311, align 1
  %313 = sext i8 %312 to i32
  %314 = icmp sge i32 %313, 65
  br i1 %314, label %315, label %332

; <label>:315                                     ; preds = %307
  %316 = load i32, i32* %i.i1, align 4
  %317 = zext i32 %316 to i64
  %318 = load i8*, i8** %2, align 8
  %319 = getelementptr inbounds i8, i8* %318, i64 %317
  %320 = load i8, i8* %319, align 1
  %321 = sext i8 %320 to i32
  %322 = icmp sle i32 %321, 90
  br i1 %322, label %323, label %332

; <label>:323                                     ; preds = %315
  %324 = load i32, i32* %i.i1, align 4
  %325 = zext i32 %324 to i64
  %326 = load i8*, i8** %2, align 8
  %327 = getelementptr inbounds i8, i8* %326, i64 %325
  %328 = load i8, i8* %327, align 1
  %329 = sext i8 %328 to i32
  %330 = sub nsw i32 %329, 65
  %331 = add nsw i32 %330, 97
  br label %339

; <label>:332                                     ; preds = %315, %307
  %333 = load i32, i32* %i.i1, align 4
  %334 = zext i32 %333 to i64
  %335 = load i8*, i8** %2, align 8
  %336 = getelementptr inbounds i8, i8* %335, i64 %334
  %337 = load i8, i8* %336, align 1
  %338 = sext i8 %337 to i32
  br label %339

; <label>:339                                     ; preds = %332, %323
  %340 = phi i32 [ %331, %323 ], [ %338, %332 ]
  %341 = load i32, i32* %i.i1, align 4
  %342 = zext i32 %341 to i64
  %343 = load i8*, i8** %3, align 8
  %344 = getelementptr inbounds i8, i8* %343, i64 %342
  %345 = load i8, i8* %344, align 1
  %346 = sext i8 %345 to i32
  %347 = icmp sge i32 %346, 65
  br i1 %347, label %348, label %365

; <label>:348                                     ; preds = %339
  %349 = load i32, i32* %i.i1, align 4
  %350 = zext i32 %349 to i64
  %351 = load i8*, i8** %3, align 8
  %352 = getelementptr inbounds i8, i8* %351, i64 %350
  %353 = load i8, i8* %352, align 1
  %354 = sext i8 %353 to i32
  %355 = icmp sle i32 %354, 90
  br i1 %355, label %356, label %365

; <label>:356                                     ; preds = %348
  %357 = load i32, i32* %i.i1, align 4
  %358 = zext i32 %357 to i64
  %359 = load i8*, i8** %3, align 8
  %360 = getelementptr inbounds i8, i8* %359, i64 %358
  %361 = load i8, i8* %360, align 1
  %362 = sext i8 %361 to i32
  %363 = sub nsw i32 %362, 65
  %364 = add nsw i32 %363, 97
  br label %372

; <label>:365                                     ; preds = %348, %339
  %366 = load i32, i32* %i.i1, align 4
  %367 = zext i32 %366 to i64
  %368 = load i8*, i8** %3, align 8
  %369 = getelementptr inbounds i8, i8* %368, i64 %367
  %370 = load i8, i8* %369, align 1
  %371 = sext i8 %370 to i32
  br label %372

; <label>:372                                     ; preds = %365, %356
  %373 = phi i32 [ %364, %356 ], [ %371, %365 ]
  %374 = icmp ne i32 %340, %373
  br i1 %374, label %375, label %376

; <label>:375                                     ; preds = %372
  store i32 0, i32* %1, align 4
  br label %mz_zip_reader_string_equal.exit2

; <label>:376                                     ; preds = %372
  %377 = load i32, i32* %i.i1, align 4
  %378 = add i32 %377, 1
  store i32 %378, i32* %i.i1, align 4
  br label %303

; <label>:379                                     ; preds = %303
  store i32 1, i32* %1, align 4
  br label %mz_zip_reader_string_equal.exit2

mz_zip_reader_string_equal.exit2:                 ; preds = %294, %375, %379
  %380 = load i32, i32* %1, align 4
  %381 = icmp ne i32 %380, 0
  br i1 %381, label %382, label %384

; <label>:382                                     ; preds = %mz_zip_reader_string_equal.exit2
  %383 = load i32, i32* %file_index, align 4
  store i32 %383, i32* %11, align 4
  br label %389

; <label>:384                                     ; preds = %mz_zip_reader_string_equal.exit2, %281
  br label %385

; <label>:385                                     ; preds = %384, %229, %107
  %386 = load i32, i32* %file_index, align 4
  %387 = add i32 %386, 1
  store i32 %387, i32* %file_index, align 4
  br label %70

; <label>:388                                     ; preds = %70
  store i32 -1, i32* %11, align 4
  br label %389

; <label>:389                                     ; preds = %388, %382, %68, %56, %47, %31
  %390 = load i32, i32* %11, align 4
  ret i32 %390
}

; Function Attrs: nounwind uwtable
define internal i32 @mz_zip_reader_locate_file_binary_search(%struct.mz_zip_archive_tag* %pZip, i8* %pFilename) #0 {
  %1 = alloca %struct.mz_zip_array*, align 8
  %2 = alloca %struct.mz_zip_array*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %pL.i = alloca i8*, align 8
  %pE.i = alloca i8*, align 8
  %l_len.i = alloca i32, align 4
  %l.i = alloca i8, align 1
  %r.i = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca %struct.mz_zip_archive_tag*, align 8
  %8 = alloca i8*, align 8
  %pState = alloca %struct.mz_zip_internal_state_tag*, align 8
  %pCentral_dir_offsets = alloca %struct.mz_zip_array*, align 8
  %pCentral_dir = alloca %struct.mz_zip_array*, align 8
  %pIndices = alloca i32*, align 8
  %size = alloca i32, align 4
  %filename_len = alloca i32, align 4
  %l = alloca i32, align 4
  %h = alloca i32, align 4
  %m = alloca i32, align 4
  %file_index = alloca i32, align 4
  %comp = alloca i32, align 4
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %7, align 8
  store i8* %pFilename, i8** %8, align 8
  %9 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %7, align 8
  %10 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %9, i32 0, i32 12
  %11 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %10, align 8
  store %struct.mz_zip_internal_state_tag* %11, %struct.mz_zip_internal_state_tag** %pState, align 8
  %12 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %13 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %12, i32 0, i32 1
  store %struct.mz_zip_array* %13, %struct.mz_zip_array** %pCentral_dir_offsets, align 8
  %14 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %15 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %14, i32 0, i32 0
  store %struct.mz_zip_array* %15, %struct.mz_zip_array** %pCentral_dir, align 8
  %16 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %17 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %16, i32 0, i32 2
  %18 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %17, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast i8* %19 to i32*
  %21 = getelementptr inbounds i32, i32* %20, i64 0
  store i32* %21, i32** %pIndices, align 8
  %22 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %7, align 8
  %23 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %22, i32 0, i32 2
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %size, align 4
  %25 = load i8*, i8** %8, align 8
  %26 = call i64 @strlen(i8* %25) #8
  %27 = trunc i64 %26 to i32
  store i32 %27, i32* %filename_len, align 4
  store i32 0, i32* %l, align 4
  %28 = load i32, i32* %size, align 4
  %29 = sub nsw i32 %28, 1
  store i32 %29, i32* %h, align 4
  br label %30

; <label>:30                                      ; preds = %168, %0
  %31 = load i32, i32* %l, align 4
  %32 = load i32, i32* %h, align 4
  %33 = icmp sle i32 %31, %32
  br i1 %33, label %34, label %169

; <label>:34                                      ; preds = %30
  %35 = load i32, i32* %l, align 4
  %36 = load i32, i32* %h, align 4
  %37 = add nsw i32 %35, %36
  %38 = ashr i32 %37, 1
  store i32 %38, i32* %m, align 4
  %39 = load i32, i32* %m, align 4
  %40 = sext i32 %39 to i64
  %41 = load i32*, i32** %pIndices, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 %40
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %file_index, align 4
  %44 = load %struct.mz_zip_array*, %struct.mz_zip_array** %pCentral_dir, align 8
  %45 = load %struct.mz_zip_array*, %struct.mz_zip_array** %pCentral_dir_offsets, align 8
  %46 = load i32, i32* %file_index, align 4
  %47 = load i8*, i8** %8, align 8
  %48 = load i32, i32* %filename_len, align 4
  store %struct.mz_zip_array* %44, %struct.mz_zip_array** %1, align 8
  store %struct.mz_zip_array* %45, %struct.mz_zip_array** %2, align 8
  store i32 %46, i32* %3, align 4
  store i8* %47, i8** %4, align 8
  store i32 %48, i32* %5, align 4
  %49 = load i32, i32* %3, align 4
  %50 = zext i32 %49 to i64
  %51 = load %struct.mz_zip_array*, %struct.mz_zip_array** %2, align 8
  %52 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %51, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = bitcast i8* %53 to i32*
  %55 = getelementptr inbounds i32, i32* %54, i64 %50
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i64
  %58 = load %struct.mz_zip_array*, %struct.mz_zip_array** %1, align 8
  %59 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %58, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 %57
  store i8* %61, i8** %pL.i, align 8
  %62 = load i8*, i8** %pL.i, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 28
  %64 = bitcast i8* %63 to i16*
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i32
  store i32 %66, i32* %l_len.i, align 4
  store i8 0, i8* %l.i, align 1
  store i8 0, i8* %r.i, align 1
  %67 = load i8*, i8** %pL.i, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 46
  store i8* %68, i8** %pL.i, align 8
  %69 = load i8*, i8** %pL.i, align 8
  %70 = load i32, i32* %l_len.i, align 4
  %71 = load i32, i32* %5, align 4
  %72 = icmp ult i32 %70, %71
  br i1 %72, label %73, label %75

; <label>:73                                      ; preds = %34
  %74 = load i32, i32* %l_len.i, align 4
  br label %77

; <label>:75                                      ; preds = %34
  %76 = load i32, i32* %5, align 4
  br label %77

; <label>:77                                      ; preds = %75, %73
  %78 = phi i32 [ %74, %73 ], [ %76, %75 ]
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %69, i64 %79
  store i8* %80, i8** %pE.i, align 8
  br label %81

; <label>:81                                      ; preds = %134, %77
  %82 = load i8*, i8** %pL.i, align 8
  %83 = load i8*, i8** %pE.i, align 8
  %84 = icmp ult i8* %82, %83
  br i1 %84, label %85, label %139

; <label>:85                                      ; preds = %81
  %86 = load i8*, i8** %pL.i, align 8
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = icmp sge i32 %88, 65
  br i1 %89, label %90, label %101

; <label>:90                                      ; preds = %85
  %91 = load i8*, i8** %pL.i, align 8
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = icmp sle i32 %93, 90
  br i1 %94, label %95, label %101

; <label>:95                                      ; preds = %90
  %96 = load i8*, i8** %pL.i, align 8
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = sub nsw i32 %98, 65
  %100 = add nsw i32 %99, 97
  br label %105

; <label>:101                                     ; preds = %90, %85
  %102 = load i8*, i8** %pL.i, align 8
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  br label %105

; <label>:105                                     ; preds = %101, %95
  %106 = phi i32 [ %100, %95 ], [ %104, %101 ]
  %107 = trunc i32 %106 to i8
  store i8 %107, i8* %l.i, align 1
  %108 = zext i8 %107 to i32
  %109 = load i8*, i8** %4, align 8
  %110 = load i8, i8* %109, align 1
  %111 = sext i8 %110 to i32
  %112 = icmp sge i32 %111, 65
  br i1 %112, label %113, label %124

; <label>:113                                     ; preds = %105
  %114 = load i8*, i8** %4, align 8
  %115 = load i8, i8* %114, align 1
  %116 = sext i8 %115 to i32
  %117 = icmp sle i32 %116, 90
  br i1 %117, label %118, label %124

; <label>:118                                     ; preds = %113
  %119 = load i8*, i8** %4, align 8
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = sub nsw i32 %121, 65
  %123 = add nsw i32 %122, 97
  br label %128

; <label>:124                                     ; preds = %113, %105
  %125 = load i8*, i8** %4, align 8
  %126 = load i8, i8* %125, align 1
  %127 = sext i8 %126 to i32
  br label %128

; <label>:128                                     ; preds = %124, %118
  %129 = phi i32 [ %123, %118 ], [ %127, %124 ]
  %130 = trunc i32 %129 to i8
  store i8 %130, i8* %r.i, align 1
  %131 = zext i8 %130 to i32
  %132 = icmp ne i32 %108, %131
  br i1 %132, label %133, label %134

; <label>:133                                     ; preds = %128
  br label %139

; <label>:134                                     ; preds = %128
  %135 = load i8*, i8** %pL.i, align 8
  %136 = getelementptr inbounds i8, i8* %135, i32 1
  store i8* %136, i8** %pL.i, align 8
  %137 = load i8*, i8** %4, align 8
  %138 = getelementptr inbounds i8, i8* %137, i32 1
  store i8* %138, i8** %4, align 8
  br label %81

; <label>:139                                     ; preds = %133, %81
  %140 = load i8*, i8** %pL.i, align 8
  %141 = load i8*, i8** %pE.i, align 8
  %142 = icmp eq i8* %140, %141
  br i1 %142, label %143, label %147

; <label>:143                                     ; preds = %139
  %144 = load i32, i32* %l_len.i, align 4
  %145 = load i32, i32* %5, align 4
  %146 = sub i32 %144, %145
  br label %mz_zip_reader_filename_compare.exit

; <label>:147                                     ; preds = %139
  %148 = load i8, i8* %l.i, align 1
  %149 = zext i8 %148 to i32
  %150 = load i8, i8* %r.i, align 1
  %151 = zext i8 %150 to i32
  %152 = sub nsw i32 %149, %151
  br label %mz_zip_reader_filename_compare.exit

mz_zip_reader_filename_compare.exit:              ; preds = %143, %147
  %153 = phi i32 [ %146, %143 ], [ %152, %147 ]
  store i32 %153, i32* %comp, align 4
  %154 = load i32, i32* %comp, align 4
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %158, label %156

; <label>:156                                     ; preds = %mz_zip_reader_filename_compare.exit
  %157 = load i32, i32* %file_index, align 4
  store i32 %157, i32* %6, align 4
  br label %170

; <label>:158                                     ; preds = %mz_zip_reader_filename_compare.exit
  %159 = load i32, i32* %comp, align 4
  %160 = icmp slt i32 %159, 0
  br i1 %160, label %161, label %164

; <label>:161                                     ; preds = %158
  %162 = load i32, i32* %m, align 4
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %l, align 4
  br label %167

; <label>:164                                     ; preds = %158
  %165 = load i32, i32* %m, align 4
  %166 = sub nsw i32 %165, 1
  store i32 %166, i32* %h, align 4
  br label %167

; <label>:167                                     ; preds = %164, %161
  br label %168

; <label>:168                                     ; preds = %167
  br label %30

; <label>:169                                     ; preds = %30
  store i32 -1, i32* %6, align 4
  br label %170

; <label>:170                                     ; preds = %169, %156
  %171 = load i32, i32* %6, align 4
  ret i32 %171
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #5

; Function Attrs: nounwind uwtable
define i32 @mz_zip_reader_extract_to_mem_no_alloc(%struct.mz_zip_archive_tag* %pZip, i32 %file_index, i8* %pBuf, i64 %buf_size, i32 %flags, i8* %pUser_read_buf, i64 %user_read_buf_size) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %status = alloca i32, align 4
  %needed_size = alloca i64, align 8
  %cur_file_ofs = alloca i64, align 8
  %comp_remaining = alloca i64, align 8
  %out_buf_ofs = alloca i64, align 8
  %read_buf_size = alloca i64, align 8
  %read_buf_ofs = alloca i64, align 8
  %read_buf_avail = alloca i64, align 8
  %file_stat = alloca %struct.mz_zip_archive_file_stat, align 8
  %pRead_buf = alloca i8*, align 8
  %local_header_u32 = alloca [8 x i32], align 16
  %pLocal_header = alloca i8*, align 8
  %inflator = alloca %struct.tinfl_decompressor_tag, align 8
  %in_buf_size = alloca i64, align 8
  %out_buf_size = alloca i64, align 8
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  store i32 %file_index, i32* %3, align 4
  store i8* %pBuf, i8** %4, align 8
  store i64 %buf_size, i64* %5, align 8
  store i32 %flags, i32* %6, align 4
  store i8* %pUser_read_buf, i8** %7, align 8
  store i64 %user_read_buf_size, i64* %8, align 8
  store i32 0, i32* %status, align 4
  store i64 0, i64* %out_buf_ofs, align 8
  store i64 0, i64* %read_buf_ofs, align 8
  %9 = getelementptr inbounds [8 x i32], [8 x i32]* %local_header_u32, i32 0, i32 0
  %10 = bitcast i32* %9 to i8*
  store i8* %10, i8** %pLocal_header, align 8
  %11 = load i64, i64* %5, align 8
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %13, label %17

; <label>:13                                      ; preds = %0
  %14 = load i8*, i8** %4, align 8
  %15 = icmp ne i8* %14, null
  br i1 %15, label %17, label %16

; <label>:16                                      ; preds = %13
  store i32 0, i32* %1, align 4
  br label %323

; <label>:17                                      ; preds = %13, %0
  %18 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %19 = load i32, i32* %3, align 4
  %20 = call i32 @mz_zip_reader_file_stat(%struct.mz_zip_archive_tag* %18, i32 %19, %struct.mz_zip_archive_file_stat* %file_stat)
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %23, label %22

; <label>:22                                      ; preds = %17
  store i32 0, i32* %1, align 4
  br label %323

; <label>:23                                      ; preds = %17
  %24 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 8
  %25 = load i64, i64* %24, align 8
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %28, label %27

; <label>:27                                      ; preds = %23
  store i32 1, i32* %1, align 4
  br label %323

; <label>:28                                      ; preds = %23
  %29 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %30 = load i32, i32* %3, align 4
  %31 = call i32 @mz_zip_reader_is_file_a_directory(%struct.mz_zip_archive_tag* %29, i32 %30)
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %34

; <label>:33                                      ; preds = %28
  store i32 1, i32* %1, align 4
  br label %323

; <label>:34                                      ; preds = %28
  %35 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 4
  %36 = load i16, i16* %35, align 4
  %37 = zext i16 %36 to i32
  %38 = and i32 %37, 33
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %41

; <label>:40                                      ; preds = %34
  store i32 0, i32* %1, align 4
  br label %323

; <label>:41                                      ; preds = %34
  %42 = load i32, i32* %6, align 4
  %43 = and i32 %42, 1024
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %56, label %45

; <label>:45                                      ; preds = %41
  %46 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 5
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %56

; <label>:50                                      ; preds = %45
  %51 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 5
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i32
  %54 = icmp ne i32 %53, 8
  br i1 %54, label %55, label %56

; <label>:55                                      ; preds = %50
  store i32 0, i32* %1, align 4
  br label %323

; <label>:56                                      ; preds = %50, %45, %41
  %57 = load i32, i32* %6, align 4
  %58 = and i32 %57, 1024
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %63

; <label>:60                                      ; preds = %56
  %61 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 8
  %62 = load i64, i64* %61, align 8
  br label %66

; <label>:63                                      ; preds = %56
  %64 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 9
  %65 = load i64, i64* %64, align 8
  br label %66

; <label>:66                                      ; preds = %63, %60
  %67 = phi i64 [ %62, %60 ], [ %65, %63 ]
  store i64 %67, i64* %needed_size, align 8
  %68 = load i64, i64* %5, align 8
  %69 = load i64, i64* %needed_size, align 8
  %70 = icmp ult i64 %68, %69
  br i1 %70, label %71, label %72

; <label>:71                                      ; preds = %66
  store i32 0, i32* %1, align 4
  br label %323

; <label>:72                                      ; preds = %66
  %73 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 12
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %cur_file_ofs, align 8
  %75 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %76 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %75, i32 0, i32 9
  %77 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %76, align 8
  %78 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %79 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %78, i32 0, i32 11
  %80 = load i8*, i8** %79, align 8
  %81 = load i64, i64* %cur_file_ofs, align 8
  %82 = load i8*, i8** %pLocal_header, align 8
  %83 = call i64 %77(i8* %80, i64 %81, i8* %82, i64 30)
  %84 = icmp ne i64 %83, 30
  br i1 %84, label %85, label %86

; <label>:85                                      ; preds = %72
  store i32 0, i32* %1, align 4
  br label %323

; <label>:86                                      ; preds = %72
  %87 = load i8*, i8** %pLocal_header, align 8
  %88 = bitcast i8* %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = icmp ne i32 %89, 67324752
  br i1 %90, label %91, label %92

; <label>:91                                      ; preds = %86
  store i32 0, i32* %1, align 4
  br label %323

; <label>:92                                      ; preds = %86
  %93 = load i8*, i8** %pLocal_header, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 26
  %95 = bitcast i8* %94 to i16*
  %96 = load i16, i16* %95, align 2
  %97 = zext i16 %96 to i32
  %98 = add nsw i32 30, %97
  %99 = load i8*, i8** %pLocal_header, align 8
  %100 = getelementptr inbounds i8, i8* %99, i64 28
  %101 = bitcast i8* %100 to i16*
  %102 = load i16, i16* %101, align 2
  %103 = zext i16 %102 to i32
  %104 = add nsw i32 %98, %103
  %105 = sext i32 %104 to i64
  %106 = load i64, i64* %cur_file_ofs, align 8
  %107 = add i64 %106, %105
  store i64 %107, i64* %cur_file_ofs, align 8
  %108 = load i64, i64* %cur_file_ofs, align 8
  %109 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 8
  %110 = load i64, i64* %109, align 8
  %111 = add i64 %108, %110
  %112 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %113 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %112, i32 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = icmp ugt i64 %111, %114
  br i1 %115, label %116, label %117

; <label>:116                                     ; preds = %92
  store i32 0, i32* %1, align 4
  br label %323

; <label>:117                                     ; preds = %92
  %118 = load i32, i32* %6, align 4
  %119 = and i32 %118, 1024
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %125, label %121

; <label>:121                                     ; preds = %117
  %122 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 5
  %123 = load i16, i16* %122, align 2
  %124 = icmp ne i16 %123, 0
  br i1 %124, label %155, label %125

; <label>:125                                     ; preds = %121, %117
  %126 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %127 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %126, i32 0, i32 9
  %128 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %127, align 8
  %129 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %130 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %129, i32 0, i32 11
  %131 = load i8*, i8** %130, align 8
  %132 = load i64, i64* %cur_file_ofs, align 8
  %133 = load i8*, i8** %4, align 8
  %134 = load i64, i64* %needed_size, align 8
  %135 = call i64 %128(i8* %131, i64 %132, i8* %133, i64 %134)
  %136 = load i64, i64* %needed_size, align 8
  %137 = icmp ne i64 %135, %136
  br i1 %137, label %138, label %139

; <label>:138                                     ; preds = %125
  store i32 0, i32* %1, align 4
  br label %323

; <label>:139                                     ; preds = %125
  %140 = load i32, i32* %6, align 4
  %141 = and i32 %140, 1024
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %152, label %143

; <label>:143                                     ; preds = %139
  %144 = load i8*, i8** %4, align 8
  %145 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 9
  %146 = load i64, i64* %145, align 8
  %147 = call i64 @mz_crc32(i64 0, i8* %144, i64 %146)
  %148 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 7
  %149 = load i32, i32* %148, align 8
  %150 = zext i32 %149 to i64
  %151 = icmp eq i64 %147, %150
  br label %152

; <label>:152                                     ; preds = %143, %139
  %153 = phi i1 [ true, %139 ], [ %151, %143 ]
  %154 = zext i1 %153 to i32
  store i32 %154, i32* %1, align 4
  br label %323

; <label>:155                                     ; preds = %121
  br label %156

; <label>:156                                     ; preds = %155
  %157 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %inflator, i32 0, i32 0
  store i32 0, i32* %157, align 8
  br label %158

; <label>:158                                     ; preds = %156
  %159 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %160 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %159, i32 0, i32 12
  %161 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %160, align 8
  %162 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %161, i32 0, i32 4
  %163 = load i8*, i8** %162, align 8
  %164 = icmp ne i8* %163, null
  br i1 %164, label %165, label %175

; <label>:165                                     ; preds = %158
  %166 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %167 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %166, i32 0, i32 12
  %168 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %167, align 8
  %169 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %168, i32 0, i32 4
  %170 = load i8*, i8** %169, align 8
  %171 = load i64, i64* %cur_file_ofs, align 8
  %172 = getelementptr inbounds i8, i8* %170, i64 %171
  store i8* %172, i8** %pRead_buf, align 8
  %173 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 8
  %174 = load i64, i64* %173, align 8
  store i64 %174, i64* %read_buf_avail, align 8
  store i64 %174, i64* %read_buf_size, align 8
  store i64 0, i64* %comp_remaining, align 8
  br label %211

; <label>:175                                     ; preds = %158
  %176 = load i8*, i8** %7, align 8
  %177 = icmp ne i8* %176, null
  br i1 %177, label %178, label %187

; <label>:178                                     ; preds = %175
  %179 = load i64, i64* %8, align 8
  %180 = icmp ne i64 %179, 0
  br i1 %180, label %182, label %181

; <label>:181                                     ; preds = %178
  store i32 0, i32* %1, align 4
  br label %323

; <label>:182                                     ; preds = %178
  %183 = load i8*, i8** %7, align 8
  store i8* %183, i8** %pRead_buf, align 8
  %184 = load i64, i64* %8, align 8
  store i64 %184, i64* %read_buf_size, align 8
  store i64 0, i64* %read_buf_avail, align 8
  %185 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 8
  %186 = load i64, i64* %185, align 8
  store i64 %186, i64* %comp_remaining, align 8
  br label %210

; <label>:187                                     ; preds = %175
  %188 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 8
  %189 = load i64, i64* %188, align 8
  %190 = icmp ult i64 %189, 65536
  br i1 %190, label %191, label %194

; <label>:191                                     ; preds = %187
  %192 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 8
  %193 = load i64, i64* %192, align 8
  br label %195

; <label>:194                                     ; preds = %187
  br label %195

; <label>:195                                     ; preds = %194, %191
  %196 = phi i64 [ %193, %191 ], [ 65536, %194 ]
  store i64 %196, i64* %read_buf_size, align 8
  %197 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %198 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %197, i32 0, i32 5
  %199 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %198, align 8
  %200 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %201 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %200, i32 0, i32 8
  %202 = load i8*, i8** %201, align 8
  %203 = load i64, i64* %read_buf_size, align 8
  %204 = call i8* %199(i8* %202, i64 1, i64 %203)
  store i8* %204, i8** %pRead_buf, align 8
  %205 = icmp eq i8* null, %204
  br i1 %205, label %206, label %207

; <label>:206                                     ; preds = %195
  store i32 0, i32* %1, align 4
  br label %323

; <label>:207                                     ; preds = %195
  store i64 0, i64* %read_buf_avail, align 8
  %208 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 8
  %209 = load i64, i64* %208, align 8
  store i64 %209, i64* %comp_remaining, align 8
  br label %210

; <label>:210                                     ; preds = %207, %182
  br label %211

; <label>:211                                     ; preds = %210, %165
  br label %212

; <label>:212                                     ; preds = %279, %211
  %213 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 9
  %214 = load i64, i64* %213, align 8
  %215 = load i64, i64* %out_buf_ofs, align 8
  %216 = sub i64 %214, %215
  store i64 %216, i64* %out_buf_size, align 8
  %217 = load i64, i64* %read_buf_avail, align 8
  %218 = icmp ne i64 %217, 0
  br i1 %218, label %256, label %219

; <label>:219                                     ; preds = %212
  %220 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %221 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %220, i32 0, i32 12
  %222 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %221, align 8
  %223 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %222, i32 0, i32 4
  %224 = load i8*, i8** %223, align 8
  %225 = icmp ne i8* %224, null
  br i1 %225, label %256, label %226

; <label>:226                                     ; preds = %219
  %227 = load i64, i64* %read_buf_size, align 8
  %228 = load i64, i64* %comp_remaining, align 8
  %229 = icmp ult i64 %227, %228
  br i1 %229, label %230, label %232

; <label>:230                                     ; preds = %226
  %231 = load i64, i64* %read_buf_size, align 8
  br label %234

; <label>:232                                     ; preds = %226
  %233 = load i64, i64* %comp_remaining, align 8
  br label %234

; <label>:234                                     ; preds = %232, %230
  %235 = phi i64 [ %231, %230 ], [ %233, %232 ]
  store i64 %235, i64* %read_buf_avail, align 8
  %236 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %237 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %236, i32 0, i32 9
  %238 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %237, align 8
  %239 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %240 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %239, i32 0, i32 11
  %241 = load i8*, i8** %240, align 8
  %242 = load i64, i64* %cur_file_ofs, align 8
  %243 = load i8*, i8** %pRead_buf, align 8
  %244 = load i64, i64* %read_buf_avail, align 8
  %245 = call i64 %238(i8* %241, i64 %242, i8* %243, i64 %244)
  %246 = load i64, i64* %read_buf_avail, align 8
  %247 = icmp ne i64 %245, %246
  br i1 %247, label %248, label %249

; <label>:248                                     ; preds = %234
  store i32 -1, i32* %status, align 4
  br label %282

; <label>:249                                     ; preds = %234
  %250 = load i64, i64* %read_buf_avail, align 8
  %251 = load i64, i64* %cur_file_ofs, align 8
  %252 = add i64 %251, %250
  store i64 %252, i64* %cur_file_ofs, align 8
  %253 = load i64, i64* %read_buf_avail, align 8
  %254 = load i64, i64* %comp_remaining, align 8
  %255 = sub i64 %254, %253
  store i64 %255, i64* %comp_remaining, align 8
  store i64 0, i64* %read_buf_ofs, align 8
  br label %256

; <label>:256                                     ; preds = %249, %219, %212
  %257 = load i64, i64* %read_buf_avail, align 8
  store i64 %257, i64* %in_buf_size, align 8
  %258 = load i8*, i8** %pRead_buf, align 8
  %259 = load i64, i64* %read_buf_ofs, align 8
  %260 = getelementptr inbounds i8, i8* %258, i64 %259
  %261 = load i8*, i8** %4, align 8
  %262 = load i8*, i8** %4, align 8
  %263 = load i64, i64* %out_buf_ofs, align 8
  %264 = getelementptr inbounds i8, i8* %262, i64 %263
  %265 = load i64, i64* %comp_remaining, align 8
  %266 = icmp ne i64 %265, 0
  %267 = select i1 %266, i32 2, i32 0
  %268 = or i32 4, %267
  %269 = call i32 @tinfl_decompress(%struct.tinfl_decompressor_tag* %inflator, i8* %260, i64* %in_buf_size, i8* %261, i8* %264, i64* %out_buf_size, i32 %268)
  store i32 %269, i32* %status, align 4
  %270 = load i64, i64* %in_buf_size, align 8
  %271 = load i64, i64* %read_buf_avail, align 8
  %272 = sub i64 %271, %270
  store i64 %272, i64* %read_buf_avail, align 8
  %273 = load i64, i64* %in_buf_size, align 8
  %274 = load i64, i64* %read_buf_ofs, align 8
  %275 = add i64 %274, %273
  store i64 %275, i64* %read_buf_ofs, align 8
  %276 = load i64, i64* %out_buf_size, align 8
  %277 = load i64, i64* %out_buf_ofs, align 8
  %278 = add i64 %277, %276
  store i64 %278, i64* %out_buf_ofs, align 8
  br label %279

; <label>:279                                     ; preds = %256
  %280 = load i32, i32* %status, align 4
  %281 = icmp eq i32 %280, 1
  br i1 %281, label %212, label %282

; <label>:282                                     ; preds = %279, %248
  %283 = load i32, i32* %status, align 4
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %301

; <label>:285                                     ; preds = %282
  %286 = load i64, i64* %out_buf_ofs, align 8
  %287 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 9
  %288 = load i64, i64* %287, align 8
  %289 = icmp ne i64 %286, %288
  br i1 %289, label %299, label %290

; <label>:290                                     ; preds = %285
  %291 = load i8*, i8** %4, align 8
  %292 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 9
  %293 = load i64, i64* %292, align 8
  %294 = call i64 @mz_crc32(i64 0, i8* %291, i64 %293)
  %295 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 7
  %296 = load i32, i32* %295, align 8
  %297 = zext i32 %296 to i64
  %298 = icmp ne i64 %294, %297
  br i1 %298, label %299, label %300

; <label>:299                                     ; preds = %290, %285
  store i32 -1, i32* %status, align 4
  br label %300

; <label>:300                                     ; preds = %299, %290
  br label %301

; <label>:301                                     ; preds = %300, %282
  %302 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %303 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %302, i32 0, i32 12
  %304 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %303, align 8
  %305 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %304, i32 0, i32 4
  %306 = load i8*, i8** %305, align 8
  %307 = icmp ne i8* %306, null
  br i1 %307, label %319, label %308

; <label>:308                                     ; preds = %301
  %309 = load i8*, i8** %7, align 8
  %310 = icmp ne i8* %309, null
  br i1 %310, label %319, label %311

; <label>:311                                     ; preds = %308
  %312 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %313 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %312, i32 0, i32 6
  %314 = load void (i8*, i8*)*, void (i8*, i8*)** %313, align 8
  %315 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %316 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %315, i32 0, i32 8
  %317 = load i8*, i8** %316, align 8
  %318 = load i8*, i8** %pRead_buf, align 8
  call void %314(i8* %317, i8* %318)
  br label %319

; <label>:319                                     ; preds = %311, %308, %301
  %320 = load i32, i32* %status, align 4
  %321 = icmp eq i32 %320, 0
  %322 = zext i1 %321 to i32
  store i32 %322, i32* %1, align 4
  br label %323

; <label>:323                                     ; preds = %319, %206, %181, %152, %138, %116, %91, %85, %71, %55, %40, %33, %27, %22, %16
  %324 = load i32, i32* %1, align 4
  ret i32 %324
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_reader_extract_file_to_mem_no_alloc(%struct.mz_zip_archive_tag* %pZip, i8* %pFilename, i8* %pBuf, i64 %buf_size, i32 %flags, i8* %pUser_read_buf, i64 %user_read_buf_size) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %file_index = alloca i32, align 4
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  store i8* %pFilename, i8** %3, align 8
  store i8* %pBuf, i8** %4, align 8
  store i64 %buf_size, i64* %5, align 8
  store i32 %flags, i32* %6, align 4
  store i8* %pUser_read_buf, i8** %7, align 8
  store i64 %user_read_buf_size, i64* %8, align 8
  %9 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %10 = load i8*, i8** %3, align 8
  %11 = load i32, i32* %6, align 4
  %12 = call i32 @mz_zip_reader_locate_file(%struct.mz_zip_archive_tag* %9, i8* %10, i8* null, i32 %11)
  store i32 %12, i32* %file_index, align 4
  %13 = load i32, i32* %file_index, align 4
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %15, label %16

; <label>:15                                      ; preds = %0
  store i32 0, i32* %1, align 4
  br label %25

; <label>:16                                      ; preds = %0
  %17 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %18 = load i32, i32* %file_index, align 4
  %19 = load i8*, i8** %4, align 8
  %20 = load i64, i64* %5, align 8
  %21 = load i32, i32* %6, align 4
  %22 = load i8*, i8** %7, align 8
  %23 = load i64, i64* %8, align 8
  %24 = call i32 @mz_zip_reader_extract_to_mem_no_alloc(%struct.mz_zip_archive_tag* %17, i32 %18, i8* %19, i64 %20, i32 %21, i8* %22, i64 %23)
  store i32 %24, i32* %1, align 4
  br label %25

; <label>:25                                      ; preds = %16, %15
  %26 = load i32, i32* %1, align 4
  ret i32 %26
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_reader_extract_to_mem(%struct.mz_zip_archive_tag* %pZip, i32 %file_index, i8* %pBuf, i64 %buf_size, i32 %flags) #0 {
  %1 = alloca %struct.mz_zip_archive_tag*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %1, align 8
  store i32 %file_index, i32* %2, align 4
  store i8* %pBuf, i8** %3, align 8
  store i64 %buf_size, i64* %4, align 8
  store i32 %flags, i32* %5, align 4
  %6 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %1, align 8
  %7 = load i32, i32* %2, align 4
  %8 = load i8*, i8** %3, align 8
  %9 = load i64, i64* %4, align 8
  %10 = load i32, i32* %5, align 4
  %11 = call i32 @mz_zip_reader_extract_to_mem_no_alloc(%struct.mz_zip_archive_tag* %6, i32 %7, i8* %8, i64 %9, i32 %10, i8* null, i64 0)
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_reader_extract_file_to_mem(%struct.mz_zip_archive_tag* %pZip, i8* %pFilename, i8* %pBuf, i64 %buf_size, i32 %flags) #0 {
  %1 = alloca %struct.mz_zip_archive_tag*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %1, align 8
  store i8* %pFilename, i8** %2, align 8
  store i8* %pBuf, i8** %3, align 8
  store i64 %buf_size, i64* %4, align 8
  store i32 %flags, i32* %5, align 4
  %6 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %1, align 8
  %7 = load i8*, i8** %2, align 8
  %8 = load i8*, i8** %3, align 8
  %9 = load i64, i64* %4, align 8
  %10 = load i32, i32* %5, align 4
  %11 = call i32 @mz_zip_reader_extract_file_to_mem_no_alloc(%struct.mz_zip_archive_tag* %6, i8* %7, i8* %8, i64 %9, i32 %10, i8* null, i64 0)
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define i8* @mz_zip_reader_extract_to_heap(%struct.mz_zip_archive_tag* %pZip, i32 %file_index, i64* %pSize, i32 %flags) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %struct.mz_zip_archive_tag*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64*, align 8
  %8 = alloca i32, align 4
  %comp_size = alloca i64, align 8
  %uncomp_size = alloca i64, align 8
  %alloc_size = alloca i64, align 8
  %p = alloca i8*, align 8
  %pBuf = alloca i8*, align 8
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %5, align 8
  store i32 %file_index, i32* %6, align 4
  store i64* %pSize, i64** %7, align 8
  store i32 %flags, i32* %8, align 4
  %9 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %5, align 8
  %10 = load i32, i32* %6, align 4
  store %struct.mz_zip_archive_tag* %9, %struct.mz_zip_archive_tag** %2, align 8
  store i32 %10, i32* %3, align 4
  %11 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %12 = icmp ne %struct.mz_zip_archive_tag* %11, null
  br i1 %12, label %13, label %29

; <label>:13                                      ; preds = %0
  %14 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %15 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %14, i32 0, i32 12
  %16 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %15, align 8
  %17 = icmp ne %struct.mz_zip_internal_state_tag* %16, null
  br i1 %17, label %18, label %29

; <label>:18                                      ; preds = %13
  %19 = load i32, i32* %3, align 4
  %20 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %21 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %20, i32 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp uge i32 %19, %22
  br i1 %23, label %29, label %24

; <label>:24                                      ; preds = %18
  %25 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %26 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %25, i32 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = icmp ne i32 %27, 1
  br i1 %28, label %29, label %30

; <label>:29                                      ; preds = %24, %18, %13, %0
  store i8* null, i8** %1, align 8
  br label %mz_zip_reader_get_cdh.exit

; <label>:30                                      ; preds = %24
  %31 = load i32, i32* %3, align 4
  %32 = zext i32 %31 to i64
  %33 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %34 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %33, i32 0, i32 12
  %35 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %34, align 8
  %36 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %35, i32 0, i32 1
  %37 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %36, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast i8* %38 to i32*
  %40 = getelementptr inbounds i32, i32* %39, i64 %32
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %44 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %43, i32 0, i32 12
  %45 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %44, align 8
  %46 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %45, i32 0, i32 0
  %47 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %46, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %42
  store i8* %49, i8** %1, align 8
  br label %mz_zip_reader_get_cdh.exit

mz_zip_reader_get_cdh.exit:                       ; preds = %29, %30
  %50 = load i8*, i8** %1, align 8
  store i8* %50, i8** %p, align 8
  %51 = load i64*, i64** %7, align 8
  %52 = icmp ne i64* %51, null
  br i1 %52, label %53, label %55

; <label>:53                                      ; preds = %mz_zip_reader_get_cdh.exit
  %54 = load i64*, i64** %7, align 8
  store i64 0, i64* %54, align 8
  br label %55

; <label>:55                                      ; preds = %53, %mz_zip_reader_get_cdh.exit
  %56 = load i8*, i8** %p, align 8
  %57 = icmp ne i8* %56, null
  br i1 %57, label %59, label %58

; <label>:58                                      ; preds = %55
  store i8* null, i8** %4, align 8
  br label %113

; <label>:59                                      ; preds = %55
  %60 = load i8*, i8** %p, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 20
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i64
  store i64 %64, i64* %comp_size, align 8
  %65 = load i8*, i8** %p, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 24
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i64
  store i64 %69, i64* %uncomp_size, align 8
  %70 = load i32, i32* %8, align 4
  %71 = and i32 %70, 1024
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %75

; <label>:73                                      ; preds = %59
  %74 = load i64, i64* %comp_size, align 8
  br label %77

; <label>:75                                      ; preds = %59
  %76 = load i64, i64* %uncomp_size, align 8
  br label %77

; <label>:77                                      ; preds = %75, %73
  %78 = phi i64 [ %74, %73 ], [ %76, %75 ]
  store i64 %78, i64* %alloc_size, align 8
  %79 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %5, align 8
  %80 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %79, i32 0, i32 5
  %81 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %80, align 8
  %82 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %5, align 8
  %83 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %82, i32 0, i32 8
  %84 = load i8*, i8** %83, align 8
  %85 = load i64, i64* %alloc_size, align 8
  %86 = call i8* %81(i8* %84, i64 1, i64 %85)
  store i8* %86, i8** %pBuf, align 8
  %87 = icmp eq i8* null, %86
  br i1 %87, label %88, label %89

; <label>:88                                      ; preds = %77
  store i8* null, i8** %4, align 8
  br label %113

; <label>:89                                      ; preds = %77
  %90 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %5, align 8
  %91 = load i32, i32* %6, align 4
  %92 = load i8*, i8** %pBuf, align 8
  %93 = load i64, i64* %alloc_size, align 8
  %94 = load i32, i32* %8, align 4
  %95 = call i32 @mz_zip_reader_extract_to_mem(%struct.mz_zip_archive_tag* %90, i32 %91, i8* %92, i64 %93, i32 %94)
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %105, label %97

; <label>:97                                      ; preds = %89
  %98 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %5, align 8
  %99 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %98, i32 0, i32 6
  %100 = load void (i8*, i8*)*, void (i8*, i8*)** %99, align 8
  %101 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %5, align 8
  %102 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %101, i32 0, i32 8
  %103 = load i8*, i8** %102, align 8
  %104 = load i8*, i8** %pBuf, align 8
  call void %100(i8* %103, i8* %104)
  store i8* null, i8** %4, align 8
  br label %113

; <label>:105                                     ; preds = %89
  %106 = load i64*, i64** %7, align 8
  %107 = icmp ne i64* %106, null
  br i1 %107, label %108, label %111

; <label>:108                                     ; preds = %105
  %109 = load i64, i64* %alloc_size, align 8
  %110 = load i64*, i64** %7, align 8
  store i64 %109, i64* %110, align 8
  br label %111

; <label>:111                                     ; preds = %108, %105
  %112 = load i8*, i8** %pBuf, align 8
  store i8* %112, i8** %4, align 8
  br label %113

; <label>:113                                     ; preds = %111, %97, %88, %58
  %114 = load i8*, i8** %4, align 8
  ret i8* %114
}

; Function Attrs: nounwind uwtable
define i8* @mz_zip_reader_extract_file_to_heap(%struct.mz_zip_archive_tag* %pZip, i8* %pFilename, i64* %pSize, i32 %flags) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i32, align 4
  %file_index = alloca i32, align 4
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  store i8* %pFilename, i8** %3, align 8
  store i64* %pSize, i64** %4, align 8
  store i32 %flags, i32* %5, align 4
  %6 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = load i32, i32* %5, align 4
  %9 = call i32 @mz_zip_reader_locate_file(%struct.mz_zip_archive_tag* %6, i8* %7, i8* null, i32 %8)
  store i32 %9, i32* %file_index, align 4
  %10 = load i32, i32* %file_index, align 4
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %18

; <label>:12                                      ; preds = %0
  %13 = load i64*, i64** %4, align 8
  %14 = icmp ne i64* %13, null
  br i1 %14, label %15, label %17

; <label>:15                                      ; preds = %12
  %16 = load i64*, i64** %4, align 8
  store i64 0, i64* %16, align 8
  br label %17

; <label>:17                                      ; preds = %15, %12
  store i8* null, i8** %1, align 8
  br label %24

; <label>:18                                      ; preds = %0
  %19 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %20 = load i32, i32* %file_index, align 4
  %21 = load i64*, i64** %4, align 8
  %22 = load i32, i32* %5, align 4
  %23 = call i8* @mz_zip_reader_extract_to_heap(%struct.mz_zip_archive_tag* %19, i32 %20, i64* %21, i32 %22)
  store i8* %23, i8** %1, align 8
  br label %24

; <label>:24                                      ; preds = %18, %17
  %25 = load i8*, i8** %1, align 8
  ret i8* %25
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_reader_extract_to_callback(%struct.mz_zip_archive_tag* %pZip, i32 %file_index, i64 (i8*, i64, i8*, i64)* %pCallback, i8* %pOpaque, i32 %flags) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i64 (i8*, i64, i8*, i64)*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %status = alloca i32, align 4
  %file_crc32 = alloca i32, align 4
  %read_buf_size = alloca i64, align 8
  %read_buf_ofs = alloca i64, align 8
  %read_buf_avail = alloca i64, align 8
  %comp_remaining = alloca i64, align 8
  %out_buf_ofs = alloca i64, align 8
  %cur_file_ofs = alloca i64, align 8
  %file_stat = alloca %struct.mz_zip_archive_file_stat, align 8
  %pRead_buf = alloca i8*, align 8
  %pWrite_buf = alloca i8*, align 8
  %local_header_u32 = alloca [8 x i32], align 16
  %pLocal_header = alloca i8*, align 8
  %inflator = alloca %struct.tinfl_decompressor_tag, align 8
  %pWrite_buf_cur = alloca i8*, align 8
  %in_buf_size = alloca i64, align 8
  %out_buf_size = alloca i64, align 8
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  store i32 %file_index, i32* %3, align 4
  store i64 (i8*, i64, i8*, i64)* %pCallback, i64 (i8*, i64, i8*, i64)** %4, align 8
  store i8* %pOpaque, i8** %5, align 8
  store i32 %flags, i32* %6, align 4
  store i32 0, i32* %status, align 4
  store i32 0, i32* %file_crc32, align 4
  store i64 0, i64* %read_buf_ofs, align 8
  store i64 0, i64* %out_buf_ofs, align 8
  store i8* null, i8** %pRead_buf, align 8
  store i8* null, i8** %pWrite_buf, align 8
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* %local_header_u32, i32 0, i32 0
  %8 = bitcast i32* %7 to i8*
  store i8* %8, i8** %pLocal_header, align 8
  %9 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %10 = load i32, i32* %3, align 4
  %11 = call i32 @mz_zip_reader_file_stat(%struct.mz_zip_archive_tag* %9, i32 %10, %struct.mz_zip_archive_file_stat* %file_stat)
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %14, label %13

; <label>:13                                      ; preds = %0
  store i32 0, i32* %1, align 4
  br label %406

; <label>:14                                      ; preds = %0
  %15 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 8
  %16 = load i64, i64* %15, align 8
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %19, label %18

; <label>:18                                      ; preds = %14
  store i32 1, i32* %1, align 4
  br label %406

; <label>:19                                      ; preds = %14
  %20 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %21 = load i32, i32* %3, align 4
  %22 = call i32 @mz_zip_reader_is_file_a_directory(%struct.mz_zip_archive_tag* %20, i32 %21)
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %25

; <label>:24                                      ; preds = %19
  store i32 1, i32* %1, align 4
  br label %406

; <label>:25                                      ; preds = %19
  %26 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 4
  %27 = load i16, i16* %26, align 4
  %28 = zext i16 %27 to i32
  %29 = and i32 %28, 33
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %32

; <label>:31                                      ; preds = %25
  store i32 0, i32* %1, align 4
  br label %406

; <label>:32                                      ; preds = %25
  %33 = load i32, i32* %6, align 4
  %34 = and i32 %33, 1024
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %47, label %36

; <label>:36                                      ; preds = %32
  %37 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 5
  %38 = load i16, i16* %37, align 2
  %39 = zext i16 %38 to i32
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %47

; <label>:41                                      ; preds = %36
  %42 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 5
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %43 to i32
  %45 = icmp ne i32 %44, 8
  br i1 %45, label %46, label %47

; <label>:46                                      ; preds = %41
  store i32 0, i32* %1, align 4
  br label %406

; <label>:47                                      ; preds = %41, %36, %32
  %48 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 12
  %49 = load i64, i64* %48, align 8
  store i64 %49, i64* %cur_file_ofs, align 8
  %50 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %51 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %50, i32 0, i32 9
  %52 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %51, align 8
  %53 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %54 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %53, i32 0, i32 11
  %55 = load i8*, i8** %54, align 8
  %56 = load i64, i64* %cur_file_ofs, align 8
  %57 = load i8*, i8** %pLocal_header, align 8
  %58 = call i64 %52(i8* %55, i64 %56, i8* %57, i64 30)
  %59 = icmp ne i64 %58, 30
  br i1 %59, label %60, label %61

; <label>:60                                      ; preds = %47
  store i32 0, i32* %1, align 4
  br label %406

; <label>:61                                      ; preds = %47
  %62 = load i8*, i8** %pLocal_header, align 8
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = icmp ne i32 %64, 67324752
  br i1 %65, label %66, label %67

; <label>:66                                      ; preds = %61
  store i32 0, i32* %1, align 4
  br label %406

; <label>:67                                      ; preds = %61
  %68 = load i8*, i8** %pLocal_header, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 26
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = zext i16 %71 to i32
  %73 = add nsw i32 30, %72
  %74 = load i8*, i8** %pLocal_header, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 28
  %76 = bitcast i8* %75 to i16*
  %77 = load i16, i16* %76, align 2
  %78 = zext i16 %77 to i32
  %79 = add nsw i32 %73, %78
  %80 = sext i32 %79 to i64
  %81 = load i64, i64* %cur_file_ofs, align 8
  %82 = add i64 %81, %80
  store i64 %82, i64* %cur_file_ofs, align 8
  %83 = load i64, i64* %cur_file_ofs, align 8
  %84 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 8
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %83, %85
  %87 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %88 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %87, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = icmp ugt i64 %86, %89
  br i1 %90, label %91, label %92

; <label>:91                                      ; preds = %67
  store i32 0, i32* %1, align 4
  br label %406

; <label>:92                                      ; preds = %67
  %93 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %94 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %93, i32 0, i32 12
  %95 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %94, align 8
  %96 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %95, i32 0, i32 4
  %97 = load i8*, i8** %96, align 8
  %98 = icmp ne i8* %97, null
  br i1 %98, label %99, label %109

; <label>:99                                      ; preds = %92
  %100 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %101 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %100, i32 0, i32 12
  %102 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %101, align 8
  %103 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %102, i32 0, i32 4
  %104 = load i8*, i8** %103, align 8
  %105 = load i64, i64* %cur_file_ofs, align 8
  %106 = getelementptr inbounds i8, i8* %104, i64 %105
  store i8* %106, i8** %pRead_buf, align 8
  %107 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 8
  %108 = load i64, i64* %107, align 8
  store i64 %108, i64* %read_buf_avail, align 8
  store i64 %108, i64* %read_buf_size, align 8
  store i64 0, i64* %comp_remaining, align 8
  br label %132

; <label>:109                                     ; preds = %92
  %110 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 8
  %111 = load i64, i64* %110, align 8
  %112 = icmp ult i64 %111, 65536
  br i1 %112, label %113, label %116

; <label>:113                                     ; preds = %109
  %114 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 8
  %115 = load i64, i64* %114, align 8
  br label %117

; <label>:116                                     ; preds = %109
  br label %117

; <label>:117                                     ; preds = %116, %113
  %118 = phi i64 [ %115, %113 ], [ 65536, %116 ]
  store i64 %118, i64* %read_buf_size, align 8
  %119 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %120 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %119, i32 0, i32 5
  %121 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %120, align 8
  %122 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %123 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %122, i32 0, i32 8
  %124 = load i8*, i8** %123, align 8
  %125 = load i64, i64* %read_buf_size, align 8
  %126 = call i8* %121(i8* %124, i64 1, i64 %125)
  store i8* %126, i8** %pRead_buf, align 8
  %127 = icmp eq i8* null, %126
  br i1 %127, label %128, label %129

; <label>:128                                     ; preds = %117
  store i32 0, i32* %1, align 4
  br label %406

; <label>:129                                     ; preds = %117
  store i64 0, i64* %read_buf_avail, align 8
  %130 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 8
  %131 = load i64, i64* %130, align 8
  store i64 %131, i64* %comp_remaining, align 8
  br label %132

; <label>:132                                     ; preds = %129, %99
  %133 = load i32, i32* %6, align 4
  %134 = and i32 %133, 1024
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %140, label %136

; <label>:136                                     ; preds = %132
  %137 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 5
  %138 = load i16, i16* %137, align 2
  %139 = icmp ne i16 %138, 0
  br i1 %139, label %241, label %140

; <label>:140                                     ; preds = %136, %132
  %141 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %142 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %141, i32 0, i32 12
  %143 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %142, align 8
  %144 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %143, i32 0, i32 4
  %145 = load i8*, i8** %144, align 8
  %146 = icmp ne i8* %145, null
  br i1 %146, label %147, label %181

; <label>:147                                     ; preds = %140
  %148 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %4, align 8
  %149 = load i8*, i8** %5, align 8
  %150 = load i64, i64* %out_buf_ofs, align 8
  %151 = load i8*, i8** %pRead_buf, align 8
  %152 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 8
  %153 = load i64, i64* %152, align 8
  %154 = call i64 %148(i8* %149, i64 %150, i8* %151, i64 %153)
  %155 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 8
  %156 = load i64, i64* %155, align 8
  %157 = icmp ne i64 %154, %156
  br i1 %157, label %158, label %159

; <label>:158                                     ; preds = %147
  store i32 -1, i32* %status, align 4
  br label %172

; <label>:159                                     ; preds = %147
  %160 = load i32, i32* %6, align 4
  %161 = and i32 %160, 1024
  %162 = icmp ne i32 %161, 0
  br i1 %162, label %171, label %163

; <label>:163                                     ; preds = %159
  %164 = load i32, i32* %file_crc32, align 4
  %165 = zext i32 %164 to i64
  %166 = load i8*, i8** %pRead_buf, align 8
  %167 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 8
  %168 = load i64, i64* %167, align 8
  %169 = call i64 @mz_crc32(i64 %165, i8* %166, i64 %168)
  %170 = trunc i64 %169 to i32
  store i32 %170, i32* %file_crc32, align 4
  br label %171

; <label>:171                                     ; preds = %163, %159
  br label %172

; <label>:172                                     ; preds = %171, %158
  %173 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 8
  %174 = load i64, i64* %173, align 8
  %175 = load i64, i64* %cur_file_ofs, align 8
  %176 = add i64 %175, %174
  store i64 %176, i64* %cur_file_ofs, align 8
  %177 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 8
  %178 = load i64, i64* %177, align 8
  %179 = load i64, i64* %out_buf_ofs, align 8
  %180 = add i64 %179, %178
  store i64 %180, i64* %out_buf_ofs, align 8
  store i64 0, i64* %comp_remaining, align 8
  br label %240

; <label>:181                                     ; preds = %140
  br label %182

; <label>:182                                     ; preds = %229, %181
  %183 = load i64, i64* %comp_remaining, align 8
  %184 = icmp ne i64 %183, 0
  br i1 %184, label %185, label %239

; <label>:185                                     ; preds = %182
  %186 = load i64, i64* %read_buf_size, align 8
  %187 = load i64, i64* %comp_remaining, align 8
  %188 = icmp ult i64 %186, %187
  br i1 %188, label %189, label %191

; <label>:189                                     ; preds = %185
  %190 = load i64, i64* %read_buf_size, align 8
  br label %193

; <label>:191                                     ; preds = %185
  %192 = load i64, i64* %comp_remaining, align 8
  br label %193

; <label>:193                                     ; preds = %191, %189
  %194 = phi i64 [ %190, %189 ], [ %192, %191 ]
  store i64 %194, i64* %read_buf_avail, align 8
  %195 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %196 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %195, i32 0, i32 9
  %197 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %196, align 8
  %198 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %199 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %198, i32 0, i32 11
  %200 = load i8*, i8** %199, align 8
  %201 = load i64, i64* %cur_file_ofs, align 8
  %202 = load i8*, i8** %pRead_buf, align 8
  %203 = load i64, i64* %read_buf_avail, align 8
  %204 = call i64 %197(i8* %200, i64 %201, i8* %202, i64 %203)
  %205 = load i64, i64* %read_buf_avail, align 8
  %206 = icmp ne i64 %204, %205
  br i1 %206, label %207, label %208

; <label>:207                                     ; preds = %193
  store i32 -1, i32* %status, align 4
  br label %239

; <label>:208                                     ; preds = %193
  %209 = load i32, i32* %6, align 4
  %210 = and i32 %209, 1024
  %211 = icmp ne i32 %210, 0
  br i1 %211, label %219, label %212

; <label>:212                                     ; preds = %208
  %213 = load i32, i32* %file_crc32, align 4
  %214 = zext i32 %213 to i64
  %215 = load i8*, i8** %pRead_buf, align 8
  %216 = load i64, i64* %read_buf_avail, align 8
  %217 = call i64 @mz_crc32(i64 %214, i8* %215, i64 %216)
  %218 = trunc i64 %217 to i32
  store i32 %218, i32* %file_crc32, align 4
  br label %219

; <label>:219                                     ; preds = %212, %208
  %220 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %4, align 8
  %221 = load i8*, i8** %5, align 8
  %222 = load i64, i64* %out_buf_ofs, align 8
  %223 = load i8*, i8** %pRead_buf, align 8
  %224 = load i64, i64* %read_buf_avail, align 8
  %225 = call i64 %220(i8* %221, i64 %222, i8* %223, i64 %224)
  %226 = load i64, i64* %read_buf_avail, align 8
  %227 = icmp ne i64 %225, %226
  br i1 %227, label %228, label %229

; <label>:228                                     ; preds = %219
  store i32 -1, i32* %status, align 4
  br label %239

; <label>:229                                     ; preds = %219
  %230 = load i64, i64* %read_buf_avail, align 8
  %231 = load i64, i64* %cur_file_ofs, align 8
  %232 = add i64 %231, %230
  store i64 %232, i64* %cur_file_ofs, align 8
  %233 = load i64, i64* %read_buf_avail, align 8
  %234 = load i64, i64* %out_buf_ofs, align 8
  %235 = add i64 %234, %233
  store i64 %235, i64* %out_buf_ofs, align 8
  %236 = load i64, i64* %read_buf_avail, align 8
  %237 = load i64, i64* %comp_remaining, align 8
  %238 = sub i64 %237, %236
  store i64 %238, i64* %comp_remaining, align 8
  br label %182

; <label>:239                                     ; preds = %228, %207, %182
  br label %240

; <label>:240                                     ; preds = %239, %172
  br label %357

; <label>:241                                     ; preds = %136
  br label %242

; <label>:242                                     ; preds = %241
  %243 = getelementptr inbounds %struct.tinfl_decompressor_tag, %struct.tinfl_decompressor_tag* %inflator, i32 0, i32 0
  store i32 0, i32* %243, align 8
  br label %244

; <label>:244                                     ; preds = %242
  %245 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %246 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %245, i32 0, i32 5
  %247 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %246, align 8
  %248 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %249 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %248, i32 0, i32 8
  %250 = load i8*, i8** %249, align 8
  %251 = call i8* %247(i8* %250, i64 1, i64 32768)
  store i8* %251, i8** %pWrite_buf, align 8
  %252 = icmp eq i8* null, %251
  br i1 %252, label %253, label %254

; <label>:253                                     ; preds = %244
  store i32 -1, i32* %status, align 4
  br label %356

; <label>:254                                     ; preds = %244
  br label %255

; <label>:255                                     ; preds = %353, %254
  %256 = load i8*, i8** %pWrite_buf, align 8
  %257 = load i64, i64* %out_buf_ofs, align 8
  %258 = and i64 %257, 32767
  %259 = getelementptr inbounds i8, i8* %256, i64 %258
  store i8* %259, i8** %pWrite_buf_cur, align 8
  %260 = load i64, i64* %out_buf_ofs, align 8
  %261 = and i64 %260, 32767
  %262 = sub i64 32768, %261
  store i64 %262, i64* %out_buf_size, align 8
  %263 = load i64, i64* %read_buf_avail, align 8
  %264 = icmp ne i64 %263, 0
  br i1 %264, label %302, label %265

; <label>:265                                     ; preds = %255
  %266 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %267 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %266, i32 0, i32 12
  %268 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %267, align 8
  %269 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %268, i32 0, i32 4
  %270 = load i8*, i8** %269, align 8
  %271 = icmp ne i8* %270, null
  br i1 %271, label %302, label %272

; <label>:272                                     ; preds = %265
  %273 = load i64, i64* %read_buf_size, align 8
  %274 = load i64, i64* %comp_remaining, align 8
  %275 = icmp ult i64 %273, %274
  br i1 %275, label %276, label %278

; <label>:276                                     ; preds = %272
  %277 = load i64, i64* %read_buf_size, align 8
  br label %280

; <label>:278                                     ; preds = %272
  %279 = load i64, i64* %comp_remaining, align 8
  br label %280

; <label>:280                                     ; preds = %278, %276
  %281 = phi i64 [ %277, %276 ], [ %279, %278 ]
  store i64 %281, i64* %read_buf_avail, align 8
  %282 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %283 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %282, i32 0, i32 9
  %284 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %283, align 8
  %285 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %286 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %285, i32 0, i32 11
  %287 = load i8*, i8** %286, align 8
  %288 = load i64, i64* %cur_file_ofs, align 8
  %289 = load i8*, i8** %pRead_buf, align 8
  %290 = load i64, i64* %read_buf_avail, align 8
  %291 = call i64 %284(i8* %287, i64 %288, i8* %289, i64 %290)
  %292 = load i64, i64* %read_buf_avail, align 8
  %293 = icmp ne i64 %291, %292
  br i1 %293, label %294, label %295

; <label>:294                                     ; preds = %280
  store i32 -1, i32* %status, align 4
  br label %355

; <label>:295                                     ; preds = %280
  %296 = load i64, i64* %read_buf_avail, align 8
  %297 = load i64, i64* %cur_file_ofs, align 8
  %298 = add i64 %297, %296
  store i64 %298, i64* %cur_file_ofs, align 8
  %299 = load i64, i64* %read_buf_avail, align 8
  %300 = load i64, i64* %comp_remaining, align 8
  %301 = sub i64 %300, %299
  store i64 %301, i64* %comp_remaining, align 8
  store i64 0, i64* %read_buf_ofs, align 8
  br label %302

; <label>:302                                     ; preds = %295, %265, %255
  %303 = load i64, i64* %read_buf_avail, align 8
  store i64 %303, i64* %in_buf_size, align 8
  %304 = load i8*, i8** %pRead_buf, align 8
  %305 = load i64, i64* %read_buf_ofs, align 8
  %306 = getelementptr inbounds i8, i8* %304, i64 %305
  %307 = load i8*, i8** %pWrite_buf, align 8
  %308 = load i8*, i8** %pWrite_buf_cur, align 8
  %309 = load i64, i64* %comp_remaining, align 8
  %310 = icmp ne i64 %309, 0
  %311 = select i1 %310, i32 2, i32 0
  %312 = call i32 @tinfl_decompress(%struct.tinfl_decompressor_tag* %inflator, i8* %306, i64* %in_buf_size, i8* %307, i8* %308, i64* %out_buf_size, i32 %311)
  store i32 %312, i32* %status, align 4
  %313 = load i64, i64* %in_buf_size, align 8
  %314 = load i64, i64* %read_buf_avail, align 8
  %315 = sub i64 %314, %313
  store i64 %315, i64* %read_buf_avail, align 8
  %316 = load i64, i64* %in_buf_size, align 8
  %317 = load i64, i64* %read_buf_ofs, align 8
  %318 = add i64 %317, %316
  store i64 %318, i64* %read_buf_ofs, align 8
  %319 = load i64, i64* %out_buf_size, align 8
  %320 = icmp ne i64 %319, 0
  br i1 %320, label %321, label %346

; <label>:321                                     ; preds = %302
  %322 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %4, align 8
  %323 = load i8*, i8** %5, align 8
  %324 = load i64, i64* %out_buf_ofs, align 8
  %325 = load i8*, i8** %pWrite_buf_cur, align 8
  %326 = load i64, i64* %out_buf_size, align 8
  %327 = call i64 %322(i8* %323, i64 %324, i8* %325, i64 %326)
  %328 = load i64, i64* %out_buf_size, align 8
  %329 = icmp ne i64 %327, %328
  br i1 %329, label %330, label %331

; <label>:330                                     ; preds = %321
  store i32 -1, i32* %status, align 4
  br label %355

; <label>:331                                     ; preds = %321
  %332 = load i32, i32* %file_crc32, align 4
  %333 = zext i32 %332 to i64
  %334 = load i8*, i8** %pWrite_buf_cur, align 8
  %335 = load i64, i64* %out_buf_size, align 8
  %336 = call i64 @mz_crc32(i64 %333, i8* %334, i64 %335)
  %337 = trunc i64 %336 to i32
  store i32 %337, i32* %file_crc32, align 4
  %338 = load i64, i64* %out_buf_size, align 8
  %339 = load i64, i64* %out_buf_ofs, align 8
  %340 = add i64 %339, %338
  store i64 %340, i64* %out_buf_ofs, align 8
  %341 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 9
  %342 = load i64, i64* %341, align 8
  %343 = icmp ugt i64 %340, %342
  br i1 %343, label %344, label %345

; <label>:344                                     ; preds = %331
  store i32 -1, i32* %status, align 4
  br label %355

; <label>:345                                     ; preds = %331
  br label %346

; <label>:346                                     ; preds = %345, %302
  br label %347

; <label>:347                                     ; preds = %346
  %348 = load i32, i32* %status, align 4
  %349 = icmp eq i32 %348, 1
  br i1 %349, label %353, label %350

; <label>:350                                     ; preds = %347
  %351 = load i32, i32* %status, align 4
  %352 = icmp eq i32 %351, 2
  br label %353

; <label>:353                                     ; preds = %350, %347
  %354 = phi i1 [ true, %347 ], [ %352, %350 ]
  br i1 %354, label %255, label %355

; <label>:355                                     ; preds = %353, %344, %330, %294
  br label %356

; <label>:356                                     ; preds = %355, %253
  br label %357

; <label>:357                                     ; preds = %356, %240
  %358 = load i32, i32* %status, align 4
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %360, label %376

; <label>:360                                     ; preds = %357
  %361 = load i32, i32* %6, align 4
  %362 = and i32 %361, 1024
  %363 = icmp ne i32 %362, 0
  br i1 %363, label %376, label %364

; <label>:364                                     ; preds = %360
  %365 = load i64, i64* %out_buf_ofs, align 8
  %366 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 9
  %367 = load i64, i64* %366, align 8
  %368 = icmp ne i64 %365, %367
  br i1 %368, label %374, label %369

; <label>:369                                     ; preds = %364
  %370 = load i32, i32* %file_crc32, align 4
  %371 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 7
  %372 = load i32, i32* %371, align 8
  %373 = icmp ne i32 %370, %372
  br i1 %373, label %374, label %375

; <label>:374                                     ; preds = %369, %364
  store i32 -1, i32* %status, align 4
  br label %375

; <label>:375                                     ; preds = %374, %369
  br label %376

; <label>:376                                     ; preds = %375, %360, %357
  %377 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %378 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %377, i32 0, i32 12
  %379 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %378, align 8
  %380 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %379, i32 0, i32 4
  %381 = load i8*, i8** %380, align 8
  %382 = icmp ne i8* %381, null
  br i1 %382, label %391, label %383

; <label>:383                                     ; preds = %376
  %384 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %385 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %384, i32 0, i32 6
  %386 = load void (i8*, i8*)*, void (i8*, i8*)** %385, align 8
  %387 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %388 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %387, i32 0, i32 8
  %389 = load i8*, i8** %388, align 8
  %390 = load i8*, i8** %pRead_buf, align 8
  call void %386(i8* %389, i8* %390)
  br label %391

; <label>:391                                     ; preds = %383, %376
  %392 = load i8*, i8** %pWrite_buf, align 8
  %393 = icmp ne i8* %392, null
  br i1 %393, label %394, label %402

; <label>:394                                     ; preds = %391
  %395 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %396 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %395, i32 0, i32 6
  %397 = load void (i8*, i8*)*, void (i8*, i8*)** %396, align 8
  %398 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %399 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %398, i32 0, i32 8
  %400 = load i8*, i8** %399, align 8
  %401 = load i8*, i8** %pWrite_buf, align 8
  call void %397(i8* %400, i8* %401)
  br label %402

; <label>:402                                     ; preds = %394, %391
  %403 = load i32, i32* %status, align 4
  %404 = icmp eq i32 %403, 0
  %405 = zext i1 %404 to i32
  store i32 %405, i32* %1, align 4
  br label %406

; <label>:406                                     ; preds = %402, %128, %91, %66, %60, %46, %31, %24, %18, %13
  %407 = load i32, i32* %1, align 4
  ret i32 %407
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_reader_extract_file_to_callback(%struct.mz_zip_archive_tag* %pZip, i8* %pFilename, i64 (i8*, i64, i8*, i64)* %pCallback, i8* %pOpaque, i32 %flags) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64 (i8*, i64, i8*, i64)*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %file_index = alloca i32, align 4
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  store i8* %pFilename, i8** %3, align 8
  store i64 (i8*, i64, i8*, i64)* %pCallback, i64 (i8*, i64, i8*, i64)** %4, align 8
  store i8* %pOpaque, i8** %5, align 8
  store i32 %flags, i32* %6, align 4
  %7 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %8 = load i8*, i8** %3, align 8
  %9 = load i32, i32* %6, align 4
  %10 = call i32 @mz_zip_reader_locate_file(%struct.mz_zip_archive_tag* %7, i8* %8, i8* null, i32 %9)
  store i32 %10, i32* %file_index, align 4
  %11 = load i32, i32* %file_index, align 4
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %0
  store i32 0, i32* %1, align 4
  br label %21

; <label>:14                                      ; preds = %0
  %15 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %16 = load i32, i32* %file_index, align 4
  %17 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %4, align 8
  %18 = load i8*, i8** %5, align 8
  %19 = load i32, i32* %6, align 4
  %20 = call i32 @mz_zip_reader_extract_to_callback(%struct.mz_zip_archive_tag* %15, i32 %16, i64 (i8*, i64, i8*, i64)* %17, i8* %18, i32 %19)
  store i32 %20, i32* %1, align 4
  br label %21

; <label>:21                                      ; preds = %14, %13
  %22 = load i32, i32* %1, align 4
  ret i32 %22
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_reader_extract_to_file(%struct.mz_zip_archive_tag* %pZip, i32 %file_index, i8* %pDst_filename, i32 %flags) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %status = alloca i32, align 4
  %file_stat = alloca %struct.mz_zip_archive_file_stat, align 8
  %pFile = alloca %struct._IO_FILE*, align 8
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  store i32 %file_index, i32* %3, align 4
  store i8* %pDst_filename, i8** %4, align 8
  store i32 %flags, i32* %5, align 4
  %6 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %7 = load i32, i32* %3, align 4
  %8 = call i32 @mz_zip_reader_file_stat(%struct.mz_zip_archive_tag* %6, i32 %7, %struct.mz_zip_archive_file_stat* %file_stat)
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %11, label %10

; <label>:10                                      ; preds = %0
  store i32 0, i32* %1, align 4
  br label %40

; <label>:11                                      ; preds = %0
  %12 = load i8*, i8** %4, align 8
  %13 = call %struct._IO_FILE* @fopen(i8* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0))
  store %struct._IO_FILE* %13, %struct._IO_FILE** %pFile, align 8
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %pFile, align 8
  %15 = icmp ne %struct._IO_FILE* %14, null
  br i1 %15, label %17, label %16

; <label>:16                                      ; preds = %11
  store i32 0, i32* %1, align 4
  br label %40

; <label>:17                                      ; preds = %11
  %18 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %19 = load i32, i32* %3, align 4
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %pFile, align 8
  %21 = bitcast %struct._IO_FILE* %20 to i8*
  %22 = load i32, i32* %5, align 4
  %23 = call i32 @mz_zip_reader_extract_to_callback(%struct.mz_zip_archive_tag* %18, i32 %19, i64 (i8*, i64, i8*, i64)* @mz_zip_file_write_callback, i8* %21, i32 %22)
  store i32 %23, i32* %status, align 4
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %pFile, align 8
  %25 = call i32 @fclose(%struct._IO_FILE* %24)
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %17
  store i32 0, i32* %1, align 4
  br label %40

; <label>:28                                      ; preds = %17
  %29 = load i32, i32* %status, align 4
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %38

; <label>:31                                      ; preds = %28
  %32 = load i8*, i8** %4, align 8
  %33 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 6
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %struct.mz_zip_archive_file_stat, %struct.mz_zip_archive_file_stat* %file_stat, i32 0, i32 6
  %36 = load i64, i64* %35, align 8
  %37 = call i32 @mz_zip_set_file_times(i8* %32, i64 %34, i64 %36)
  br label %38

; <label>:38                                      ; preds = %31, %28
  %39 = load i32, i32* %status, align 4
  store i32 %39, i32* %1, align 4
  br label %40

; <label>:40                                      ; preds = %38, %27, %16, %10
  %41 = load i32, i32* %1, align 4
  ret i32 %41
}

; Function Attrs: nounwind uwtable
define internal i64 @mz_zip_file_write_callback(i8* %pOpaque, i64 %ofs, i8* %pBuf, i64 %n) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %pOpaque, i8** %1, align 8
  store i64 %ofs, i64* %2, align 8
  store i8* %pBuf, i8** %3, align 8
  store i64 %n, i64* %4, align 8
  %5 = load i64, i64* %2, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = load i8*, i8** %1, align 8
  %9 = bitcast i8* %8 to %struct._IO_FILE*
  %10 = call i64 @fwrite(i8* %6, i64 1, i64 %7, %struct._IO_FILE* %9)
  ret i64 %10
}

; Function Attrs: nounwind uwtable
define internal i32 @mz_zip_set_file_times(i8* %pFilename, i64 %access_time, i64 %modified_time) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %t = alloca %struct.utimbuf, align 8
  store i8* %pFilename, i8** %1, align 8
  store i64 %access_time, i64* %2, align 8
  store i64 %modified_time, i64* %3, align 8
  %4 = load i64, i64* %2, align 8
  %5 = getelementptr inbounds %struct.utimbuf, %struct.utimbuf* %t, i32 0, i32 0
  store i64 %4, i64* %5, align 8
  %6 = load i64, i64* %3, align 8
  %7 = getelementptr inbounds %struct.utimbuf, %struct.utimbuf* %t, i32 0, i32 1
  store i64 %6, i64* %7, align 8
  %8 = load i8*, i8** %1, align 8
  %9 = call i32 @utime(i8* %8, %struct.utimbuf* %t) #6
  %10 = icmp ne i32 %9, 0
  %11 = xor i1 %10, true
  %12 = zext i1 %11 to i32
  ret i32 %12
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_reader_extract_file_to_file(%struct.mz_zip_archive_tag* %pZip, i8* %pArchive_filename, i8* %pDst_filename, i32 %flags) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %file_index = alloca i32, align 4
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  store i8* %pArchive_filename, i8** %3, align 8
  store i8* %pDst_filename, i8** %4, align 8
  store i32 %flags, i32* %5, align 4
  %6 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = load i32, i32* %5, align 4
  %9 = call i32 @mz_zip_reader_locate_file(%struct.mz_zip_archive_tag* %6, i8* %7, i8* null, i32 %8)
  store i32 %9, i32* %file_index, align 4
  %10 = load i32, i32* %file_index, align 4
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %0
  store i32 0, i32* %1, align 4
  br label %19

; <label>:13                                      ; preds = %0
  %14 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %15 = load i32, i32* %file_index, align 4
  %16 = load i8*, i8** %4, align 8
  %17 = load i32, i32* %5, align 4
  %18 = call i32 @mz_zip_reader_extract_to_file(%struct.mz_zip_archive_tag* %14, i32 %15, i8* %16, i32 %17)
  store i32 %18, i32* %1, align 4
  br label %19

; <label>:19                                      ; preds = %13, %12
  %20 = load i32, i32* %1, align 4
  ret i32 %20
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_writer_init(%struct.mz_zip_archive_tag* %pZip, i64 %existing_size) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i64, align 8
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  store i64 %existing_size, i64* %3, align 8
  %4 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %5 = icmp ne %struct.mz_zip_archive_tag* %4, null
  br i1 %5, label %6, label %21

; <label>:6                                       ; preds = %0
  %7 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %8 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %7, i32 0, i32 12
  %9 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %8, align 8
  %10 = icmp ne %struct.mz_zip_internal_state_tag* %9, null
  br i1 %10, label %21, label %11

; <label>:11                                      ; preds = %6
  %12 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %13 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %12, i32 0, i32 10
  %14 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %13, align 8
  %15 = icmp ne i64 (i8*, i64, i8*, i64)* %14, null
  br i1 %15, label %16, label %21

; <label>:16                                      ; preds = %11
  %17 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %18 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %17, i32 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %16, %11, %6, %0
  store i32 0, i32* %1, align 4
  br label %105

; <label>:22                                      ; preds = %16
  %23 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %24 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %23, i32 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %39

; <label>:27                                      ; preds = %22
  %28 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %29 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %28, i32 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %32 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %31, i32 0, i32 4
  %33 = load i32, i32* %32, align 8
  %34 = sub i32 %33, 1
  %35 = and i32 %30, %34
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %38

; <label>:37                                      ; preds = %27
  store i32 0, i32* %1, align 4
  br label %105

; <label>:38                                      ; preds = %27
  br label %39

; <label>:39                                      ; preds = %38, %22
  %40 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %41 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %40, i32 0, i32 5
  %42 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %41, align 8
  %43 = icmp ne i8* (i8*, i64, i64)* %42, null
  br i1 %43, label %47, label %44

; <label>:44                                      ; preds = %39
  %45 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %46 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %45, i32 0, i32 5
  store i8* (i8*, i64, i64)* @def_alloc_func, i8* (i8*, i64, i64)** %46, align 8
  br label %47

; <label>:47                                      ; preds = %44, %39
  %48 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %49 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %48, i32 0, i32 6
  %50 = load void (i8*, i8*)*, void (i8*, i8*)** %49, align 8
  %51 = icmp ne void (i8*, i8*)* %50, null
  br i1 %51, label %55, label %52

; <label>:52                                      ; preds = %47
  %53 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %54 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %53, i32 0, i32 6
  store void (i8*, i8*)* @def_free_func, void (i8*, i8*)** %54, align 8
  br label %55

; <label>:55                                      ; preds = %52, %47
  %56 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %57 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %56, i32 0, i32 7
  %58 = load i8* (i8*, i8*, i64, i64)*, i8* (i8*, i8*, i64, i64)** %57, align 8
  %59 = icmp ne i8* (i8*, i8*, i64, i64)* %58, null
  br i1 %59, label %63, label %60

; <label>:60                                      ; preds = %55
  %61 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %62 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %61, i32 0, i32 7
  store i8* (i8*, i8*, i64, i64)* @def_realloc_func, i8* (i8*, i8*, i64, i64)** %62, align 8
  br label %63

; <label>:63                                      ; preds = %60, %55
  %64 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %65 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %64, i32 0, i32 3
  store i32 2, i32* %65, align 4
  %66 = load i64, i64* %3, align 8
  %67 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %68 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %67, i32 0, i32 0
  store i64 %66, i64* %68, align 8
  %69 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %70 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %69, i32 0, i32 1
  store i64 0, i64* %70, align 8
  %71 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %72 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %71, i32 0, i32 2
  store i32 0, i32* %72, align 8
  %73 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %74 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %73, i32 0, i32 5
  %75 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %74, align 8
  %76 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %77 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %76, i32 0, i32 8
  %78 = load i8*, i8** %77, align 8
  %79 = call i8* %75(i8* %78, i64 1, i64 128)
  %80 = bitcast i8* %79 to %struct.mz_zip_internal_state_tag*
  %81 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %82 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %81, i32 0, i32 12
  store %struct.mz_zip_internal_state_tag* %80, %struct.mz_zip_internal_state_tag** %82, align 8
  %83 = icmp eq %struct.mz_zip_internal_state_tag* null, %80
  br i1 %83, label %84, label %85

; <label>:84                                      ; preds = %63
  store i32 0, i32* %1, align 4
  br label %105

; <label>:85                                      ; preds = %63
  %86 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %87 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %86, i32 0, i32 12
  %88 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %87, align 8
  %89 = bitcast %struct.mz_zip_internal_state_tag* %88 to i8*
  call void @llvm.memset.p0i8.i64(i8* %89, i8 0, i64 128, i32 8, i1 false)
  %90 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %91 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %90, i32 0, i32 12
  %92 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %91, align 8
  %93 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %92, i32 0, i32 0
  %94 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %93, i32 0, i32 3
  store i32 1, i32* %94, align 8
  %95 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %96 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %95, i32 0, i32 12
  %97 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %96, align 8
  %98 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %97, i32 0, i32 1
  %99 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %98, i32 0, i32 3
  store i32 4, i32* %99, align 8
  %100 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %101 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %100, i32 0, i32 12
  %102 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %101, align 8
  %103 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %102, i32 0, i32 2
  %104 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %103, i32 0, i32 3
  store i32 4, i32* %104, align 8
  store i32 1, i32* %1, align 4
  br label %105

; <label>:105                                     ; preds = %85, %84, %37, %21
  %106 = load i32, i32* %1, align 4
  ret i32 %106
}

; Function Attrs: nounwind uwtable
define internal i8* @def_realloc_func(i8* %opaque, i8* %address, i64 %items, i64 %size) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i8* %opaque, i8** %1, align 8
  store i8* %address, i8** %2, align 8
  store i64 %items, i64* %3, align 8
  store i64 %size, i64* %4, align 8
  %5 = load i8*, i8** %1, align 8
  %6 = load i8*, i8** %2, align 8
  %7 = load i64, i64* %3, align 8
  %8 = load i64, i64* %4, align 8
  %9 = load i8*, i8** %2, align 8
  %10 = load i64, i64* %3, align 8
  %11 = load i64, i64* %4, align 8
  %12 = mul i64 %10, %11
  %13 = call i8* @realloc(i8* %9, i64 %12) #6
  ret i8* %13
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_writer_init_heap(%struct.mz_zip_archive_tag* %pZip, i64 %size_to_reserve_at_beginning, i64 %initial_allocation_size) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  store i64 %size_to_reserve_at_beginning, i64* %3, align 8
  store i64 %initial_allocation_size, i64* %4, align 8
  %5 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %6 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %5, i32 0, i32 10
  store i64 (i8*, i64, i8*, i64)* @mz_zip_heap_write_func, i64 (i8*, i64, i8*, i64)** %6, align 8
  %7 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %8 = bitcast %struct.mz_zip_archive_tag* %7 to i8*
  %9 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %10 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %9, i32 0, i32 11
  store i8* %8, i8** %10, align 8
  %11 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %12 = load i64, i64* %3, align 8
  %13 = call i32 @mz_zip_writer_init(%struct.mz_zip_archive_tag* %11, i64 %12)
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %0
  store i32 0, i32* %1, align 4
  br label %51

; <label>:16                                      ; preds = %0
  %17 = load i64, i64* %4, align 8
  %18 = load i64, i64* %3, align 8
  %19 = icmp ugt i64 %17, %18
  br i1 %19, label %20, label %22

; <label>:20                                      ; preds = %16
  %21 = load i64, i64* %4, align 8
  br label %24

; <label>:22                                      ; preds = %16
  %23 = load i64, i64* %3, align 8
  br label %24

; <label>:24                                      ; preds = %22, %20
  %25 = phi i64 [ %21, %20 ], [ %23, %22 ]
  store i64 %25, i64* %4, align 8
  %26 = icmp ne i64 0, %25
  br i1 %26, label %27, label %50

; <label>:27                                      ; preds = %24
  %28 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %29 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %28, i32 0, i32 5
  %30 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %29, align 8
  %31 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %32 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %31, i32 0, i32 8
  %33 = load i8*, i8** %32, align 8
  %34 = load i64, i64* %4, align 8
  %35 = call i8* %30(i8* %33, i64 1, i64 %34)
  %36 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %37 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %36, i32 0, i32 12
  %38 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %37, align 8
  %39 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %38, i32 0, i32 4
  store i8* %35, i8** %39, align 8
  %40 = icmp eq i8* null, %35
  br i1 %40, label %41, label %44

; <label>:41                                      ; preds = %27
  %42 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %43 = call i32 @mz_zip_writer_end(%struct.mz_zip_archive_tag* %42)
  store i32 0, i32* %1, align 4
  br label %51

; <label>:44                                      ; preds = %27
  %45 = load i64, i64* %4, align 8
  %46 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %47 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %46, i32 0, i32 12
  %48 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %47, align 8
  %49 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %48, i32 0, i32 6
  store i64 %45, i64* %49, align 8
  br label %50

; <label>:50                                      ; preds = %44, %24
  store i32 1, i32* %1, align 4
  br label %51

; <label>:51                                      ; preds = %50, %41, %15
  %52 = load i32, i32* %1, align 4
  ret i32 %52
}

; Function Attrs: nounwind uwtable
define internal i64 @mz_zip_heap_write_func(i8* %pOpaque, i64 %file_ofs, i8* %pBuf, i64 %n) #0 {
  %1 = alloca i64, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %pZip = alloca %struct.mz_zip_archive_tag*, align 8
  %pState = alloca %struct.mz_zip_internal_state_tag*, align 8
  %new_size = alloca i64, align 8
  %pNew_block = alloca i8*, align 8
  %new_capacity = alloca i64, align 8
  store i8* %pOpaque, i8** %2, align 8
  store i64 %file_ofs, i64* %3, align 8
  store i8* %pBuf, i8** %4, align 8
  store i64 %n, i64* %5, align 8
  %6 = load i8*, i8** %2, align 8
  %7 = bitcast i8* %6 to %struct.mz_zip_archive_tag*
  store %struct.mz_zip_archive_tag* %7, %struct.mz_zip_archive_tag** %pZip, align 8
  %8 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %pZip, align 8
  %9 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %8, i32 0, i32 12
  %10 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %9, align 8
  store %struct.mz_zip_internal_state_tag* %10, %struct.mz_zip_internal_state_tag** %pState, align 8
  %11 = load i64, i64* %3, align 8
  %12 = load i64, i64* %5, align 8
  %13 = add i64 %11, %12
  %14 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %15 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %14, i32 0, i32 5
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %13, %16
  br i1 %17, label %18, label %22

; <label>:18                                      ; preds = %0
  %19 = load i64, i64* %3, align 8
  %20 = load i64, i64* %5, align 8
  %21 = add i64 %19, %20
  br label %26

; <label>:22                                      ; preds = %0
  %23 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %24 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %23, i32 0, i32 5
  %25 = load i64, i64* %24, align 8
  br label %26

; <label>:26                                      ; preds = %22, %18
  %27 = phi i64 [ %21, %18 ], [ %25, %22 ]
  store i64 %27, i64* %new_size, align 8
  %28 = load i64, i64* %5, align 8
  %29 = icmp ne i64 %28, 0
  br i1 %29, label %31, label %30

; <label>:30                                      ; preds = %26
  store i64 0, i64* %1, align 8
  br label %89

; <label>:31                                      ; preds = %26
  %32 = load i64, i64* %new_size, align 8
  %33 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %34 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %33, i32 0, i32 6
  %35 = load i64, i64* %34, align 8
  %36 = icmp ugt i64 %32, %35
  br i1 %36, label %37, label %77

; <label>:37                                      ; preds = %31
  %38 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %39 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %38, i32 0, i32 6
  %40 = load i64, i64* %39, align 8
  %41 = icmp ugt i64 64, %40
  br i1 %41, label %42, label %43

; <label>:42                                      ; preds = %37
  br label %47

; <label>:43                                      ; preds = %37
  %44 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %45 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %44, i32 0, i32 6
  %46 = load i64, i64* %45, align 8
  br label %47

; <label>:47                                      ; preds = %43, %42
  %48 = phi i64 [ 64, %42 ], [ %46, %43 ]
  store i64 %48, i64* %new_capacity, align 8
  br label %49

; <label>:49                                      ; preds = %53, %47
  %50 = load i64, i64* %new_capacity, align 8
  %51 = load i64, i64* %new_size, align 8
  %52 = icmp ult i64 %50, %51
  br i1 %52, label %53, label %56

; <label>:53                                      ; preds = %49
  %54 = load i64, i64* %new_capacity, align 8
  %55 = mul i64 %54, 2
  store i64 %55, i64* %new_capacity, align 8
  br label %49

; <label>:56                                      ; preds = %49
  %57 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %pZip, align 8
  %58 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %57, i32 0, i32 7
  %59 = load i8* (i8*, i8*, i64, i64)*, i8* (i8*, i8*, i64, i64)** %58, align 8
  %60 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %pZip, align 8
  %61 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %60, i32 0, i32 8
  %62 = load i8*, i8** %61, align 8
  %63 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %64 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %63, i32 0, i32 4
  %65 = load i8*, i8** %64, align 8
  %66 = load i64, i64* %new_capacity, align 8
  %67 = call i8* %59(i8* %62, i8* %65, i64 1, i64 %66)
  store i8* %67, i8** %pNew_block, align 8
  %68 = icmp eq i8* null, %67
  br i1 %68, label %69, label %70

; <label>:69                                      ; preds = %56
  store i64 0, i64* %1, align 8
  br label %89

; <label>:70                                      ; preds = %56
  %71 = load i8*, i8** %pNew_block, align 8
  %72 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %73 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %72, i32 0, i32 4
  store i8* %71, i8** %73, align 8
  %74 = load i64, i64* %new_capacity, align 8
  %75 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %76 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %75, i32 0, i32 6
  store i64 %74, i64* %76, align 8
  br label %77

; <label>:77                                      ; preds = %70, %31
  %78 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %79 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %78, i32 0, i32 4
  %80 = load i8*, i8** %79, align 8
  %81 = load i64, i64* %3, align 8
  %82 = getelementptr inbounds i8, i8* %80, i64 %81
  %83 = load i8*, i8** %4, align 8
  %84 = load i64, i64* %5, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %82, i8* %83, i64 %84, i32 1, i1 false)
  %85 = load i64, i64* %new_size, align 8
  %86 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %87 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %86, i32 0, i32 5
  store i64 %85, i64* %87, align 8
  %88 = load i64, i64* %5, align 8
  store i64 %88, i64* %1, align 8
  br label %89

; <label>:89                                      ; preds = %77, %69, %30
  %90 = load i64, i64* %1, align 8
  ret i64 %90
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_writer_end(%struct.mz_zip_archive_tag* %pZip) #0 {
  %1 = alloca %struct.mz_zip_archive_tag*, align 8
  %2 = alloca %struct.mz_zip_array*, align 8
  %3 = alloca %struct.mz_zip_archive_tag*, align 8
  %4 = alloca %struct.mz_zip_array*, align 8
  %5 = alloca %struct.mz_zip_archive_tag*, align 8
  %6 = alloca %struct.mz_zip_array*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.mz_zip_archive_tag*, align 8
  %pState = alloca %struct.mz_zip_internal_state_tag*, align 8
  %status = alloca i32, align 4
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %8, align 8
  store i32 1, i32* %status, align 4
  %9 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %10 = icmp ne %struct.mz_zip_archive_tag* %9, null
  br i1 %10, label %11, label %36

; <label>:11                                      ; preds = %0
  %12 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %13 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %12, i32 0, i32 12
  %14 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %13, align 8
  %15 = icmp ne %struct.mz_zip_internal_state_tag* %14, null
  br i1 %15, label %16, label %36

; <label>:16                                      ; preds = %11
  %17 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %18 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %17, i32 0, i32 5
  %19 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %18, align 8
  %20 = icmp ne i8* (i8*, i64, i64)* %19, null
  br i1 %20, label %21, label %36

; <label>:21                                      ; preds = %16
  %22 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %23 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %22, i32 0, i32 6
  %24 = load void (i8*, i8*)*, void (i8*, i8*)** %23, align 8
  %25 = icmp ne void (i8*, i8*)* %24, null
  br i1 %25, label %26, label %36

; <label>:26                                      ; preds = %21
  %27 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %28 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %27, i32 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = icmp ne i32 %29, 2
  br i1 %30, label %31, label %37

; <label>:31                                      ; preds = %26
  %32 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %33 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %32, i32 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = icmp ne i32 %34, 3
  br i1 %35, label %36, label %37

; <label>:36                                      ; preds = %31, %21, %16, %11, %0
  store i32 0, i32* %7, align 4
  br label %130

; <label>:37                                      ; preds = %31, %26
  %38 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %39 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %38, i32 0, i32 12
  %40 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %39, align 8
  store %struct.mz_zip_internal_state_tag* %40, %struct.mz_zip_internal_state_tag** %pState, align 8
  %41 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %42 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %41, i32 0, i32 12
  store %struct.mz_zip_internal_state_tag* null, %struct.mz_zip_internal_state_tag** %42, align 8
  %43 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %44 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %45 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %44, i32 0, i32 0
  store %struct.mz_zip_archive_tag* %43, %struct.mz_zip_archive_tag** %5, align 8
  store %struct.mz_zip_array* %45, %struct.mz_zip_array** %6, align 8
  %46 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %5, align 8
  %47 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %46, i32 0, i32 6
  %48 = load void (i8*, i8*)*, void (i8*, i8*)** %47, align 8
  %49 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %5, align 8
  %50 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %49, i32 0, i32 8
  %51 = load i8*, i8** %50, align 8
  %52 = load %struct.mz_zip_array*, %struct.mz_zip_array** %6, align 8
  %53 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %52, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void %48(i8* %51, i8* %54) #6
  %55 = load %struct.mz_zip_array*, %struct.mz_zip_array** %6, align 8
  %56 = bitcast %struct.mz_zip_array* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* %56, i8 0, i64 32, i32 8, i1 false) #6
  %57 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %58 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %59 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %58, i32 0, i32 1
  store %struct.mz_zip_archive_tag* %57, %struct.mz_zip_archive_tag** %3, align 8
  store %struct.mz_zip_array* %59, %struct.mz_zip_array** %4, align 8
  %60 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %3, align 8
  %61 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %60, i32 0, i32 6
  %62 = load void (i8*, i8*)*, void (i8*, i8*)** %61, align 8
  %63 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %3, align 8
  %64 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %63, i32 0, i32 8
  %65 = load i8*, i8** %64, align 8
  %66 = load %struct.mz_zip_array*, %struct.mz_zip_array** %4, align 8
  %67 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %66, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void %62(i8* %65, i8* %68) #6
  %69 = load %struct.mz_zip_array*, %struct.mz_zip_array** %4, align 8
  %70 = bitcast %struct.mz_zip_array* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* %70, i8 0, i64 32, i32 8, i1 false) #6
  %71 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %72 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %73 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %72, i32 0, i32 2
  store %struct.mz_zip_archive_tag* %71, %struct.mz_zip_archive_tag** %1, align 8
  store %struct.mz_zip_array* %73, %struct.mz_zip_array** %2, align 8
  %74 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %1, align 8
  %75 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %74, i32 0, i32 6
  %76 = load void (i8*, i8*)*, void (i8*, i8*)** %75, align 8
  %77 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %1, align 8
  %78 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %77, i32 0, i32 8
  %79 = load i8*, i8** %78, align 8
  %80 = load %struct.mz_zip_array*, %struct.mz_zip_array** %2, align 8
  %81 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %80, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  call void %76(i8* %79, i8* %82) #6
  %83 = load %struct.mz_zip_array*, %struct.mz_zip_array** %2, align 8
  %84 = bitcast %struct.mz_zip_array* %83 to i8*
  call void @llvm.memset.p0i8.i64(i8* %84, i8 0, i64 32, i32 8, i1 false) #6
  %85 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %86 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %85, i32 0, i32 3
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** %86, align 8
  %88 = icmp ne %struct._IO_FILE* %87, null
  br i1 %88, label %89, label %96

; <label>:89                                      ; preds = %37
  %90 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %91 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %90, i32 0, i32 3
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** %91, align 8
  %93 = call i32 @fclose(%struct._IO_FILE* %92)
  %94 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %95 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %94, i32 0, i32 3
  store %struct._IO_FILE* null, %struct._IO_FILE** %95, align 8
  br label %96

; <label>:96                                      ; preds = %89, %37
  %97 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %98 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %97, i32 0, i32 10
  %99 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %98, align 8
  %100 = icmp eq i64 (i8*, i64, i8*, i64)* %99, @mz_zip_heap_write_func
  br i1 %100, label %101, label %118

; <label>:101                                     ; preds = %96
  %102 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %103 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %102, i32 0, i32 4
  %104 = load i8*, i8** %103, align 8
  %105 = icmp ne i8* %104, null
  br i1 %105, label %106, label %118

; <label>:106                                     ; preds = %101
  %107 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %108 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %107, i32 0, i32 6
  %109 = load void (i8*, i8*)*, void (i8*, i8*)** %108, align 8
  %110 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %111 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %110, i32 0, i32 8
  %112 = load i8*, i8** %111, align 8
  %113 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %114 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %113, i32 0, i32 4
  %115 = load i8*, i8** %114, align 8
  call void %109(i8* %112, i8* %115)
  %116 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %117 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %116, i32 0, i32 4
  store i8* null, i8** %117, align 8
  br label %118

; <label>:118                                     ; preds = %106, %101, %96
  %119 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %120 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %119, i32 0, i32 6
  %121 = load void (i8*, i8*)*, void (i8*, i8*)** %120, align 8
  %122 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %123 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %122, i32 0, i32 8
  %124 = load i8*, i8** %123, align 8
  %125 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %126 = bitcast %struct.mz_zip_internal_state_tag* %125 to i8*
  call void %121(i8* %124, i8* %126)
  %127 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %128 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %127, i32 0, i32 3
  store i32 0, i32* %128, align 4
  %129 = load i32, i32* %status, align 4
  store i32 %129, i32* %7, align 4
  br label %130

; <label>:130                                     ; preds = %118, %36
  %131 = load i32, i32* %7, align 4
  ret i32 %131
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_writer_init_file(%struct.mz_zip_archive_tag* %pZip, i8* %pFilename, i64 %size_to_reserve_at_beginning) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %pFile = alloca %struct._IO_FILE*, align 8
  %cur_ofs = alloca i64, align 8
  %buf = alloca [4096 x i8], align 16
  %n = alloca i64, align 8
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  store i8* %pFilename, i8** %3, align 8
  store i64 %size_to_reserve_at_beginning, i64* %4, align 8
  %5 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %6 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %5, i32 0, i32 10
  store i64 (i8*, i64, i8*, i64)* @mz_zip_file_write_func, i64 (i8*, i64, i8*, i64)** %6, align 8
  %7 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %8 = bitcast %struct.mz_zip_archive_tag* %7 to i8*
  %9 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %10 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %9, i32 0, i32 11
  store i8* %8, i8** %10, align 8
  %11 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %12 = load i64, i64* %4, align 8
  %13 = call i32 @mz_zip_writer_init(%struct.mz_zip_archive_tag* %11, i64 %12)
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %0
  store i32 0, i32* %1, align 4
  br label %68

; <label>:16                                      ; preds = %0
  %17 = load i8*, i8** %3, align 8
  %18 = call %struct._IO_FILE* @fopen(i8* %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0))
  store %struct._IO_FILE* %18, %struct._IO_FILE** %pFile, align 8
  %19 = icmp eq %struct._IO_FILE* null, %18
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %16
  %21 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %22 = call i32 @mz_zip_writer_end(%struct.mz_zip_archive_tag* %21)
  store i32 0, i32* %1, align 4
  br label %68

; <label>:23                                      ; preds = %16
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %pFile, align 8
  %25 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %26 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %25, i32 0, i32 12
  %27 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %26, align 8
  %28 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %27, i32 0, i32 3
  store %struct._IO_FILE* %24, %struct._IO_FILE** %28, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp ne i64 %29, 0
  br i1 %30, label %31, label %67

; <label>:31                                      ; preds = %23
  store i64 0, i64* %cur_ofs, align 8
  %32 = bitcast [4096 x i8]* %buf to i8*
  call void @llvm.memset.p0i8.i64(i8* %32, i8 0, i64 4096, i32 16, i1 false)
  br label %33

; <label>:33                                      ; preds = %63, %31
  %34 = load i64, i64* %4, align 8
  %35 = icmp ult i64 4096, %34
  br i1 %35, label %36, label %37

; <label>:36                                      ; preds = %33
  br label %39

; <label>:37                                      ; preds = %33
  %38 = load i64, i64* %4, align 8
  br label %39

; <label>:39                                      ; preds = %37, %36
  %40 = phi i64 [ 4096, %36 ], [ %38, %37 ]
  store i64 %40, i64* %n, align 8
  %41 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %42 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %41, i32 0, i32 10
  %43 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %42, align 8
  %44 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %45 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %44, i32 0, i32 11
  %46 = load i8*, i8** %45, align 8
  %47 = load i64, i64* %cur_ofs, align 8
  %48 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i32 0, i32 0
  %49 = load i64, i64* %n, align 8
  %50 = call i64 %43(i8* %46, i64 %47, i8* %48, i64 %49)
  %51 = load i64, i64* %n, align 8
  %52 = icmp ne i64 %50, %51
  br i1 %52, label %53, label %56

; <label>:53                                      ; preds = %39
  %54 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %55 = call i32 @mz_zip_writer_end(%struct.mz_zip_archive_tag* %54)
  store i32 0, i32* %1, align 4
  br label %68

; <label>:56                                      ; preds = %39
  %57 = load i64, i64* %n, align 8
  %58 = load i64, i64* %cur_ofs, align 8
  %59 = add i64 %58, %57
  store i64 %59, i64* %cur_ofs, align 8
  %60 = load i64, i64* %n, align 8
  %61 = load i64, i64* %4, align 8
  %62 = sub i64 %61, %60
  store i64 %62, i64* %4, align 8
  br label %63

; <label>:63                                      ; preds = %56
  %64 = load i64, i64* %4, align 8
  %65 = icmp ne i64 %64, 0
  br i1 %65, label %33, label %66

; <label>:66                                      ; preds = %63
  br label %67

; <label>:67                                      ; preds = %66, %23
  store i32 1, i32* %1, align 4
  br label %68

; <label>:68                                      ; preds = %67, %53, %20, %15
  %69 = load i32, i32* %1, align 4
  ret i32 %69
}

; Function Attrs: nounwind uwtable
define internal i64 @mz_zip_file_write_func(i8* %pOpaque, i64 %file_ofs, i8* %pBuf, i64 %n) #0 {
  %1 = alloca i64, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %pZip = alloca %struct.mz_zip_archive_tag*, align 8
  %cur_ofs = alloca i64, align 8
  store i8* %pOpaque, i8** %2, align 8
  store i64 %file_ofs, i64* %3, align 8
  store i8* %pBuf, i8** %4, align 8
  store i64 %n, i64* %5, align 8
  %6 = load i8*, i8** %2, align 8
  %7 = bitcast i8* %6 to %struct.mz_zip_archive_tag*
  store %struct.mz_zip_archive_tag* %7, %struct.mz_zip_archive_tag** %pZip, align 8
  %8 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %pZip, align 8
  %9 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %8, i32 0, i32 12
  %10 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %9, align 8
  %11 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %10, i32 0, i32 3
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %11, align 8
  %13 = call i64 @ftello(%struct._IO_FILE* %12)
  store i64 %13, i64* %cur_ofs, align 8
  %14 = load i64, i64* %3, align 8
  %15 = icmp slt i64 %14, 0
  br i1 %15, label %29, label %16

; <label>:16                                      ; preds = %0
  %17 = load i64, i64* %cur_ofs, align 8
  %18 = load i64, i64* %3, align 8
  %19 = icmp ne i64 %17, %18
  br i1 %19, label %20, label %30

; <label>:20                                      ; preds = %16
  %21 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %pZip, align 8
  %22 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %21, i32 0, i32 12
  %23 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %22, align 8
  %24 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %23, i32 0, i32 3
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %24, align 8
  %26 = load i64, i64* %3, align 8
  %27 = call i32 @fseeko(%struct._IO_FILE* %25, i64 %26, i32 0)
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %30

; <label>:29                                      ; preds = %20, %0
  store i64 0, i64* %1, align 8
  br label %39

; <label>:30                                      ; preds = %20, %16
  %31 = load i8*, i8** %4, align 8
  %32 = load i64, i64* %5, align 8
  %33 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %pZip, align 8
  %34 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %33, i32 0, i32 12
  %35 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %34, align 8
  %36 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %35, i32 0, i32 3
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %36, align 8
  %38 = call i64 @fwrite(i8* %31, i64 1, i64 %32, %struct._IO_FILE* %37)
  store i64 %38, i64* %1, align 8
  br label %39

; <label>:39                                      ; preds = %30, %29
  %40 = load i64, i64* %1, align 8
  ret i64 %40
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_writer_init_from_reader(%struct.mz_zip_archive_tag* %pZip, i8* %pFilename) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i8*, align 8
  %pState = alloca %struct.mz_zip_internal_state_tag*, align 8
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  store i8* %pFilename, i8** %3, align 8
  %4 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %5 = icmp ne %struct.mz_zip_archive_tag* %4, null
  br i1 %5, label %6, label %16

; <label>:6                                       ; preds = %0
  %7 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %8 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %7, i32 0, i32 12
  %9 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %8, align 8
  %10 = icmp ne %struct.mz_zip_internal_state_tag* %9, null
  br i1 %10, label %11, label %16

; <label>:11                                      ; preds = %6
  %12 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %13 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %12, i32 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp ne i32 %14, 1
  br i1 %15, label %16, label %17

; <label>:16                                      ; preds = %11, %6, %0
  store i32 0, i32* %1, align 4
  br label %104

; <label>:17                                      ; preds = %11
  %18 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %19 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 65535
  br i1 %21, label %29, label %22

; <label>:22                                      ; preds = %17
  %23 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %24 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %23, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, 46
  %27 = add i64 %26, 30
  %28 = icmp ugt i64 %27, 4294967295
  br i1 %28, label %29, label %30

; <label>:29                                      ; preds = %22, %17
  store i32 0, i32* %1, align 4
  br label %104

; <label>:30                                      ; preds = %22
  %31 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %32 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %31, i32 0, i32 12
  %33 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %32, align 8
  store %struct.mz_zip_internal_state_tag* %33, %struct.mz_zip_internal_state_tag** %pState, align 8
  %34 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %35 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %34, i32 0, i32 3
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %35, align 8
  %37 = icmp ne %struct._IO_FILE* %36, null
  br i1 %37, label %38, label %65

; <label>:38                                      ; preds = %30
  %39 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %40 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %39, i32 0, i32 11
  %41 = load i8*, i8** %40, align 8
  %42 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %43 = bitcast %struct.mz_zip_archive_tag* %42 to i8*
  %44 = icmp ne i8* %41, %43
  br i1 %44, label %45, label %46

; <label>:45                                      ; preds = %38
  store i32 0, i32* %1, align 4
  br label %104

; <label>:46                                      ; preds = %38
  %47 = load i8*, i8** %3, align 8
  %48 = icmp ne i8* %47, null
  br i1 %48, label %50, label %49

; <label>:49                                      ; preds = %46
  store i32 0, i32* %1, align 4
  br label %104

; <label>:50                                      ; preds = %46
  %51 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %52 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %51, i32 0, i32 10
  store i64 (i8*, i64, i8*, i64)* @mz_zip_file_write_func, i64 (i8*, i64, i8*, i64)** %52, align 8
  %53 = load i8*, i8** %3, align 8
  %54 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %55 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %54, i32 0, i32 3
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** %55, align 8
  %57 = call %struct._IO_FILE* @freopen(i8* %53, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i32 0, i32 0), %struct._IO_FILE* %56)
  %58 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %59 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %58, i32 0, i32 3
  store %struct._IO_FILE* %57, %struct._IO_FILE** %59, align 8
  %60 = icmp eq %struct._IO_FILE* null, %57
  br i1 %60, label %61, label %64

; <label>:61                                      ; preds = %50
  %62 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %63 = call i32 @mz_zip_reader_end(%struct.mz_zip_archive_tag* %62)
  store i32 0, i32* %1, align 4
  br label %104

; <label>:64                                      ; preds = %50
  br label %94

; <label>:65                                      ; preds = %30
  %66 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %67 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %66, i32 0, i32 4
  %68 = load i8*, i8** %67, align 8
  %69 = icmp ne i8* %68, null
  br i1 %69, label %70, label %86

; <label>:70                                      ; preds = %65
  %71 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %72 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %71, i32 0, i32 11
  %73 = load i8*, i8** %72, align 8
  %74 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %75 = bitcast %struct.mz_zip_archive_tag* %74 to i8*
  %76 = icmp ne i8* %73, %75
  br i1 %76, label %77, label %78

; <label>:77                                      ; preds = %70
  store i32 0, i32* %1, align 4
  br label %104

; <label>:78                                      ; preds = %70
  %79 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %80 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %79, i32 0, i32 5
  %81 = load i64, i64* %80, align 8
  %82 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %83 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %82, i32 0, i32 6
  store i64 %81, i64* %83, align 8
  %84 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %85 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %84, i32 0, i32 10
  store i64 (i8*, i64, i8*, i64)* @mz_zip_heap_write_func, i64 (i8*, i64, i8*, i64)** %85, align 8
  br label %93

; <label>:86                                      ; preds = %65
  %87 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %88 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %87, i32 0, i32 10
  %89 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %88, align 8
  %90 = icmp ne i64 (i8*, i64, i8*, i64)* %89, null
  br i1 %90, label %92, label %91

; <label>:91                                      ; preds = %86
  store i32 0, i32* %1, align 4
  br label %104

; <label>:92                                      ; preds = %86
  br label %93

; <label>:93                                      ; preds = %92, %78
  br label %94

; <label>:94                                      ; preds = %93, %64
  %95 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %96 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %95, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %99 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %98, i32 0, i32 0
  store i64 %97, i64* %99, align 8
  %100 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %101 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %100, i32 0, i32 3
  store i32 2, i32* %101, align 4
  %102 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %103 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %102, i32 0, i32 1
  store i64 0, i64* %103, align 8
  store i32 1, i32* %1, align 4
  br label %104

; <label>:104                                     ; preds = %94, %91, %77, %61, %49, %45, %29, %16
  %105 = load i32, i32* %1, align 4
  ret i32 %105
}

declare %struct._IO_FILE* @freopen(i8*, i8*, %struct._IO_FILE*) #4

; Function Attrs: nounwind uwtable
define i32 @mz_zip_writer_add_mem(%struct.mz_zip_archive_tag* %pZip, i8* %pArchive_name, i8* %pBuf, i64 %buf_size, i32 %level_and_flags) #0 {
  %1 = alloca %struct.mz_zip_archive_tag*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %1, align 8
  store i8* %pArchive_name, i8** %2, align 8
  store i8* %pBuf, i8** %3, align 8
  store i64 %buf_size, i64* %4, align 8
  store i32 %level_and_flags, i32* %5, align 4
  %6 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %1, align 8
  %7 = load i8*, i8** %2, align 8
  %8 = load i8*, i8** %3, align 8
  %9 = load i64, i64* %4, align 8
  %10 = load i32, i32* %5, align 4
  %11 = call i32 @mz_zip_writer_add_mem_ex(%struct.mz_zip_archive_tag* %6, i8* %7, i8* %8, i64 %9, i8* null, i16 zeroext 0, i32 %10, i64 0, i32 0)
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_writer_add_mem_ex(%struct.mz_zip_archive_tag* %pZip, i8* %pArchive_name, i8* %pBuf, i64 %buf_size, i8* %pComment, i16 zeroext %comment_size, i32 %level_and_flags, i64 %uncomp_size, i32 %uncomp_crc32) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca %struct.mz_zip_array*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.mz_zip_archive_tag*, align 8
  %7 = alloca %struct.mz_zip_array*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.mz_zip_archive_tag*, align 8
  %11 = alloca %struct.mz_zip_array*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct.mz_zip_archive_tag*, align 8
  %15 = alloca %struct.mz_zip_array*, align 8
  %16 = alloca i64, align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.mz_zip_archive_tag*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i16, align 2
  %24 = alloca i32, align 4
  %25 = alloca i64, align 8
  %26 = alloca i32, align 4
  %method = alloca i16, align 2
  %dos_time = alloca i16, align 2
  %dos_date = alloca i16, align 2
  %level = alloca i32, align 4
  %ext_attributes = alloca i32, align 4
  %num_alignment_padding_bytes = alloca i32, align 4
  %local_dir_header_ofs = alloca i64, align 8
  %cur_archive_file_ofs = alloca i64, align 8
  %comp_size = alloca i64, align 8
  %archive_name_size = alloca i64, align 8
  %local_dir_header = alloca [30 x i8], align 16
  %pComp = alloca %struct.tdefl_compressor*, align 8
  %store_data_uncompressed = alloca i32, align 4
  %pState = alloca %struct.mz_zip_internal_state_tag*, align 8
  %cur_time = alloca i64, align 8
  %state = alloca %struct.mz_zip_writer_add_state, align 8
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %18, align 8
  store i8* %pArchive_name, i8** %19, align 8
  store i8* %pBuf, i8** %20, align 8
  store i64 %buf_size, i64* %21, align 8
  store i8* %pComment, i8** %22, align 8
  store i16 %comment_size, i16* %23, align 2
  store i32 %level_and_flags, i32* %24, align 4
  store i64 %uncomp_size, i64* %25, align 8
  store i32 %uncomp_crc32, i32* %26, align 4
  store i16 0, i16* %method, align 2
  store i16 0, i16* %dos_time, align 2
  store i16 0, i16* %dos_date, align 2
  store i32 0, i32* %ext_attributes, align 4
  %27 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %28 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %27, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %local_dir_header_ofs, align 8
  %30 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %31 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %30, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %cur_archive_file_ofs, align 8
  store i64 0, i64* %comp_size, align 8
  store %struct.tdefl_compressor* null, %struct.tdefl_compressor** %pComp, align 8
  %33 = load i32, i32* %24, align 4
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %35, label %36

; <label>:35                                      ; preds = %0
  store i32 6, i32* %24, align 4
  br label %36

; <label>:36                                      ; preds = %35, %0
  %37 = load i32, i32* %24, align 4
  %38 = and i32 %37, 15
  store i32 %38, i32* %level, align 4
  %39 = load i32, i32* %level, align 4
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %45

; <label>:41                                      ; preds = %36
  %42 = load i32, i32* %24, align 4
  %43 = and i32 %42, 1024
  %44 = icmp ne i32 %43, 0
  br label %45

; <label>:45                                      ; preds = %41, %36
  %46 = phi i1 [ true, %36 ], [ %44, %41 ]
  %47 = zext i1 %46 to i32
  store i32 %47, i32* %store_data_uncompressed, align 4
  %48 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %49 = icmp ne %struct.mz_zip_archive_tag* %48, null
  br i1 %49, label %50, label %84

; <label>:50                                      ; preds = %45
  %51 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %52 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %51, i32 0, i32 12
  %53 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %52, align 8
  %54 = icmp ne %struct.mz_zip_internal_state_tag* %53, null
  br i1 %54, label %55, label %84

; <label>:55                                      ; preds = %50
  %56 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %57 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %56, i32 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = icmp ne i32 %58, 2
  br i1 %59, label %84, label %60

; <label>:60                                      ; preds = %55
  %61 = load i64, i64* %21, align 8
  %62 = icmp ne i64 %61, 0
  br i1 %62, label %63, label %66

; <label>:63                                      ; preds = %60
  %64 = load i8*, i8** %20, align 8
  %65 = icmp ne i8* %64, null
  br i1 %65, label %66, label %84

; <label>:66                                      ; preds = %63, %60
  %67 = load i8*, i8** %19, align 8
  %68 = icmp ne i8* %67, null
  br i1 %68, label %69, label %84

; <label>:69                                      ; preds = %66
  %70 = load i16, i16* %23, align 2
  %71 = zext i16 %70 to i32
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %76

; <label>:73                                      ; preds = %69
  %74 = load i8*, i8** %22, align 8
  %75 = icmp ne i8* %74, null
  br i1 %75, label %76, label %84

; <label>:76                                      ; preds = %73, %69
  %77 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %78 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %77, i32 0, i32 2
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 65535
  br i1 %80, label %84, label %81

; <label>:81                                      ; preds = %76
  %82 = load i32, i32* %level, align 4
  %83 = icmp ugt i32 %82, 10
  br i1 %83, label %84, label %85

; <label>:84                                      ; preds = %81, %76, %73, %66, %63, %55, %50, %45
  store i32 0, i32* %17, align 4
  br label %463

; <label>:85                                      ; preds = %81
  %86 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %87 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %86, i32 0, i32 12
  %88 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %87, align 8
  store %struct.mz_zip_internal_state_tag* %88, %struct.mz_zip_internal_state_tag** %pState, align 8
  %89 = load i32, i32* %24, align 4
  %90 = and i32 %89, 1024
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %96, label %92

; <label>:92                                      ; preds = %85
  %93 = load i64, i64* %25, align 8
  %94 = icmp ne i64 %93, 0
  br i1 %94, label %95, label %96

; <label>:95                                      ; preds = %92
  store i32 0, i32* %17, align 4
  br label %463

; <label>:96                                      ; preds = %92, %85
  %97 = load i64, i64* %21, align 8
  %98 = icmp ugt i64 %97, 4294967295
  br i1 %98, label %102, label %99

; <label>:99                                      ; preds = %96
  %100 = load i64, i64* %25, align 8
  %101 = icmp ugt i64 %100, 4294967295
  br i1 %101, label %102, label %103

; <label>:102                                     ; preds = %99, %96
  store i32 0, i32* %17, align 4
  br label %463

; <label>:103                                     ; preds = %99
  %104 = load i8*, i8** %19, align 8
  %105 = call i32 @mz_zip_writer_validate_archive_name(i8* %104)
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %108, label %107

; <label>:107                                     ; preds = %103
  store i32 0, i32* %17, align 4
  br label %463

; <label>:108                                     ; preds = %103
  %109 = call i64 @time(i64* %cur_time) #6
  %110 = load i64, i64* %cur_time, align 8
  call void @mz_zip_time_to_dos_time(i64 %110, i16* %dos_time, i16* %dos_date)
  %111 = load i8*, i8** %19, align 8
  %112 = call i64 @strlen(i8* %111) #8
  store i64 %112, i64* %archive_name_size, align 8
  %113 = load i64, i64* %archive_name_size, align 8
  %114 = icmp ugt i64 %113, 65535
  br i1 %114, label %115, label %116

; <label>:115                                     ; preds = %108
  store i32 0, i32* %17, align 4
  br label %463

; <label>:116                                     ; preds = %108
  %117 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %118 = call i32 @mz_zip_writer_compute_padding_needed_for_file_alignment(%struct.mz_zip_archive_tag* %117)
  store i32 %118, i32* %num_alignment_padding_bytes, align 4
  %119 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %120 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %119, i32 0, i32 2
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %121, 65535
  br i1 %122, label %138, label %123

; <label>:123                                     ; preds = %116
  %124 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %125 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %124, i32 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = load i32, i32* %num_alignment_padding_bytes, align 4
  %128 = zext i32 %127 to i64
  %129 = add i64 %126, %128
  %130 = add i64 %129, 30
  %131 = add i64 %130, 46
  %132 = load i16, i16* %23, align 2
  %133 = zext i16 %132 to i64
  %134 = add i64 %131, %133
  %135 = load i64, i64* %archive_name_size, align 8
  %136 = add i64 %134, %135
  %137 = icmp ugt i64 %136, 4294967295
  br i1 %137, label %138, label %139

; <label>:138                                     ; preds = %123, %116
  store i32 0, i32* %17, align 4
  br label %463

; <label>:139                                     ; preds = %123
  %140 = load i64, i64* %archive_name_size, align 8
  %141 = icmp ne i64 %140, 0
  br i1 %141, label %142, label %160

; <label>:142                                     ; preds = %139
  %143 = load i64, i64* %archive_name_size, align 8
  %144 = sub i64 %143, 1
  %145 = load i8*, i8** %19, align 8
  %146 = getelementptr inbounds i8, i8* %145, i64 %144
  %147 = load i8, i8* %146, align 1
  %148 = sext i8 %147 to i32
  %149 = icmp eq i32 %148, 47
  br i1 %149, label %150, label %160

; <label>:150                                     ; preds = %142
  %151 = load i32, i32* %ext_attributes, align 4
  %152 = or i32 %151, 16
  store i32 %152, i32* %ext_attributes, align 4
  %153 = load i64, i64* %21, align 8
  %154 = icmp ne i64 %153, 0
  br i1 %154, label %158, label %155

; <label>:155                                     ; preds = %150
  %156 = load i64, i64* %25, align 8
  %157 = icmp ne i64 %156, 0
  br i1 %157, label %158, label %159

; <label>:158                                     ; preds = %155, %150
  store i32 0, i32* %17, align 4
  br label %463

; <label>:159                                     ; preds = %155
  br label %160

; <label>:160                                     ; preds = %159, %142, %139
  %161 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %162 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %163 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %162, i32 0, i32 0
  %164 = load i64, i64* %archive_name_size, align 8
  %165 = add i64 46, %164
  %166 = load i16, i16* %23, align 2
  %167 = zext i16 %166 to i64
  %168 = add i64 %165, %167
  store %struct.mz_zip_archive_tag* %161, %struct.mz_zip_archive_tag** %14, align 8
  store %struct.mz_zip_array* %163, %struct.mz_zip_array** %15, align 8
  store i64 %168, i64* %16, align 8
  %169 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %14, align 8
  %170 = load %struct.mz_zip_array*, %struct.mz_zip_array** %15, align 8
  %171 = load %struct.mz_zip_array*, %struct.mz_zip_array** %15, align 8
  %172 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %171, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  %174 = load i64, i64* %16, align 8
  %175 = add i64 %173, %174
  store %struct.mz_zip_archive_tag* %169, %struct.mz_zip_archive_tag** %10, align 8
  store %struct.mz_zip_array* %170, %struct.mz_zip_array** %11, align 8
  store i64 %175, i64* %12, align 8
  store i32 1, i32* %13, align 4
  %176 = load i64, i64* %12, align 8
  %177 = load %struct.mz_zip_array*, %struct.mz_zip_array** %11, align 8
  %178 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %177, i32 0, i32 2
  %179 = load i64, i64* %178, align 8
  %180 = icmp ugt i64 %176, %179
  br i1 %180, label %181, label %190

; <label>:181                                     ; preds = %160
  %182 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %10, align 8
  %183 = load %struct.mz_zip_array*, %struct.mz_zip_array** %11, align 8
  %184 = load i64, i64* %12, align 8
  %185 = load i32, i32* %13, align 4
  %186 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive_tag* %182, %struct.mz_zip_array* %183, i64 %184, i32 %185) #6
  %187 = icmp ne i32 %186, 0
  br i1 %187, label %189, label %188

; <label>:188                                     ; preds = %181
  store i32 0, i32* %9, align 4
  br label %mz_zip_array_ensure_room.exit

; <label>:189                                     ; preds = %181
  br label %190

; <label>:190                                     ; preds = %189, %160
  store i32 1, i32* %9, align 4
  br label %mz_zip_array_ensure_room.exit

mz_zip_array_ensure_room.exit:                    ; preds = %188, %190
  %191 = load i32, i32* %9, align 4
  %192 = icmp ne i32 %191, 0
  br i1 %192, label %193, label %221

; <label>:193                                     ; preds = %mz_zip_array_ensure_room.exit
  %194 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %195 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %196 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %195, i32 0, i32 1
  store %struct.mz_zip_archive_tag* %194, %struct.mz_zip_archive_tag** %6, align 8
  store %struct.mz_zip_array* %196, %struct.mz_zip_array** %7, align 8
  store i64 1, i64* %8, align 8
  %197 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %6, align 8
  %198 = load %struct.mz_zip_array*, %struct.mz_zip_array** %7, align 8
  %199 = load %struct.mz_zip_array*, %struct.mz_zip_array** %7, align 8
  %200 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %199, i32 0, i32 1
  %201 = load i64, i64* %200, align 8
  %202 = load i64, i64* %8, align 8
  %203 = add i64 %201, %202
  store %struct.mz_zip_archive_tag* %197, %struct.mz_zip_archive_tag** %2, align 8
  store %struct.mz_zip_array* %198, %struct.mz_zip_array** %3, align 8
  store i64 %203, i64* %4, align 8
  store i32 1, i32* %5, align 4
  %204 = load i64, i64* %4, align 8
  %205 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %206 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %205, i32 0, i32 2
  %207 = load i64, i64* %206, align 8
  %208 = icmp ugt i64 %204, %207
  br i1 %208, label %209, label %218

; <label>:209                                     ; preds = %193
  %210 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %211 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %212 = load i64, i64* %4, align 8
  %213 = load i32, i32* %5, align 4
  %214 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive_tag* %210, %struct.mz_zip_array* %211, i64 %212, i32 %213) #6
  %215 = icmp ne i32 %214, 0
  br i1 %215, label %217, label %216

; <label>:216                                     ; preds = %209
  store i32 0, i32* %1, align 4
  br label %mz_zip_array_ensure_room.exit1

; <label>:217                                     ; preds = %209
  br label %218

; <label>:218                                     ; preds = %217, %193
  store i32 1, i32* %1, align 4
  br label %mz_zip_array_ensure_room.exit1

mz_zip_array_ensure_room.exit1:                   ; preds = %216, %218
  %219 = load i32, i32* %1, align 4
  %220 = icmp ne i32 %219, 0
  br i1 %220, label %222, label %221

; <label>:221                                     ; preds = %mz_zip_array_ensure_room.exit1, %mz_zip_array_ensure_room.exit
  store i32 0, i32* %17, align 4
  br label %463

; <label>:222                                     ; preds = %mz_zip_array_ensure_room.exit1
  %223 = load i32, i32* %store_data_uncompressed, align 4
  %224 = icmp ne i32 %223, 0
  br i1 %224, label %240, label %225

; <label>:225                                     ; preds = %222
  %226 = load i64, i64* %21, align 8
  %227 = icmp ne i64 %226, 0
  br i1 %227, label %228, label %240

; <label>:228                                     ; preds = %225
  %229 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %230 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %229, i32 0, i32 5
  %231 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %230, align 8
  %232 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %233 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %232, i32 0, i32 8
  %234 = load i8*, i8** %233, align 8
  %235 = call i8* %231(i8* %234, i64 1, i64 319352)
  %236 = bitcast i8* %235 to %struct.tdefl_compressor*
  store %struct.tdefl_compressor* %236, %struct.tdefl_compressor** %pComp, align 8
  %237 = icmp eq %struct.tdefl_compressor* null, %236
  br i1 %237, label %238, label %239

; <label>:238                                     ; preds = %228
  store i32 0, i32* %17, align 4
  br label %463

; <label>:239                                     ; preds = %228
  br label %240

; <label>:240                                     ; preds = %239, %225, %222
  %241 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %242 = load i64, i64* %cur_archive_file_ofs, align 8
  %243 = load i32, i32* %num_alignment_padding_bytes, align 4
  %244 = zext i32 %243 to i64
  %245 = add i64 %244, 30
  %246 = trunc i64 %245 to i32
  %247 = call i32 @mz_zip_writer_write_zeros(%struct.mz_zip_archive_tag* %241, i64 %242, i32 %246)
  %248 = icmp ne i32 %247, 0
  br i1 %248, label %258, label %249

; <label>:249                                     ; preds = %240
  %250 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %251 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %250, i32 0, i32 6
  %252 = load void (i8*, i8*)*, void (i8*, i8*)** %251, align 8
  %253 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %254 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %253, i32 0, i32 8
  %255 = load i8*, i8** %254, align 8
  %256 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %257 = bitcast %struct.tdefl_compressor* %256 to i8*
  call void %252(i8* %255, i8* %257)
  store i32 0, i32* %17, align 4
  br label %463

; <label>:258                                     ; preds = %240
  %259 = load i32, i32* %num_alignment_padding_bytes, align 4
  %260 = zext i32 %259 to i64
  %261 = load i64, i64* %local_dir_header_ofs, align 8
  %262 = add i64 %261, %260
  store i64 %262, i64* %local_dir_header_ofs, align 8
  %263 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %264 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %263, i32 0, i32 4
  %265 = load i32, i32* %264, align 8
  %266 = icmp ne i32 %265, 0
  br i1 %266, label %267, label %280

; <label>:267                                     ; preds = %258
  %268 = load i64, i64* %local_dir_header_ofs, align 8
  %269 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %270 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %269, i32 0, i32 4
  %271 = load i32, i32* %270, align 8
  %272 = sub i32 %271, 1
  %273 = zext i32 %272 to i64
  %274 = and i64 %268, %273
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %276, label %277

; <label>:276                                     ; preds = %267
  br label %279

; <label>:277                                     ; preds = %267
  call void @__assert_fail(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 4332, i8* getelementptr inbounds ([143 x i8], [143 x i8]* @__PRETTY_FUNCTION__.mz_zip_writer_add_mem_ex, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %279

; <label>:279                                     ; preds = %278, %276
  br label %280

; <label>:280                                     ; preds = %279, %258
  %281 = load i32, i32* %num_alignment_padding_bytes, align 4
  %282 = zext i32 %281 to i64
  %283 = add i64 %282, 30
  %284 = load i64, i64* %cur_archive_file_ofs, align 8
  %285 = add i64 %284, %283
  store i64 %285, i64* %cur_archive_file_ofs, align 8
  %286 = bitcast [30 x i8]* %local_dir_header to i8*
  call void @llvm.memset.p0i8.i64(i8* %286, i8 0, i64 30, i32 16, i1 false)
  %287 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %288 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %287, i32 0, i32 10
  %289 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %288, align 8
  %290 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %291 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %290, i32 0, i32 11
  %292 = load i8*, i8** %291, align 8
  %293 = load i64, i64* %cur_archive_file_ofs, align 8
  %294 = load i8*, i8** %19, align 8
  %295 = load i64, i64* %archive_name_size, align 8
  %296 = call i64 %289(i8* %292, i64 %293, i8* %294, i64 %295)
  %297 = load i64, i64* %archive_name_size, align 8
  %298 = icmp ne i64 %296, %297
  br i1 %298, label %299, label %308

; <label>:299                                     ; preds = %280
  %300 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %301 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %300, i32 0, i32 6
  %302 = load void (i8*, i8*)*, void (i8*, i8*)** %301, align 8
  %303 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %304 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %303, i32 0, i32 8
  %305 = load i8*, i8** %304, align 8
  %306 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %307 = bitcast %struct.tdefl_compressor* %306 to i8*
  call void %302(i8* %305, i8* %307)
  store i32 0, i32* %17, align 4
  br label %463

; <label>:308                                     ; preds = %280
  %309 = load i64, i64* %archive_name_size, align 8
  %310 = load i64, i64* %cur_archive_file_ofs, align 8
  %311 = add i64 %310, %309
  store i64 %311, i64* %cur_archive_file_ofs, align 8
  %312 = load i32, i32* %24, align 4
  %313 = and i32 %312, 1024
  %314 = icmp ne i32 %313, 0
  br i1 %314, label %325, label %315

; <label>:315                                     ; preds = %308
  %316 = load i8*, i8** %20, align 8
  %317 = load i64, i64* %21, align 8
  %318 = call i64 @mz_crc32(i64 0, i8* %316, i64 %317)
  %319 = trunc i64 %318 to i32
  store i32 %319, i32* %26, align 4
  %320 = load i64, i64* %21, align 8
  store i64 %320, i64* %25, align 8
  %321 = load i64, i64* %25, align 8
  %322 = icmp ule i64 %321, 3
  br i1 %322, label %323, label %324

; <label>:323                                     ; preds = %315
  store i32 0, i32* %level, align 4
  store i32 1, i32* %store_data_uncompressed, align 4
  br label %324

; <label>:324                                     ; preds = %323, %315
  br label %325

; <label>:325                                     ; preds = %324, %308
  %326 = load i32, i32* %store_data_uncompressed, align 4
  %327 = icmp ne i32 %326, 0
  br i1 %327, label %328, label %360

; <label>:328                                     ; preds = %325
  %329 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %330 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %329, i32 0, i32 10
  %331 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %330, align 8
  %332 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %333 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %332, i32 0, i32 11
  %334 = load i8*, i8** %333, align 8
  %335 = load i64, i64* %cur_archive_file_ofs, align 8
  %336 = load i8*, i8** %20, align 8
  %337 = load i64, i64* %21, align 8
  %338 = call i64 %331(i8* %334, i64 %335, i8* %336, i64 %337)
  %339 = load i64, i64* %21, align 8
  %340 = icmp ne i64 %338, %339
  br i1 %340, label %341, label %350

; <label>:341                                     ; preds = %328
  %342 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %343 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %342, i32 0, i32 6
  %344 = load void (i8*, i8*)*, void (i8*, i8*)** %343, align 8
  %345 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %346 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %345, i32 0, i32 8
  %347 = load i8*, i8** %346, align 8
  %348 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %349 = bitcast %struct.tdefl_compressor* %348 to i8*
  call void %344(i8* %347, i8* %349)
  store i32 0, i32* %17, align 4
  br label %463

; <label>:350                                     ; preds = %328
  %351 = load i64, i64* %21, align 8
  %352 = load i64, i64* %cur_archive_file_ofs, align 8
  %353 = add i64 %352, %351
  store i64 %353, i64* %cur_archive_file_ofs, align 8
  %354 = load i64, i64* %21, align 8
  store i64 %354, i64* %comp_size, align 8
  %355 = load i32, i32* %24, align 4
  %356 = and i32 %355, 1024
  %357 = icmp ne i32 %356, 0
  br i1 %357, label %358, label %359

; <label>:358                                     ; preds = %350
  store i16 8, i16* %method, align 2
  br label %359

; <label>:359                                     ; preds = %358, %350
  br label %396

; <label>:360                                     ; preds = %325
  %361 = load i64, i64* %21, align 8
  %362 = icmp ne i64 %361, 0
  br i1 %362, label %363, label %395

; <label>:363                                     ; preds = %360
  %364 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %365 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %state, i32 0, i32 0
  store %struct.mz_zip_archive_tag* %364, %struct.mz_zip_archive_tag** %365, align 8
  %366 = load i64, i64* %cur_archive_file_ofs, align 8
  %367 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %state, i32 0, i32 1
  store i64 %366, i64* %367, align 8
  %368 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %state, i32 0, i32 2
  store i64 0, i64* %368, align 8
  %369 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %370 = bitcast %struct.mz_zip_writer_add_state* %state to i8*
  %371 = load i32, i32* %level, align 4
  %372 = call i32 @tdefl_create_comp_flags_from_zip_params(i32 %371, i32 -15, i32 0)
  %373 = call i32 @tdefl_init(%struct.tdefl_compressor* %369, i32 (i8*, i32, i8*)* @mz_zip_writer_add_put_buf_callback, i8* %370, i32 %372)
  %374 = icmp ne i32 %373, 0
  br i1 %374, label %381, label %375

; <label>:375                                     ; preds = %363
  %376 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %377 = load i8*, i8** %20, align 8
  %378 = load i64, i64* %21, align 8
  %379 = call i32 @tdefl_compress_buffer(%struct.tdefl_compressor* %376, i8* %377, i64 %378, i32 4)
  %380 = icmp ne i32 %379, 1
  br i1 %380, label %381, label %390

; <label>:381                                     ; preds = %375, %363
  %382 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %383 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %382, i32 0, i32 6
  %384 = load void (i8*, i8*)*, void (i8*, i8*)** %383, align 8
  %385 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %386 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %385, i32 0, i32 8
  %387 = load i8*, i8** %386, align 8
  %388 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %389 = bitcast %struct.tdefl_compressor* %388 to i8*
  call void %384(i8* %387, i8* %389)
  store i32 0, i32* %17, align 4
  br label %463

; <label>:390                                     ; preds = %375
  %391 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %state, i32 0, i32 2
  %392 = load i64, i64* %391, align 8
  store i64 %392, i64* %comp_size, align 8
  %393 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %state, i32 0, i32 1
  %394 = load i64, i64* %393, align 8
  store i64 %394, i64* %cur_archive_file_ofs, align 8
  store i16 8, i16* %method, align 2
  br label %395

; <label>:395                                     ; preds = %390, %360
  br label %396

; <label>:396                                     ; preds = %395, %359
  %397 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %398 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %397, i32 0, i32 6
  %399 = load void (i8*, i8*)*, void (i8*, i8*)** %398, align 8
  %400 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %401 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %400, i32 0, i32 8
  %402 = load i8*, i8** %401, align 8
  %403 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %404 = bitcast %struct.tdefl_compressor* %403 to i8*
  call void %399(i8* %402, i8* %404)
  store %struct.tdefl_compressor* null, %struct.tdefl_compressor** %pComp, align 8
  %405 = load i64, i64* %comp_size, align 8
  %406 = icmp ugt i64 %405, 4294967295
  br i1 %406, label %410, label %407

; <label>:407                                     ; preds = %396
  %408 = load i64, i64* %cur_archive_file_ofs, align 8
  %409 = icmp ugt i64 %408, 4294967295
  br i1 %409, label %410, label %411

; <label>:410                                     ; preds = %407, %396
  store i32 0, i32* %17, align 4
  br label %463

; <label>:411                                     ; preds = %407
  %412 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %413 = getelementptr inbounds [30 x i8], [30 x i8]* %local_dir_header, i32 0, i32 0
  %414 = load i64, i64* %archive_name_size, align 8
  %415 = trunc i64 %414 to i16
  %416 = load i64, i64* %25, align 8
  %417 = load i64, i64* %comp_size, align 8
  %418 = load i32, i32* %26, align 4
  %419 = load i16, i16* %method, align 2
  %420 = load i16, i16* %dos_time, align 2
  %421 = load i16, i16* %dos_date, align 2
  %422 = call i32 @mz_zip_writer_create_local_dir_header(%struct.mz_zip_archive_tag* %412, i8* %413, i16 zeroext %415, i16 zeroext 0, i64 %416, i64 %417, i32 %418, i16 zeroext %419, i16 zeroext 0, i16 zeroext %420, i16 zeroext %421)
  %423 = icmp ne i32 %422, 0
  br i1 %423, label %425, label %424

; <label>:424                                     ; preds = %411
  store i32 0, i32* %17, align 4
  br label %463

; <label>:425                                     ; preds = %411
  %426 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %427 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %426, i32 0, i32 10
  %428 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %427, align 8
  %429 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %430 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %429, i32 0, i32 11
  %431 = load i8*, i8** %430, align 8
  %432 = load i64, i64* %local_dir_header_ofs, align 8
  %433 = getelementptr inbounds [30 x i8], [30 x i8]* %local_dir_header, i32 0, i32 0
  %434 = call i64 %428(i8* %431, i64 %432, i8* %433, i64 30)
  %435 = icmp ne i64 %434, 30
  br i1 %435, label %436, label %437

; <label>:436                                     ; preds = %425
  store i32 0, i32* %17, align 4
  br label %463

; <label>:437                                     ; preds = %425
  %438 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %439 = load i8*, i8** %19, align 8
  %440 = load i64, i64* %archive_name_size, align 8
  %441 = trunc i64 %440 to i16
  %442 = load i8*, i8** %22, align 8
  %443 = load i16, i16* %23, align 2
  %444 = load i64, i64* %25, align 8
  %445 = load i64, i64* %comp_size, align 8
  %446 = load i32, i32* %26, align 4
  %447 = load i16, i16* %method, align 2
  %448 = load i16, i16* %dos_time, align 2
  %449 = load i16, i16* %dos_date, align 2
  %450 = load i64, i64* %local_dir_header_ofs, align 8
  %451 = load i32, i32* %ext_attributes, align 4
  %452 = call i32 @mz_zip_writer_add_to_central_dir(%struct.mz_zip_archive_tag* %438, i8* %439, i16 zeroext %441, i8* null, i16 zeroext 0, i8* %442, i16 zeroext %443, i64 %444, i64 %445, i32 %446, i16 zeroext %447, i16 zeroext 0, i16 zeroext %448, i16 zeroext %449, i64 %450, i32 %451)
  %453 = icmp ne i32 %452, 0
  br i1 %453, label %455, label %454

; <label>:454                                     ; preds = %437
  store i32 0, i32* %17, align 4
  br label %463

; <label>:455                                     ; preds = %437
  %456 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %457 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %456, i32 0, i32 2
  %458 = load i32, i32* %457, align 8
  %459 = add i32 %458, 1
  store i32 %459, i32* %457, align 8
  %460 = load i64, i64* %cur_archive_file_ofs, align 8
  %461 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %18, align 8
  %462 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %461, i32 0, i32 0
  store i64 %460, i64* %462, align 8
  store i32 1, i32* %17, align 4
  br label %463

; <label>:463                                     ; preds = %455, %454, %436, %424, %410, %381, %341, %299, %249, %238, %221, %158, %138, %115, %107, %102, %95, %84
  %464 = load i32, i32* %17, align 4
  ret i32 %464
}

; Function Attrs: nounwind uwtable
define internal i32 @mz_zip_writer_validate_archive_name(i8* %pArchive_name) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  store i8* %pArchive_name, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = load i8, i8* %3, align 1
  %5 = sext i8 %4 to i32
  %6 = icmp eq i32 %5, 47
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  store i32 0, i32* %1, align 4
  br label %28

; <label>:8                                       ; preds = %0
  br label %9

; <label>:9                                       ; preds = %24, %8
  %10 = load i8*, i8** %2, align 8
  %11 = load i8, i8* %10, align 1
  %12 = icmp ne i8 %11, 0
  br i1 %12, label %13, label %27

; <label>:13                                      ; preds = %9
  %14 = load i8*, i8** %2, align 8
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  %17 = icmp eq i32 %16, 92
  br i1 %17, label %23, label %18

; <label>:18                                      ; preds = %13
  %19 = load i8*, i8** %2, align 8
  %20 = load i8, i8* %19, align 1
  %21 = sext i8 %20 to i32
  %22 = icmp eq i32 %21, 58
  br i1 %22, label %23, label %24

; <label>:23                                      ; preds = %18, %13
  store i32 0, i32* %1, align 4
  br label %28

; <label>:24                                      ; preds = %18
  %25 = load i8*, i8** %2, align 8
  %26 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %26, i8** %2, align 8
  br label %9

; <label>:27                                      ; preds = %9
  store i32 1, i32* %1, align 4
  br label %28

; <label>:28                                      ; preds = %27, %23, %7
  %29 = load i32, i32* %1, align 4
  ret i32 %29
}

; Function Attrs: nounwind
declare i64 @time(i64*) #1

; Function Attrs: nounwind uwtable
define internal void @mz_zip_time_to_dos_time(i64 %time, i16* %pDOS_time, i16* %pDOS_date) #0 {
  %1 = alloca i64, align 8
  %2 = alloca i16*, align 8
  %3 = alloca i16*, align 8
  %tm = alloca %struct.tm*, align 8
  store i64 %time, i64* %1, align 8
  store i16* %pDOS_time, i16** %2, align 8
  store i16* %pDOS_date, i16** %3, align 8
  %4 = call %struct.tm* @localtime(i64* %1) #6
  store %struct.tm* %4, %struct.tm** %tm, align 8
  %5 = load %struct.tm*, %struct.tm** %tm, align 8
  %6 = getelementptr inbounds %struct.tm, %struct.tm* %5, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 11
  %9 = load %struct.tm*, %struct.tm** %tm, align 8
  %10 = getelementptr inbounds %struct.tm, %struct.tm* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = shl i32 %11, 5
  %13 = add nsw i32 %8, %12
  %14 = load %struct.tm*, %struct.tm** %tm, align 8
  %15 = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = ashr i32 %16, 1
  %18 = add nsw i32 %13, %17
  %19 = trunc i32 %18 to i16
  %20 = load i16*, i16** %2, align 8
  store i16 %19, i16* %20, align 2
  %21 = load %struct.tm*, %struct.tm** %tm, align 8
  %22 = getelementptr inbounds %struct.tm, %struct.tm* %21, i32 0, i32 5
  %23 = load i32, i32* %22, align 4
  %24 = add nsw i32 %23, 1900
  %25 = sub nsw i32 %24, 1980
  %26 = shl i32 %25, 9
  %27 = load %struct.tm*, %struct.tm** %tm, align 8
  %28 = getelementptr inbounds %struct.tm, %struct.tm* %27, i32 0, i32 4
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, 1
  %31 = shl i32 %30, 5
  %32 = add nsw i32 %26, %31
  %33 = load %struct.tm*, %struct.tm** %tm, align 8
  %34 = getelementptr inbounds %struct.tm, %struct.tm* %33, i32 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = add nsw i32 %32, %35
  %37 = trunc i32 %36 to i16
  %38 = load i16*, i16** %3, align 8
  store i16 %37, i16* %38, align 2
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @mz_zip_writer_compute_padding_needed_for_file_alignment(%struct.mz_zip_archive_tag* %pZip) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %n = alloca i32, align 4
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  %3 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %4 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %3, i32 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %8, label %7

; <label>:7                                       ; preds = %0
  store i32 0, i32* %1, align 4
  br label %29

; <label>:8                                       ; preds = %0
  %9 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %10 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %9, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %13 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %12, i32 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = sub i32 %14, 1
  %16 = zext i32 %15 to i64
  %17 = and i64 %11, %16
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %n, align 4
  %19 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %20 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %19, i32 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = load i32, i32* %n, align 4
  %23 = sub i32 %21, %22
  %24 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %25 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %24, i32 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = sub i32 %26, 1
  %28 = and i32 %23, %27
  store i32 %28, i32* %1, align 4
  br label %29

; <label>:29                                      ; preds = %8, %7
  %30 = load i32, i32* %1, align 4
  ret i32 %30
}

; Function Attrs: nounwind uwtable
define internal i32 @mz_zip_writer_write_zeros(%struct.mz_zip_archive_tag* %pZip, i64 %cur_file_ofs, i32 %n) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %buf = alloca [4096 x i8], align 16
  %s = alloca i32, align 4
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  store i64 %cur_file_ofs, i64* %3, align 8
  store i32 %n, i32* %4, align 4
  %5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i32 0, i32 0
  %6 = load i32, i32* %4, align 4
  %7 = zext i32 %6 to i64
  %8 = icmp ult i64 4096, %7
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %0
  br label %13

; <label>:10                                      ; preds = %0
  %11 = load i32, i32* %4, align 4
  %12 = zext i32 %11 to i64
  br label %13

; <label>:13                                      ; preds = %10, %9
  %14 = phi i64 [ 4096, %9 ], [ %12, %10 ]
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 %14, i32 16, i1 false)
  br label %15

; <label>:15                                      ; preds = %44, %13
  %16 = load i32, i32* %4, align 4
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %52

; <label>:18                                      ; preds = %15
  %19 = load i32, i32* %4, align 4
  %20 = zext i32 %19 to i64
  %21 = icmp ult i64 4096, %20
  br i1 %21, label %22, label %23

; <label>:22                                      ; preds = %18
  br label %26

; <label>:23                                      ; preds = %18
  %24 = load i32, i32* %4, align 4
  %25 = zext i32 %24 to i64
  br label %26

; <label>:26                                      ; preds = %23, %22
  %27 = phi i64 [ 4096, %22 ], [ %25, %23 ]
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* %s, align 4
  %29 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %30 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %29, i32 0, i32 10
  %31 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %30, align 8
  %32 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %33 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %32, i32 0, i32 11
  %34 = load i8*, i8** %33, align 8
  %35 = load i64, i64* %3, align 8
  %36 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i32 0, i32 0
  %37 = load i32, i32* %s, align 4
  %38 = zext i32 %37 to i64
  %39 = call i64 %31(i8* %34, i64 %35, i8* %36, i64 %38)
  %40 = load i32, i32* %s, align 4
  %41 = zext i32 %40 to i64
  %42 = icmp ne i64 %39, %41
  br i1 %42, label %43, label %44

; <label>:43                                      ; preds = %26
  store i32 0, i32* %1, align 4
  br label %53

; <label>:44                                      ; preds = %26
  %45 = load i32, i32* %s, align 4
  %46 = zext i32 %45 to i64
  %47 = load i64, i64* %3, align 8
  %48 = add i64 %47, %46
  store i64 %48, i64* %3, align 8
  %49 = load i32, i32* %s, align 4
  %50 = load i32, i32* %4, align 4
  %51 = sub i32 %50, %49
  store i32 %51, i32* %4, align 4
  br label %15

; <label>:52                                      ; preds = %15
  store i32 1, i32* %1, align 4
  br label %53

; <label>:53                                      ; preds = %52, %43
  %54 = load i32, i32* %1, align 4
  ret i32 %54
}

; Function Attrs: nounwind uwtable
define internal i32 @mz_zip_writer_add_put_buf_callback(i8* %pBuf, i32 %len, i8* %pUser) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %pState = alloca %struct.mz_zip_writer_add_state*, align 8
  store i8* %pBuf, i8** %2, align 8
  store i32 %len, i32* %3, align 4
  store i8* %pUser, i8** %4, align 8
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast i8* %5 to %struct.mz_zip_writer_add_state*
  store %struct.mz_zip_writer_add_state* %6, %struct.mz_zip_writer_add_state** %pState, align 8
  %7 = load %struct.mz_zip_writer_add_state*, %struct.mz_zip_writer_add_state** %pState, align 8
  %8 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %7, i32 0, i32 0
  %9 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %8, align 8
  %10 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %9, i32 0, i32 10
  %11 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %10, align 8
  %12 = load %struct.mz_zip_writer_add_state*, %struct.mz_zip_writer_add_state** %pState, align 8
  %13 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %12, i32 0, i32 0
  %14 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %13, align 8
  %15 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %14, i32 0, i32 11
  %16 = load i8*, i8** %15, align 8
  %17 = load %struct.mz_zip_writer_add_state*, %struct.mz_zip_writer_add_state** %pState, align 8
  %18 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %17, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = load i8*, i8** %2, align 8
  %21 = load i32, i32* %3, align 4
  %22 = sext i32 %21 to i64
  %23 = call i64 %11(i8* %16, i64 %19, i8* %20, i64 %22)
  %24 = trunc i64 %23 to i32
  %25 = load i32, i32* %3, align 4
  %26 = icmp ne i32 %24, %25
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %0
  store i32 0, i32* %1, align 4
  br label %41

; <label>:28                                      ; preds = %0
  %29 = load i32, i32* %3, align 4
  %30 = sext i32 %29 to i64
  %31 = load %struct.mz_zip_writer_add_state*, %struct.mz_zip_writer_add_state** %pState, align 8
  %32 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %31, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, %30
  store i64 %34, i64* %32, align 8
  %35 = load i32, i32* %3, align 4
  %36 = sext i32 %35 to i64
  %37 = load %struct.mz_zip_writer_add_state*, %struct.mz_zip_writer_add_state** %pState, align 8
  %38 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %37, i32 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, %36
  store i64 %40, i64* %38, align 8
  store i32 1, i32* %1, align 4
  br label %41

; <label>:41                                      ; preds = %28, %27
  %42 = load i32, i32* %1, align 4
  ret i32 %42
}

; Function Attrs: nounwind uwtable
define internal i32 @mz_zip_writer_create_local_dir_header(%struct.mz_zip_archive_tag* %pZip, i8* %pDst, i16 zeroext %filename_size, i16 zeroext %extra_size, i64 %uncomp_size, i64 %comp_size, i32 %uncomp_crc32, i16 zeroext %method, i16 zeroext %bit_flags, i16 zeroext %dos_time, i16 zeroext %dos_date) #0 {
  %1 = alloca %struct.mz_zip_archive_tag*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = alloca i16, align 2
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %1, align 8
  store i8* %pDst, i8** %2, align 8
  store i16 %filename_size, i16* %3, align 2
  store i16 %extra_size, i16* %4, align 2
  store i64 %uncomp_size, i64* %5, align 8
  store i64 %comp_size, i64* %6, align 8
  store i32 %uncomp_crc32, i32* %7, align 4
  store i16 %method, i16* %8, align 2
  store i16 %bit_flags, i16* %9, align 2
  store i16 %dos_time, i16* %10, align 2
  store i16 %dos_date, i16* %11, align 2
  %12 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %1, align 8
  %13 = load i8*, i8** %2, align 8
  call void @llvm.memset.p0i8.i64(i8* %13, i8 0, i64 30, i32 1, i1 false)
  %14 = load i8*, i8** %2, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 0
  call void @mz_write_le32(i8* %15, i32 67324752)
  %16 = load i8*, i8** %2, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 4
  %18 = load i16, i16* %8, align 2
  %19 = zext i16 %18 to i32
  %20 = icmp ne i32 %19, 0
  %21 = select i1 %20, i32 20, i32 0
  %22 = trunc i32 %21 to i16
  call void @mz_write_le16(i8* %17, i16 zeroext %22)
  %23 = load i8*, i8** %2, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 6
  %25 = load i16, i16* %9, align 2
  call void @mz_write_le16(i8* %24, i16 zeroext %25)
  %26 = load i8*, i8** %2, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 8
  %28 = load i16, i16* %8, align 2
  call void @mz_write_le16(i8* %27, i16 zeroext %28)
  %29 = load i8*, i8** %2, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 10
  %31 = load i16, i16* %10, align 2
  call void @mz_write_le16(i8* %30, i16 zeroext %31)
  %32 = load i8*, i8** %2, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 12
  %34 = load i16, i16* %11, align 2
  call void @mz_write_le16(i8* %33, i16 zeroext %34)
  %35 = load i8*, i8** %2, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 14
  %37 = load i32, i32* %7, align 4
  call void @mz_write_le32(i8* %36, i32 %37)
  %38 = load i8*, i8** %2, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 18
  %40 = load i64, i64* %6, align 8
  %41 = trunc i64 %40 to i32
  call void @mz_write_le32(i8* %39, i32 %41)
  %42 = load i8*, i8** %2, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 22
  %44 = load i64, i64* %5, align 8
  %45 = trunc i64 %44 to i32
  call void @mz_write_le32(i8* %43, i32 %45)
  %46 = load i8*, i8** %2, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 26
  %48 = load i16, i16* %3, align 2
  call void @mz_write_le16(i8* %47, i16 zeroext %48)
  %49 = load i8*, i8** %2, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 28
  %51 = load i16, i16* %4, align 2
  call void @mz_write_le16(i8* %50, i16 zeroext %51)
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @mz_zip_writer_add_to_central_dir(%struct.mz_zip_archive_tag* %pZip, i8* %pFilename, i16 zeroext %filename_size, i8* %pExtra, i16 zeroext %extra_size, i8* %pComment, i16 zeroext %comment_size, i64 %uncomp_size, i64 %comp_size, i32 %uncomp_crc32, i16 zeroext %method, i16 zeroext %bit_flags, i16 zeroext %dos_time, i16 zeroext %dos_date, i64 %local_header_ofs, i32 %ext_attributes) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca %struct.mz_zip_array*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.mz_zip_archive_tag*, align 8
  %8 = alloca %struct.mz_zip_array*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.mz_zip_archive_tag*, align 8
  %13 = alloca %struct.mz_zip_array*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %orig_size.i10 = alloca i64, align 8
  %16 = alloca i32, align 4
  %17 = alloca %struct.mz_zip_archive_tag*, align 8
  %18 = alloca %struct.mz_zip_array*, align 8
  %19 = alloca i64, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %struct.mz_zip_archive_tag*, align 8
  %23 = alloca %struct.mz_zip_array*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i64, align 8
  %orig_size.i7 = alloca i64, align 8
  %26 = alloca i32, align 4
  %27 = alloca %struct.mz_zip_archive_tag*, align 8
  %28 = alloca %struct.mz_zip_array*, align 8
  %29 = alloca i64, align 8
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca %struct.mz_zip_archive_tag*, align 8
  %33 = alloca %struct.mz_zip_array*, align 8
  %34 = alloca i8*, align 8
  %35 = alloca i64, align 8
  %orig_size.i4 = alloca i64, align 8
  %36 = alloca i32, align 4
  %37 = alloca %struct.mz_zip_archive_tag*, align 8
  %38 = alloca %struct.mz_zip_array*, align 8
  %39 = alloca i64, align 8
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca %struct.mz_zip_archive_tag*, align 8
  %43 = alloca %struct.mz_zip_array*, align 8
  %44 = alloca i8*, align 8
  %45 = alloca i64, align 8
  %orig_size.i1 = alloca i64, align 8
  %46 = alloca i32, align 4
  %47 = alloca %struct.mz_zip_archive_tag*, align 8
  %48 = alloca %struct.mz_zip_array*, align 8
  %49 = alloca i64, align 8
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca %struct.mz_zip_archive_tag*, align 8
  %53 = alloca %struct.mz_zip_array*, align 8
  %54 = alloca i8*, align 8
  %55 = alloca i64, align 8
  %orig_size.i = alloca i64, align 8
  %56 = alloca i32, align 4
  %57 = alloca %struct.mz_zip_archive_tag*, align 8
  %58 = alloca i8*, align 8
  %59 = alloca i16, align 2
  %60 = alloca i8*, align 8
  %61 = alloca i16, align 2
  %62 = alloca i8*, align 8
  %63 = alloca i16, align 2
  %64 = alloca i64, align 8
  %65 = alloca i64, align 8
  %66 = alloca i32, align 4
  %67 = alloca i16, align 2
  %68 = alloca i16, align 2
  %69 = alloca i16, align 2
  %70 = alloca i16, align 2
  %71 = alloca i64, align 8
  %72 = alloca i32, align 4
  %pState = alloca %struct.mz_zip_internal_state_tag*, align 8
  %central_dir_ofs = alloca i32, align 4
  %orig_central_dir_size = alloca i64, align 8
  %central_dir_header = alloca [46 x i8], align 16
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %57, align 8
  store i8* %pFilename, i8** %58, align 8
  store i16 %filename_size, i16* %59, align 2
  store i8* %pExtra, i8** %60, align 8
  store i16 %extra_size, i16* %61, align 2
  store i8* %pComment, i8** %62, align 8
  store i16 %comment_size, i16* %63, align 2
  store i64 %uncomp_size, i64* %64, align 8
  store i64 %comp_size, i64* %65, align 8
  store i32 %uncomp_crc32, i32* %66, align 4
  store i16 %method, i16* %67, align 2
  store i16 %bit_flags, i16* %68, align 2
  store i16 %dos_time, i16* %69, align 2
  store i16 %dos_date, i16* %70, align 2
  store i64 %local_header_ofs, i64* %71, align 8
  store i32 %ext_attributes, i32* %72, align 4
  %73 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %57, align 8
  %74 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %73, i32 0, i32 12
  %75 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %74, align 8
  store %struct.mz_zip_internal_state_tag* %75, %struct.mz_zip_internal_state_tag** %pState, align 8
  %76 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %77 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %76, i32 0, i32 0
  %78 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %77, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = trunc i64 %79 to i32
  store i32 %80, i32* %central_dir_ofs, align 4
  %81 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %82 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %81, i32 0, i32 0
  %83 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %82, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* %orig_central_dir_size, align 8
  %85 = load i64, i64* %71, align 8
  %86 = icmp ugt i64 %85, 4294967295
  br i1 %86, label %103, label %87

; <label>:87                                      ; preds = %0
  %88 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %89 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %88, i32 0, i32 0
  %90 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %89, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 46
  %93 = load i16, i16* %59, align 2
  %94 = zext i16 %93 to i64
  %95 = add i64 %92, %94
  %96 = load i16, i16* %61, align 2
  %97 = zext i16 %96 to i64
  %98 = add i64 %95, %97
  %99 = load i16, i16* %63, align 2
  %100 = zext i16 %99 to i64
  %101 = add i64 %98, %100
  %102 = icmp ugt i64 %101, 4294967295
  br i1 %102, label %103, label %104

; <label>:103                                     ; preds = %87, %0
  store i32 0, i32* %56, align 4
  br label %423

; <label>:104                                     ; preds = %87
  %105 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %57, align 8
  %106 = getelementptr inbounds [46 x i8], [46 x i8]* %central_dir_header, i32 0, i32 0
  %107 = load i16, i16* %59, align 2
  %108 = load i16, i16* %61, align 2
  %109 = load i16, i16* %63, align 2
  %110 = load i64, i64* %64, align 8
  %111 = load i64, i64* %65, align 8
  %112 = load i32, i32* %66, align 4
  %113 = load i16, i16* %67, align 2
  %114 = load i16, i16* %68, align 2
  %115 = load i16, i16* %69, align 2
  %116 = load i16, i16* %70, align 2
  %117 = load i64, i64* %71, align 8
  %118 = load i32, i32* %72, align 4
  %119 = call i32 @mz_zip_writer_create_central_dir_header(%struct.mz_zip_archive_tag* %105, i8* %106, i16 zeroext %107, i16 zeroext %108, i16 zeroext %109, i64 %110, i64 %111, i32 %112, i16 zeroext %113, i16 zeroext %114, i16 zeroext %115, i16 zeroext %116, i64 %117, i32 %118)
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %122, label %121

; <label>:121                                     ; preds = %104
  store i32 0, i32* %56, align 4
  br label %423

; <label>:122                                     ; preds = %104
  %123 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %57, align 8
  %124 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %125 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %124, i32 0, i32 0
  %126 = getelementptr inbounds [46 x i8], [46 x i8]* %central_dir_header, i32 0, i32 0
  store %struct.mz_zip_archive_tag* %123, %struct.mz_zip_archive_tag** %52, align 8
  store %struct.mz_zip_array* %125, %struct.mz_zip_array** %53, align 8
  store i8* %126, i8** %54, align 8
  store i64 46, i64* %55, align 8
  %127 = load %struct.mz_zip_array*, %struct.mz_zip_array** %53, align 8
  %128 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %127, i32 0, i32 1
  %129 = load i64, i64* %128, align 8
  store i64 %129, i64* %orig_size.i, align 8
  %130 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %52, align 8
  %131 = load %struct.mz_zip_array*, %struct.mz_zip_array** %53, align 8
  %132 = load i64, i64* %orig_size.i, align 8
  %133 = load i64, i64* %55, align 8
  %134 = add i64 %132, %133
  store %struct.mz_zip_archive_tag* %130, %struct.mz_zip_archive_tag** %47, align 8
  store %struct.mz_zip_array* %131, %struct.mz_zip_array** %48, align 8
  store i64 %134, i64* %49, align 8
  store i32 1, i32* %50, align 4
  %135 = load i64, i64* %49, align 8
  %136 = load %struct.mz_zip_array*, %struct.mz_zip_array** %48, align 8
  %137 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %136, i32 0, i32 2
  %138 = load i64, i64* %137, align 8
  %139 = icmp ugt i64 %135, %138
  br i1 %139, label %140, label %149

; <label>:140                                     ; preds = %122
  %141 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %47, align 8
  %142 = load %struct.mz_zip_array*, %struct.mz_zip_array** %48, align 8
  %143 = load i64, i64* %49, align 8
  %144 = load i32, i32* %50, align 4
  %145 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive_tag* %141, %struct.mz_zip_array* %142, i64 %143, i32 %144) #6
  %146 = icmp ne i32 %145, 0
  br i1 %146, label %148, label %147

; <label>:147                                     ; preds = %140
  store i32 0, i32* %46, align 4
  br label %mz_zip_array_resize.exit.i

; <label>:148                                     ; preds = %140
  br label %149

; <label>:149                                     ; preds = %148, %122
  %150 = load i64, i64* %49, align 8
  %151 = load %struct.mz_zip_array*, %struct.mz_zip_array** %48, align 8
  %152 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %151, i32 0, i32 1
  store i64 %150, i64* %152, align 8
  store i32 1, i32* %46, align 4
  br label %mz_zip_array_resize.exit.i

mz_zip_array_resize.exit.i:                       ; preds = %149, %147
  %153 = load i32, i32* %46, align 4
  %154 = icmp ne i32 %153, 0
  br i1 %154, label %156, label %155

; <label>:155                                     ; preds = %mz_zip_array_resize.exit.i
  store i32 0, i32* %51, align 4
  br label %mz_zip_array_push_back.exit

; <label>:156                                     ; preds = %mz_zip_array_resize.exit.i
  %157 = load %struct.mz_zip_array*, %struct.mz_zip_array** %53, align 8
  %158 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %157, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  %160 = load i64, i64* %orig_size.i, align 8
  %161 = load %struct.mz_zip_array*, %struct.mz_zip_array** %53, align 8
  %162 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %161, i32 0, i32 3
  %163 = load i32, i32* %162, align 8
  %164 = zext i32 %163 to i64
  %165 = mul i64 %160, %164
  %166 = getelementptr inbounds i8, i8* %159, i64 %165
  %167 = load i8*, i8** %54, align 8
  %168 = load i64, i64* %55, align 8
  %169 = load %struct.mz_zip_array*, %struct.mz_zip_array** %53, align 8
  %170 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %169, i32 0, i32 3
  %171 = load i32, i32* %170, align 8
  %172 = zext i32 %171 to i64
  %173 = mul i64 %168, %172
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %166, i8* %167, i64 %173, i32 1, i1 false) #6
  store i32 1, i32* %51, align 4
  br label %mz_zip_array_push_back.exit

mz_zip_array_push_back.exit:                      ; preds = %155, %156
  %174 = load i32, i32* %51, align 4
  %175 = icmp ne i32 %174, 0
  br i1 %175, label %176, label %398

; <label>:176                                     ; preds = %mz_zip_array_push_back.exit
  %177 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %57, align 8
  %178 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %179 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %178, i32 0, i32 0
  %180 = load i8*, i8** %58, align 8
  %181 = load i16, i16* %59, align 2
  %182 = zext i16 %181 to i64
  store %struct.mz_zip_archive_tag* %177, %struct.mz_zip_archive_tag** %42, align 8
  store %struct.mz_zip_array* %179, %struct.mz_zip_array** %43, align 8
  store i8* %180, i8** %44, align 8
  store i64 %182, i64* %45, align 8
  %183 = load %struct.mz_zip_array*, %struct.mz_zip_array** %43, align 8
  %184 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %183, i32 0, i32 1
  %185 = load i64, i64* %184, align 8
  store i64 %185, i64* %orig_size.i1, align 8
  %186 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %42, align 8
  %187 = load %struct.mz_zip_array*, %struct.mz_zip_array** %43, align 8
  %188 = load i64, i64* %orig_size.i1, align 8
  %189 = load i64, i64* %45, align 8
  %190 = add i64 %188, %189
  store %struct.mz_zip_archive_tag* %186, %struct.mz_zip_archive_tag** %37, align 8
  store %struct.mz_zip_array* %187, %struct.mz_zip_array** %38, align 8
  store i64 %190, i64* %39, align 8
  store i32 1, i32* %40, align 4
  %191 = load i64, i64* %39, align 8
  %192 = load %struct.mz_zip_array*, %struct.mz_zip_array** %38, align 8
  %193 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %192, i32 0, i32 2
  %194 = load i64, i64* %193, align 8
  %195 = icmp ugt i64 %191, %194
  br i1 %195, label %196, label %205

; <label>:196                                     ; preds = %176
  %197 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %37, align 8
  %198 = load %struct.mz_zip_array*, %struct.mz_zip_array** %38, align 8
  %199 = load i64, i64* %39, align 8
  %200 = load i32, i32* %40, align 4
  %201 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive_tag* %197, %struct.mz_zip_array* %198, i64 %199, i32 %200) #6
  %202 = icmp ne i32 %201, 0
  br i1 %202, label %204, label %203

; <label>:203                                     ; preds = %196
  store i32 0, i32* %36, align 4
  br label %mz_zip_array_resize.exit.i2

; <label>:204                                     ; preds = %196
  br label %205

; <label>:205                                     ; preds = %204, %176
  %206 = load i64, i64* %39, align 8
  %207 = load %struct.mz_zip_array*, %struct.mz_zip_array** %38, align 8
  %208 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %207, i32 0, i32 1
  store i64 %206, i64* %208, align 8
  store i32 1, i32* %36, align 4
  br label %mz_zip_array_resize.exit.i2

mz_zip_array_resize.exit.i2:                      ; preds = %205, %203
  %209 = load i32, i32* %36, align 4
  %210 = icmp ne i32 %209, 0
  br i1 %210, label %212, label %211

; <label>:211                                     ; preds = %mz_zip_array_resize.exit.i2
  store i32 0, i32* %41, align 4
  br label %mz_zip_array_push_back.exit3

; <label>:212                                     ; preds = %mz_zip_array_resize.exit.i2
  %213 = load %struct.mz_zip_array*, %struct.mz_zip_array** %43, align 8
  %214 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %213, i32 0, i32 0
  %215 = load i8*, i8** %214, align 8
  %216 = load i64, i64* %orig_size.i1, align 8
  %217 = load %struct.mz_zip_array*, %struct.mz_zip_array** %43, align 8
  %218 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %217, i32 0, i32 3
  %219 = load i32, i32* %218, align 8
  %220 = zext i32 %219 to i64
  %221 = mul i64 %216, %220
  %222 = getelementptr inbounds i8, i8* %215, i64 %221
  %223 = load i8*, i8** %44, align 8
  %224 = load i64, i64* %45, align 8
  %225 = load %struct.mz_zip_array*, %struct.mz_zip_array** %43, align 8
  %226 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %225, i32 0, i32 3
  %227 = load i32, i32* %226, align 8
  %228 = zext i32 %227 to i64
  %229 = mul i64 %224, %228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %222, i8* %223, i64 %229, i32 1, i1 false) #6
  store i32 1, i32* %41, align 4
  br label %mz_zip_array_push_back.exit3

mz_zip_array_push_back.exit3:                     ; preds = %211, %212
  %230 = load i32, i32* %41, align 4
  %231 = icmp ne i32 %230, 0
  br i1 %231, label %232, label %398

; <label>:232                                     ; preds = %mz_zip_array_push_back.exit3
  %233 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %57, align 8
  %234 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %235 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %234, i32 0, i32 0
  %236 = load i8*, i8** %60, align 8
  %237 = load i16, i16* %61, align 2
  %238 = zext i16 %237 to i64
  store %struct.mz_zip_archive_tag* %233, %struct.mz_zip_archive_tag** %32, align 8
  store %struct.mz_zip_array* %235, %struct.mz_zip_array** %33, align 8
  store i8* %236, i8** %34, align 8
  store i64 %238, i64* %35, align 8
  %239 = load %struct.mz_zip_array*, %struct.mz_zip_array** %33, align 8
  %240 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %239, i32 0, i32 1
  %241 = load i64, i64* %240, align 8
  store i64 %241, i64* %orig_size.i4, align 8
  %242 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %32, align 8
  %243 = load %struct.mz_zip_array*, %struct.mz_zip_array** %33, align 8
  %244 = load i64, i64* %orig_size.i4, align 8
  %245 = load i64, i64* %35, align 8
  %246 = add i64 %244, %245
  store %struct.mz_zip_archive_tag* %242, %struct.mz_zip_archive_tag** %27, align 8
  store %struct.mz_zip_array* %243, %struct.mz_zip_array** %28, align 8
  store i64 %246, i64* %29, align 8
  store i32 1, i32* %30, align 4
  %247 = load i64, i64* %29, align 8
  %248 = load %struct.mz_zip_array*, %struct.mz_zip_array** %28, align 8
  %249 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %248, i32 0, i32 2
  %250 = load i64, i64* %249, align 8
  %251 = icmp ugt i64 %247, %250
  br i1 %251, label %252, label %261

; <label>:252                                     ; preds = %232
  %253 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %27, align 8
  %254 = load %struct.mz_zip_array*, %struct.mz_zip_array** %28, align 8
  %255 = load i64, i64* %29, align 8
  %256 = load i32, i32* %30, align 4
  %257 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive_tag* %253, %struct.mz_zip_array* %254, i64 %255, i32 %256) #6
  %258 = icmp ne i32 %257, 0
  br i1 %258, label %260, label %259

; <label>:259                                     ; preds = %252
  store i32 0, i32* %26, align 4
  br label %mz_zip_array_resize.exit.i5

; <label>:260                                     ; preds = %252
  br label %261

; <label>:261                                     ; preds = %260, %232
  %262 = load i64, i64* %29, align 8
  %263 = load %struct.mz_zip_array*, %struct.mz_zip_array** %28, align 8
  %264 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %263, i32 0, i32 1
  store i64 %262, i64* %264, align 8
  store i32 1, i32* %26, align 4
  br label %mz_zip_array_resize.exit.i5

mz_zip_array_resize.exit.i5:                      ; preds = %261, %259
  %265 = load i32, i32* %26, align 4
  %266 = icmp ne i32 %265, 0
  br i1 %266, label %268, label %267

; <label>:267                                     ; preds = %mz_zip_array_resize.exit.i5
  store i32 0, i32* %31, align 4
  br label %mz_zip_array_push_back.exit6

; <label>:268                                     ; preds = %mz_zip_array_resize.exit.i5
  %269 = load %struct.mz_zip_array*, %struct.mz_zip_array** %33, align 8
  %270 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %269, i32 0, i32 0
  %271 = load i8*, i8** %270, align 8
  %272 = load i64, i64* %orig_size.i4, align 8
  %273 = load %struct.mz_zip_array*, %struct.mz_zip_array** %33, align 8
  %274 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %273, i32 0, i32 3
  %275 = load i32, i32* %274, align 8
  %276 = zext i32 %275 to i64
  %277 = mul i64 %272, %276
  %278 = getelementptr inbounds i8, i8* %271, i64 %277
  %279 = load i8*, i8** %34, align 8
  %280 = load i64, i64* %35, align 8
  %281 = load %struct.mz_zip_array*, %struct.mz_zip_array** %33, align 8
  %282 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %281, i32 0, i32 3
  %283 = load i32, i32* %282, align 8
  %284 = zext i32 %283 to i64
  %285 = mul i64 %280, %284
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %278, i8* %279, i64 %285, i32 1, i1 false) #6
  store i32 1, i32* %31, align 4
  br label %mz_zip_array_push_back.exit6

mz_zip_array_push_back.exit6:                     ; preds = %267, %268
  %286 = load i32, i32* %31, align 4
  %287 = icmp ne i32 %286, 0
  br i1 %287, label %288, label %398

; <label>:288                                     ; preds = %mz_zip_array_push_back.exit6
  %289 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %57, align 8
  %290 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %291 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %290, i32 0, i32 0
  %292 = load i8*, i8** %62, align 8
  %293 = load i16, i16* %63, align 2
  %294 = zext i16 %293 to i64
  store %struct.mz_zip_archive_tag* %289, %struct.mz_zip_archive_tag** %22, align 8
  store %struct.mz_zip_array* %291, %struct.mz_zip_array** %23, align 8
  store i8* %292, i8** %24, align 8
  store i64 %294, i64* %25, align 8
  %295 = load %struct.mz_zip_array*, %struct.mz_zip_array** %23, align 8
  %296 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %295, i32 0, i32 1
  %297 = load i64, i64* %296, align 8
  store i64 %297, i64* %orig_size.i7, align 8
  %298 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %22, align 8
  %299 = load %struct.mz_zip_array*, %struct.mz_zip_array** %23, align 8
  %300 = load i64, i64* %orig_size.i7, align 8
  %301 = load i64, i64* %25, align 8
  %302 = add i64 %300, %301
  store %struct.mz_zip_archive_tag* %298, %struct.mz_zip_archive_tag** %17, align 8
  store %struct.mz_zip_array* %299, %struct.mz_zip_array** %18, align 8
  store i64 %302, i64* %19, align 8
  store i32 1, i32* %20, align 4
  %303 = load i64, i64* %19, align 8
  %304 = load %struct.mz_zip_array*, %struct.mz_zip_array** %18, align 8
  %305 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %304, i32 0, i32 2
  %306 = load i64, i64* %305, align 8
  %307 = icmp ugt i64 %303, %306
  br i1 %307, label %308, label %317

; <label>:308                                     ; preds = %288
  %309 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %310 = load %struct.mz_zip_array*, %struct.mz_zip_array** %18, align 8
  %311 = load i64, i64* %19, align 8
  %312 = load i32, i32* %20, align 4
  %313 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive_tag* %309, %struct.mz_zip_array* %310, i64 %311, i32 %312) #6
  %314 = icmp ne i32 %313, 0
  br i1 %314, label %316, label %315

; <label>:315                                     ; preds = %308
  store i32 0, i32* %16, align 4
  br label %mz_zip_array_resize.exit.i8

; <label>:316                                     ; preds = %308
  br label %317

; <label>:317                                     ; preds = %316, %288
  %318 = load i64, i64* %19, align 8
  %319 = load %struct.mz_zip_array*, %struct.mz_zip_array** %18, align 8
  %320 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %319, i32 0, i32 1
  store i64 %318, i64* %320, align 8
  store i32 1, i32* %16, align 4
  br label %mz_zip_array_resize.exit.i8

mz_zip_array_resize.exit.i8:                      ; preds = %317, %315
  %321 = load i32, i32* %16, align 4
  %322 = icmp ne i32 %321, 0
  br i1 %322, label %324, label %323

; <label>:323                                     ; preds = %mz_zip_array_resize.exit.i8
  store i32 0, i32* %21, align 4
  br label %mz_zip_array_push_back.exit9

; <label>:324                                     ; preds = %mz_zip_array_resize.exit.i8
  %325 = load %struct.mz_zip_array*, %struct.mz_zip_array** %23, align 8
  %326 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %325, i32 0, i32 0
  %327 = load i8*, i8** %326, align 8
  %328 = load i64, i64* %orig_size.i7, align 8
  %329 = load %struct.mz_zip_array*, %struct.mz_zip_array** %23, align 8
  %330 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %329, i32 0, i32 3
  %331 = load i32, i32* %330, align 8
  %332 = zext i32 %331 to i64
  %333 = mul i64 %328, %332
  %334 = getelementptr inbounds i8, i8* %327, i64 %333
  %335 = load i8*, i8** %24, align 8
  %336 = load i64, i64* %25, align 8
  %337 = load %struct.mz_zip_array*, %struct.mz_zip_array** %23, align 8
  %338 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %337, i32 0, i32 3
  %339 = load i32, i32* %338, align 8
  %340 = zext i32 %339 to i64
  %341 = mul i64 %336, %340
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %334, i8* %335, i64 %341, i32 1, i1 false) #6
  store i32 1, i32* %21, align 4
  br label %mz_zip_array_push_back.exit9

mz_zip_array_push_back.exit9:                     ; preds = %323, %324
  %342 = load i32, i32* %21, align 4
  %343 = icmp ne i32 %342, 0
  br i1 %343, label %344, label %398

; <label>:344                                     ; preds = %mz_zip_array_push_back.exit9
  %345 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %57, align 8
  %346 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %347 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %346, i32 0, i32 1
  %348 = bitcast i32* %central_dir_ofs to i8*
  store %struct.mz_zip_archive_tag* %345, %struct.mz_zip_archive_tag** %12, align 8
  store %struct.mz_zip_array* %347, %struct.mz_zip_array** %13, align 8
  store i8* %348, i8** %14, align 8
  store i64 1, i64* %15, align 8
  %349 = load %struct.mz_zip_array*, %struct.mz_zip_array** %13, align 8
  %350 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %349, i32 0, i32 1
  %351 = load i64, i64* %350, align 8
  store i64 %351, i64* %orig_size.i10, align 8
  %352 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %12, align 8
  %353 = load %struct.mz_zip_array*, %struct.mz_zip_array** %13, align 8
  %354 = load i64, i64* %orig_size.i10, align 8
  %355 = load i64, i64* %15, align 8
  %356 = add i64 %354, %355
  store %struct.mz_zip_archive_tag* %352, %struct.mz_zip_archive_tag** %7, align 8
  store %struct.mz_zip_array* %353, %struct.mz_zip_array** %8, align 8
  store i64 %356, i64* %9, align 8
  store i32 1, i32* %10, align 4
  %357 = load i64, i64* %9, align 8
  %358 = load %struct.mz_zip_array*, %struct.mz_zip_array** %8, align 8
  %359 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %358, i32 0, i32 2
  %360 = load i64, i64* %359, align 8
  %361 = icmp ugt i64 %357, %360
  br i1 %361, label %362, label %371

; <label>:362                                     ; preds = %344
  %363 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %7, align 8
  %364 = load %struct.mz_zip_array*, %struct.mz_zip_array** %8, align 8
  %365 = load i64, i64* %9, align 8
  %366 = load i32, i32* %10, align 4
  %367 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive_tag* %363, %struct.mz_zip_array* %364, i64 %365, i32 %366) #6
  %368 = icmp ne i32 %367, 0
  br i1 %368, label %370, label %369

; <label>:369                                     ; preds = %362
  store i32 0, i32* %6, align 4
  br label %mz_zip_array_resize.exit.i11

; <label>:370                                     ; preds = %362
  br label %371

; <label>:371                                     ; preds = %370, %344
  %372 = load i64, i64* %9, align 8
  %373 = load %struct.mz_zip_array*, %struct.mz_zip_array** %8, align 8
  %374 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %373, i32 0, i32 1
  store i64 %372, i64* %374, align 8
  store i32 1, i32* %6, align 4
  br label %mz_zip_array_resize.exit.i11

mz_zip_array_resize.exit.i11:                     ; preds = %371, %369
  %375 = load i32, i32* %6, align 4
  %376 = icmp ne i32 %375, 0
  br i1 %376, label %378, label %377

; <label>:377                                     ; preds = %mz_zip_array_resize.exit.i11
  store i32 0, i32* %11, align 4
  br label %mz_zip_array_push_back.exit12

; <label>:378                                     ; preds = %mz_zip_array_resize.exit.i11
  %379 = load %struct.mz_zip_array*, %struct.mz_zip_array** %13, align 8
  %380 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %379, i32 0, i32 0
  %381 = load i8*, i8** %380, align 8
  %382 = load i64, i64* %orig_size.i10, align 8
  %383 = load %struct.mz_zip_array*, %struct.mz_zip_array** %13, align 8
  %384 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %383, i32 0, i32 3
  %385 = load i32, i32* %384, align 8
  %386 = zext i32 %385 to i64
  %387 = mul i64 %382, %386
  %388 = getelementptr inbounds i8, i8* %381, i64 %387
  %389 = load i8*, i8** %14, align 8
  %390 = load i64, i64* %15, align 8
  %391 = load %struct.mz_zip_array*, %struct.mz_zip_array** %13, align 8
  %392 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %391, i32 0, i32 3
  %393 = load i32, i32* %392, align 8
  %394 = zext i32 %393 to i64
  %395 = mul i64 %390, %394
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %388, i8* %389, i64 %395, i32 1, i1 false) #6
  store i32 1, i32* %11, align 4
  br label %mz_zip_array_push_back.exit12

mz_zip_array_push_back.exit12:                    ; preds = %377, %378
  %396 = load i32, i32* %11, align 4
  %397 = icmp ne i32 %396, 0
  br i1 %397, label %422, label %398

; <label>:398                                     ; preds = %mz_zip_array_push_back.exit12, %mz_zip_array_push_back.exit9, %mz_zip_array_push_back.exit6, %mz_zip_array_push_back.exit3, %mz_zip_array_push_back.exit
  %399 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %57, align 8
  %400 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %401 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %400, i32 0, i32 0
  %402 = load i64, i64* %orig_central_dir_size, align 8
  store %struct.mz_zip_archive_tag* %399, %struct.mz_zip_archive_tag** %2, align 8
  store %struct.mz_zip_array* %401, %struct.mz_zip_array** %3, align 8
  store i64 %402, i64* %4, align 8
  store i32 0, i32* %5, align 4
  %403 = load i64, i64* %4, align 8
  %404 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %405 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %404, i32 0, i32 2
  %406 = load i64, i64* %405, align 8
  %407 = icmp ugt i64 %403, %406
  br i1 %407, label %408, label %417

; <label>:408                                     ; preds = %398
  %409 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %410 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %411 = load i64, i64* %4, align 8
  %412 = load i32, i32* %5, align 4
  %413 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive_tag* %409, %struct.mz_zip_array* %410, i64 %411, i32 %412) #6
  %414 = icmp ne i32 %413, 0
  br i1 %414, label %416, label %415

; <label>:415                                     ; preds = %408
  store i32 0, i32* %1, align 4
  br label %mz_zip_array_resize.exit

; <label>:416                                     ; preds = %408
  br label %417

; <label>:417                                     ; preds = %416, %398
  %418 = load i64, i64* %4, align 8
  %419 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %420 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %419, i32 0, i32 1
  store i64 %418, i64* %420, align 8
  store i32 1, i32* %1, align 4
  br label %mz_zip_array_resize.exit

mz_zip_array_resize.exit:                         ; preds = %415, %417
  %421 = load i32, i32* %1, align 4
  store i32 0, i32* %56, align 4
  br label %423

; <label>:422                                     ; preds = %mz_zip_array_push_back.exit12
  store i32 1, i32* %56, align 4
  br label %423

; <label>:423                                     ; preds = %422, %mz_zip_array_resize.exit, %121, %103
  %424 = load i32, i32* %56, align 4
  ret i32 %424
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_writer_add_file(%struct.mz_zip_archive_tag* %pZip, i8* %pArchive_name, i8* %pSrc_filename, i8* %pComment, i16 zeroext %comment_size, i32 %level_and_flags) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16, align 2
  %7 = alloca i32, align 4
  %uncomp_crc32 = alloca i32, align 4
  %level = alloca i32, align 4
  %num_alignment_padding_bytes = alloca i32, align 4
  %method = alloca i16, align 2
  %dos_time = alloca i16, align 2
  %dos_date = alloca i16, align 2
  %ext_attributes = alloca i16, align 2
  %local_dir_header_ofs = alloca i64, align 8
  %cur_archive_file_ofs = alloca i64, align 8
  %uncomp_size = alloca i64, align 8
  %comp_size = alloca i64, align 8
  %archive_name_size = alloca i64, align 8
  %local_dir_header = alloca [30 x i8], align 16
  %pSrc_file = alloca %struct._IO_FILE*, align 8
  %uncomp_remaining = alloca i64, align 8
  %pRead_buf = alloca i8*, align 8
  %n = alloca i32, align 4
  %result = alloca i32, align 4
  %state = alloca %struct.mz_zip_writer_add_state, align 8
  %pComp = alloca %struct.tdefl_compressor*, align 8
  %in_buf_size = alloca i64, align 8
  %status = alloca i32, align 4
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  store i8* %pArchive_name, i8** %3, align 8
  store i8* %pSrc_filename, i8** %4, align 8
  store i8* %pComment, i8** %5, align 8
  store i16 %comment_size, i16* %6, align 2
  store i32 %level_and_flags, i32* %7, align 4
  store i32 0, i32* %uncomp_crc32, align 4
  store i16 0, i16* %method, align 2
  store i16 0, i16* %dos_time, align 2
  store i16 0, i16* %dos_date, align 2
  store i16 0, i16* %ext_attributes, align 2
  %8 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %9 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %8, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %local_dir_header_ofs, align 8
  %11 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %12 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %11, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %cur_archive_file_ofs, align 8
  store i64 0, i64* %uncomp_size, align 8
  store i64 0, i64* %comp_size, align 8
  store %struct._IO_FILE* null, %struct._IO_FILE** %pSrc_file, align 8
  %14 = load i32, i32* %7, align 4
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %16, label %17

; <label>:16                                      ; preds = %0
  store i32 6, i32* %7, align 4
  br label %17

; <label>:17                                      ; preds = %16, %0
  %18 = load i32, i32* %7, align 4
  %19 = and i32 %18, 15
  store i32 %19, i32* %level, align 4
  %20 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %21 = icmp ne %struct.mz_zip_archive_tag* %20, null
  br i1 %21, label %22, label %45

; <label>:22                                      ; preds = %17
  %23 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %24 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %23, i32 0, i32 12
  %25 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %24, align 8
  %26 = icmp ne %struct.mz_zip_internal_state_tag* %25, null
  br i1 %26, label %27, label %45

; <label>:27                                      ; preds = %22
  %28 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %29 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %28, i32 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = icmp ne i32 %30, 2
  br i1 %31, label %45, label %32

; <label>:32                                      ; preds = %27
  %33 = load i8*, i8** %3, align 8
  %34 = icmp ne i8* %33, null
  br i1 %34, label %35, label %45

; <label>:35                                      ; preds = %32
  %36 = load i16, i16* %6, align 2
  %37 = zext i16 %36 to i32
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %42

; <label>:39                                      ; preds = %35
  %40 = load i8*, i8** %5, align 8
  %41 = icmp ne i8* %40, null
  br i1 %41, label %42, label %45

; <label>:42                                      ; preds = %39, %35
  %43 = load i32, i32* %level, align 4
  %44 = icmp ugt i32 %43, 10
  br i1 %44, label %45, label %46

; <label>:45                                      ; preds = %42, %39, %32, %27, %22, %17
  store i32 0, i32* %1, align 4
  br label %446

; <label>:46                                      ; preds = %42
  %47 = load i32, i32* %7, align 4
  %48 = and i32 %47, 1024
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %51

; <label>:50                                      ; preds = %46
  store i32 0, i32* %1, align 4
  br label %446

; <label>:51                                      ; preds = %46
  %52 = load i8*, i8** %3, align 8
  %53 = call i32 @mz_zip_writer_validate_archive_name(i8* %52)
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %56, label %55

; <label>:55                                      ; preds = %51
  store i32 0, i32* %1, align 4
  br label %446

; <label>:56                                      ; preds = %51
  %57 = load i8*, i8** %3, align 8
  %58 = call i64 @strlen(i8* %57) #8
  store i64 %58, i64* %archive_name_size, align 8
  %59 = load i64, i64* %archive_name_size, align 8
  %60 = icmp ugt i64 %59, 65535
  br i1 %60, label %61, label %62

; <label>:61                                      ; preds = %56
  store i32 0, i32* %1, align 4
  br label %446

; <label>:62                                      ; preds = %56
  %63 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %64 = call i32 @mz_zip_writer_compute_padding_needed_for_file_alignment(%struct.mz_zip_archive_tag* %63)
  store i32 %64, i32* %num_alignment_padding_bytes, align 4
  %65 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %66 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %65, i32 0, i32 2
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 65535
  br i1 %68, label %84, label %69

; <label>:69                                      ; preds = %62
  %70 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %71 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %70, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = load i32, i32* %num_alignment_padding_bytes, align 4
  %74 = zext i32 %73 to i64
  %75 = add i64 %72, %74
  %76 = add i64 %75, 30
  %77 = add i64 %76, 46
  %78 = load i16, i16* %6, align 2
  %79 = zext i16 %78 to i64
  %80 = add i64 %77, %79
  %81 = load i64, i64* %archive_name_size, align 8
  %82 = add i64 %80, %81
  %83 = icmp ugt i64 %82, 4294967295
  br i1 %83, label %84, label %85

; <label>:84                                      ; preds = %69, %62
  store i32 0, i32* %1, align 4
  br label %446

; <label>:85                                      ; preds = %69
  %86 = load i8*, i8** %4, align 8
  %87 = call i32 @mz_zip_get_file_modified_time(i8* %86, i16* %dos_time, i16* %dos_date)
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %90, label %89

; <label>:89                                      ; preds = %85
  store i32 0, i32* %1, align 4
  br label %446

; <label>:90                                      ; preds = %85
  %91 = load i8*, i8** %4, align 8
  %92 = call %struct._IO_FILE* @fopen(i8* %91, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i32 0, i32 0))
  store %struct._IO_FILE* %92, %struct._IO_FILE** %pSrc_file, align 8
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %pSrc_file, align 8
  %94 = icmp ne %struct._IO_FILE* %93, null
  br i1 %94, label %96, label %95

; <label>:95                                      ; preds = %90
  store i32 0, i32* %1, align 4
  br label %446

; <label>:96                                      ; preds = %90
  %97 = load %struct._IO_FILE*, %struct._IO_FILE** %pSrc_file, align 8
  %98 = call i32 @fseeko(%struct._IO_FILE* %97, i64 0, i32 2)
  %99 = load %struct._IO_FILE*, %struct._IO_FILE** %pSrc_file, align 8
  %100 = call i64 @ftello(%struct._IO_FILE* %99)
  store i64 %100, i64* %uncomp_size, align 8
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** %pSrc_file, align 8
  %102 = call i32 @fseeko(%struct._IO_FILE* %101, i64 0, i32 0)
  %103 = load i64, i64* %uncomp_size, align 8
  %104 = icmp ugt i64 %103, 4294967295
  br i1 %104, label %105, label %108

; <label>:105                                     ; preds = %96
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** %pSrc_file, align 8
  %107 = call i32 @fclose(%struct._IO_FILE* %106)
  store i32 0, i32* %1, align 4
  br label %446

; <label>:108                                     ; preds = %96
  %109 = load i64, i64* %uncomp_size, align 8
  %110 = icmp ule i64 %109, 3
  br i1 %110, label %111, label %112

; <label>:111                                     ; preds = %108
  store i32 0, i32* %level, align 4
  br label %112

; <label>:112                                     ; preds = %111, %108
  %113 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %114 = load i64, i64* %cur_archive_file_ofs, align 8
  %115 = load i32, i32* %num_alignment_padding_bytes, align 4
  %116 = zext i32 %115 to i64
  %117 = add i64 %116, 30
  %118 = trunc i64 %117 to i32
  %119 = call i32 @mz_zip_writer_write_zeros(%struct.mz_zip_archive_tag* %113, i64 %114, i32 %118)
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %124, label %121

; <label>:121                                     ; preds = %112
  %122 = load %struct._IO_FILE*, %struct._IO_FILE** %pSrc_file, align 8
  %123 = call i32 @fclose(%struct._IO_FILE* %122)
  store i32 0, i32* %1, align 4
  br label %446

; <label>:124                                     ; preds = %112
  %125 = load i32, i32* %num_alignment_padding_bytes, align 4
  %126 = zext i32 %125 to i64
  %127 = load i64, i64* %local_dir_header_ofs, align 8
  %128 = add i64 %127, %126
  store i64 %128, i64* %local_dir_header_ofs, align 8
  %129 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %130 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %129, i32 0, i32 4
  %131 = load i32, i32* %130, align 8
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %133, label %146

; <label>:133                                     ; preds = %124
  %134 = load i64, i64* %local_dir_header_ofs, align 8
  %135 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %136 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %135, i32 0, i32 4
  %137 = load i32, i32* %136, align 8
  %138 = sub i32 %137, 1
  %139 = zext i32 %138 to i64
  %140 = and i64 %134, %139
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %143

; <label>:142                                     ; preds = %133
  br label %145

; <label>:143                                     ; preds = %133
  call void @__assert_fail(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 4467, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @__PRETTY_FUNCTION__.mz_zip_writer_add_file, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %145

; <label>:145                                     ; preds = %144, %142
  br label %146

; <label>:146                                     ; preds = %145, %124
  %147 = load i32, i32* %num_alignment_padding_bytes, align 4
  %148 = zext i32 %147 to i64
  %149 = add i64 %148, 30
  %150 = load i64, i64* %cur_archive_file_ofs, align 8
  %151 = add i64 %150, %149
  store i64 %151, i64* %cur_archive_file_ofs, align 8
  %152 = bitcast [30 x i8]* %local_dir_header to i8*
  call void @llvm.memset.p0i8.i64(i8* %152, i8 0, i64 30, i32 16, i1 false)
  %153 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %154 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %153, i32 0, i32 10
  %155 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %154, align 8
  %156 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %157 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %156, i32 0, i32 11
  %158 = load i8*, i8** %157, align 8
  %159 = load i64, i64* %cur_archive_file_ofs, align 8
  %160 = load i8*, i8** %3, align 8
  %161 = load i64, i64* %archive_name_size, align 8
  %162 = call i64 %155(i8* %158, i64 %159, i8* %160, i64 %161)
  %163 = load i64, i64* %archive_name_size, align 8
  %164 = icmp ne i64 %162, %163
  br i1 %164, label %165, label %168

; <label>:165                                     ; preds = %146
  %166 = load %struct._IO_FILE*, %struct._IO_FILE** %pSrc_file, align 8
  %167 = call i32 @fclose(%struct._IO_FILE* %166)
  store i32 0, i32* %1, align 4
  br label %446

; <label>:168                                     ; preds = %146
  %169 = load i64, i64* %archive_name_size, align 8
  %170 = load i64, i64* %cur_archive_file_ofs, align 8
  %171 = add i64 %170, %169
  store i64 %171, i64* %cur_archive_file_ofs, align 8
  %172 = load i64, i64* %uncomp_size, align 8
  %173 = icmp ne i64 %172, 0
  br i1 %173, label %174, label %384

; <label>:174                                     ; preds = %168
  %175 = load i64, i64* %uncomp_size, align 8
  store i64 %175, i64* %uncomp_remaining, align 8
  %176 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %177 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %176, i32 0, i32 5
  %178 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %177, align 8
  %179 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %180 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %179, i32 0, i32 8
  %181 = load i8*, i8** %180, align 8
  %182 = call i8* %178(i8* %181, i64 1, i64 65536)
  store i8* %182, i8** %pRead_buf, align 8
  %183 = load i8*, i8** %pRead_buf, align 8
  %184 = icmp ne i8* %183, null
  br i1 %184, label %188, label %185

; <label>:185                                     ; preds = %174
  %186 = load %struct._IO_FILE*, %struct._IO_FILE** %pSrc_file, align 8
  %187 = call i32 @fclose(%struct._IO_FILE* %186)
  store i32 0, i32* %1, align 4
  br label %446

; <label>:188                                     ; preds = %174
  %189 = load i32, i32* %level, align 4
  %190 = icmp ne i32 %189, 0
  br i1 %190, label %255, label %191

; <label>:191                                     ; preds = %188
  br label %192

; <label>:192                                     ; preds = %237, %191
  %193 = load i64, i64* %uncomp_remaining, align 8
  %194 = icmp ne i64 %193, 0
  br i1 %194, label %195, label %253

; <label>:195                                     ; preds = %192
  %196 = load i64, i64* %uncomp_remaining, align 8
  %197 = icmp ult i64 65536, %196
  br i1 %197, label %198, label %199

; <label>:198                                     ; preds = %195
  br label %201

; <label>:199                                     ; preds = %195
  %200 = load i64, i64* %uncomp_remaining, align 8
  br label %201

; <label>:201                                     ; preds = %199, %198
  %202 = phi i64 [ 65536, %198 ], [ %200, %199 ]
  %203 = trunc i64 %202 to i32
  store i32 %203, i32* %n, align 4
  %204 = load i8*, i8** %pRead_buf, align 8
  %205 = load i32, i32* %n, align 4
  %206 = zext i32 %205 to i64
  %207 = load %struct._IO_FILE*, %struct._IO_FILE** %pSrc_file, align 8
  %208 = call i64 @fread(i8* %204, i64 1, i64 %206, %struct._IO_FILE* %207)
  %209 = load i32, i32* %n, align 4
  %210 = zext i32 %209 to i64
  %211 = icmp ne i64 %208, %210
  br i1 %211, label %227, label %212

; <label>:212                                     ; preds = %201
  %213 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %214 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %213, i32 0, i32 10
  %215 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %214, align 8
  %216 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %217 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %216, i32 0, i32 11
  %218 = load i8*, i8** %217, align 8
  %219 = load i64, i64* %cur_archive_file_ofs, align 8
  %220 = load i8*, i8** %pRead_buf, align 8
  %221 = load i32, i32* %n, align 4
  %222 = zext i32 %221 to i64
  %223 = call i64 %215(i8* %218, i64 %219, i8* %220, i64 %222)
  %224 = load i32, i32* %n, align 4
  %225 = zext i32 %224 to i64
  %226 = icmp ne i64 %223, %225
  br i1 %226, label %227, label %237

; <label>:227                                     ; preds = %212, %201
  %228 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %229 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %228, i32 0, i32 6
  %230 = load void (i8*, i8*)*, void (i8*, i8*)** %229, align 8
  %231 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %232 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %231, i32 0, i32 8
  %233 = load i8*, i8** %232, align 8
  %234 = load i8*, i8** %pRead_buf, align 8
  call void %230(i8* %233, i8* %234)
  %235 = load %struct._IO_FILE*, %struct._IO_FILE** %pSrc_file, align 8
  %236 = call i32 @fclose(%struct._IO_FILE* %235)
  store i32 0, i32* %1, align 4
  br label %446

; <label>:237                                     ; preds = %212
  %238 = load i32, i32* %uncomp_crc32, align 4
  %239 = zext i32 %238 to i64
  %240 = load i8*, i8** %pRead_buf, align 8
  %241 = load i32, i32* %n, align 4
  %242 = zext i32 %241 to i64
  %243 = call i64 @mz_crc32(i64 %239, i8* %240, i64 %242)
  %244 = trunc i64 %243 to i32
  store i32 %244, i32* %uncomp_crc32, align 4
  %245 = load i32, i32* %n, align 4
  %246 = zext i32 %245 to i64
  %247 = load i64, i64* %uncomp_remaining, align 8
  %248 = sub i64 %247, %246
  store i64 %248, i64* %uncomp_remaining, align 8
  %249 = load i32, i32* %n, align 4
  %250 = zext i32 %249 to i64
  %251 = load i64, i64* %cur_archive_file_ofs, align 8
  %252 = add i64 %251, %250
  store i64 %252, i64* %cur_archive_file_ofs, align 8
  br label %192

; <label>:253                                     ; preds = %192
  %254 = load i64, i64* %uncomp_size, align 8
  store i64 %254, i64* %comp_size, align 8
  br label %376

; <label>:255                                     ; preds = %188
  store i32 0, i32* %result, align 4
  %256 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %257 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %256, i32 0, i32 5
  %258 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %257, align 8
  %259 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %260 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %259, i32 0, i32 8
  %261 = load i8*, i8** %260, align 8
  %262 = call i8* %258(i8* %261, i64 1, i64 319352)
  %263 = bitcast i8* %262 to %struct.tdefl_compressor*
  store %struct.tdefl_compressor* %263, %struct.tdefl_compressor** %pComp, align 8
  %264 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %265 = icmp ne %struct.tdefl_compressor* %264, null
  br i1 %265, label %276, label %266

; <label>:266                                     ; preds = %255
  %267 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %268 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %267, i32 0, i32 6
  %269 = load void (i8*, i8*)*, void (i8*, i8*)** %268, align 8
  %270 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %271 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %270, i32 0, i32 8
  %272 = load i8*, i8** %271, align 8
  %273 = load i8*, i8** %pRead_buf, align 8
  call void %269(i8* %272, i8* %273)
  %274 = load %struct._IO_FILE*, %struct._IO_FILE** %pSrc_file, align 8
  %275 = call i32 @fclose(%struct._IO_FILE* %274)
  store i32 0, i32* %1, align 4
  br label %446

; <label>:276                                     ; preds = %255
  %277 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %278 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %state, i32 0, i32 0
  store %struct.mz_zip_archive_tag* %277, %struct.mz_zip_archive_tag** %278, align 8
  %279 = load i64, i64* %cur_archive_file_ofs, align 8
  %280 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %state, i32 0, i32 1
  store i64 %279, i64* %280, align 8
  %281 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %state, i32 0, i32 2
  store i64 0, i64* %281, align 8
  %282 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %283 = bitcast %struct.mz_zip_writer_add_state* %state to i8*
  %284 = load i32, i32* %level, align 4
  %285 = call i32 @tdefl_create_comp_flags_from_zip_params(i32 %284, i32 -15, i32 0)
  %286 = call i32 @tdefl_init(%struct.tdefl_compressor* %282, i32 (i8*, i32, i8*)* @mz_zip_writer_add_put_buf_callback, i8* %283, i32 %285)
  %287 = icmp ne i32 %286, 0
  br i1 %287, label %288, label %306

; <label>:288                                     ; preds = %276
  %289 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %290 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %289, i32 0, i32 6
  %291 = load void (i8*, i8*)*, void (i8*, i8*)** %290, align 8
  %292 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %293 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %292, i32 0, i32 8
  %294 = load i8*, i8** %293, align 8
  %295 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %296 = bitcast %struct.tdefl_compressor* %295 to i8*
  call void %291(i8* %294, i8* %296)
  %297 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %298 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %297, i32 0, i32 6
  %299 = load void (i8*, i8*)*, void (i8*, i8*)** %298, align 8
  %300 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %301 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %300, i32 0, i32 8
  %302 = load i8*, i8** %301, align 8
  %303 = load i8*, i8** %pRead_buf, align 8
  call void %299(i8* %302, i8* %303)
  %304 = load %struct._IO_FILE*, %struct._IO_FILE** %pSrc_file, align 8
  %305 = call i32 @fclose(%struct._IO_FILE* %304)
  store i32 0, i32* %1, align 4
  br label %446

; <label>:306                                     ; preds = %276
  br label %307

; <label>:307                                     ; preds = %349, %306
  %308 = load i64, i64* %uncomp_remaining, align 8
  %309 = icmp ult i64 %308, 65536
  br i1 %309, label %310, label %312

; <label>:310                                     ; preds = %307
  %311 = load i64, i64* %uncomp_remaining, align 8
  br label %313

; <label>:312                                     ; preds = %307
  br label %313

; <label>:313                                     ; preds = %312, %310
  %314 = phi i64 [ %311, %310 ], [ 65536, %312 ]
  %315 = trunc i64 %314 to i32
  %316 = zext i32 %315 to i64
  store i64 %316, i64* %in_buf_size, align 8
  %317 = load i8*, i8** %pRead_buf, align 8
  %318 = load i64, i64* %in_buf_size, align 8
  %319 = load %struct._IO_FILE*, %struct._IO_FILE** %pSrc_file, align 8
  %320 = call i64 @fread(i8* %317, i64 1, i64 %318, %struct._IO_FILE* %319)
  %321 = load i64, i64* %in_buf_size, align 8
  %322 = icmp ne i64 %320, %321
  br i1 %322, label %323, label %324

; <label>:323                                     ; preds = %313
  br label %350

; <label>:324                                     ; preds = %313
  %325 = load i32, i32* %uncomp_crc32, align 4
  %326 = zext i32 %325 to i64
  %327 = load i8*, i8** %pRead_buf, align 8
  %328 = load i64, i64* %in_buf_size, align 8
  %329 = call i64 @mz_crc32(i64 %326, i8* %327, i64 %328)
  %330 = trunc i64 %329 to i32
  store i32 %330, i32* %uncomp_crc32, align 4
  %331 = load i64, i64* %in_buf_size, align 8
  %332 = load i64, i64* %uncomp_remaining, align 8
  %333 = sub i64 %332, %331
  store i64 %333, i64* %uncomp_remaining, align 8
  %334 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %335 = load i8*, i8** %pRead_buf, align 8
  %336 = load i64, i64* %in_buf_size, align 8
  %337 = load i64, i64* %uncomp_remaining, align 8
  %338 = icmp ne i64 %337, 0
  %339 = select i1 %338, i32 0, i32 4
  %340 = call i32 @tdefl_compress_buffer(%struct.tdefl_compressor* %334, i8* %335, i64 %336, i32 %339)
  store i32 %340, i32* %status, align 4
  %341 = load i32, i32* %status, align 4
  %342 = icmp eq i32 %341, 1
  br i1 %342, label %343, label %344

; <label>:343                                     ; preds = %324
  store i32 1, i32* %result, align 4
  br label %350

; <label>:344                                     ; preds = %324
  %345 = load i32, i32* %status, align 4
  %346 = icmp ne i32 %345, 0
  br i1 %346, label %347, label %348

; <label>:347                                     ; preds = %344
  br label %350

; <label>:348                                     ; preds = %344
  br label %349

; <label>:349                                     ; preds = %348
  br label %307

; <label>:350                                     ; preds = %347, %343, %323
  %351 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %352 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %351, i32 0, i32 6
  %353 = load void (i8*, i8*)*, void (i8*, i8*)** %352, align 8
  %354 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %355 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %354, i32 0, i32 8
  %356 = load i8*, i8** %355, align 8
  %357 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %pComp, align 8
  %358 = bitcast %struct.tdefl_compressor* %357 to i8*
  call void %353(i8* %356, i8* %358)
  %359 = load i32, i32* %result, align 4
  %360 = icmp ne i32 %359, 0
  br i1 %360, label %371, label %361

; <label>:361                                     ; preds = %350
  %362 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %363 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %362, i32 0, i32 6
  %364 = load void (i8*, i8*)*, void (i8*, i8*)** %363, align 8
  %365 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %366 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %365, i32 0, i32 8
  %367 = load i8*, i8** %366, align 8
  %368 = load i8*, i8** %pRead_buf, align 8
  call void %364(i8* %367, i8* %368)
  %369 = load %struct._IO_FILE*, %struct._IO_FILE** %pSrc_file, align 8
  %370 = call i32 @fclose(%struct._IO_FILE* %369)
  store i32 0, i32* %1, align 4
  br label %446

; <label>:371                                     ; preds = %350
  %372 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %state, i32 0, i32 2
  %373 = load i64, i64* %372, align 8
  store i64 %373, i64* %comp_size, align 8
  %374 = getelementptr inbounds %struct.mz_zip_writer_add_state, %struct.mz_zip_writer_add_state* %state, i32 0, i32 1
  %375 = load i64, i64* %374, align 8
  store i64 %375, i64* %cur_archive_file_ofs, align 8
  store i16 8, i16* %method, align 2
  br label %376

; <label>:376                                     ; preds = %371, %253
  %377 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %378 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %377, i32 0, i32 6
  %379 = load void (i8*, i8*)*, void (i8*, i8*)** %378, align 8
  %380 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %381 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %380, i32 0, i32 8
  %382 = load i8*, i8** %381, align 8
  %383 = load i8*, i8** %pRead_buf, align 8
  call void %379(i8* %382, i8* %383)
  br label %384

; <label>:384                                     ; preds = %376, %168
  %385 = load %struct._IO_FILE*, %struct._IO_FILE** %pSrc_file, align 8
  %386 = call i32 @fclose(%struct._IO_FILE* %385)
  store %struct._IO_FILE* null, %struct._IO_FILE** %pSrc_file, align 8
  %387 = load i64, i64* %comp_size, align 8
  %388 = icmp ugt i64 %387, 4294967295
  br i1 %388, label %392, label %389

; <label>:389                                     ; preds = %384
  %390 = load i64, i64* %cur_archive_file_ofs, align 8
  %391 = icmp ugt i64 %390, 4294967295
  br i1 %391, label %392, label %393

; <label>:392                                     ; preds = %389, %384
  store i32 0, i32* %1, align 4
  br label %446

; <label>:393                                     ; preds = %389
  %394 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %395 = getelementptr inbounds [30 x i8], [30 x i8]* %local_dir_header, i32 0, i32 0
  %396 = load i64, i64* %archive_name_size, align 8
  %397 = trunc i64 %396 to i16
  %398 = load i64, i64* %uncomp_size, align 8
  %399 = load i64, i64* %comp_size, align 8
  %400 = load i32, i32* %uncomp_crc32, align 4
  %401 = load i16, i16* %method, align 2
  %402 = load i16, i16* %dos_time, align 2
  %403 = load i16, i16* %dos_date, align 2
  %404 = call i32 @mz_zip_writer_create_local_dir_header(%struct.mz_zip_archive_tag* %394, i8* %395, i16 zeroext %397, i16 zeroext 0, i64 %398, i64 %399, i32 %400, i16 zeroext %401, i16 zeroext 0, i16 zeroext %402, i16 zeroext %403)
  %405 = icmp ne i32 %404, 0
  br i1 %405, label %407, label %406

; <label>:406                                     ; preds = %393
  store i32 0, i32* %1, align 4
  br label %446

; <label>:407                                     ; preds = %393
  %408 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %409 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %408, i32 0, i32 10
  %410 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %409, align 8
  %411 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %412 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %411, i32 0, i32 11
  %413 = load i8*, i8** %412, align 8
  %414 = load i64, i64* %local_dir_header_ofs, align 8
  %415 = getelementptr inbounds [30 x i8], [30 x i8]* %local_dir_header, i32 0, i32 0
  %416 = call i64 %410(i8* %413, i64 %414, i8* %415, i64 30)
  %417 = icmp ne i64 %416, 30
  br i1 %417, label %418, label %419

; <label>:418                                     ; preds = %407
  store i32 0, i32* %1, align 4
  br label %446

; <label>:419                                     ; preds = %407
  %420 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %421 = load i8*, i8** %3, align 8
  %422 = load i64, i64* %archive_name_size, align 8
  %423 = trunc i64 %422 to i16
  %424 = load i8*, i8** %5, align 8
  %425 = load i16, i16* %6, align 2
  %426 = load i64, i64* %uncomp_size, align 8
  %427 = load i64, i64* %comp_size, align 8
  %428 = load i32, i32* %uncomp_crc32, align 4
  %429 = load i16, i16* %method, align 2
  %430 = load i16, i16* %dos_time, align 2
  %431 = load i16, i16* %dos_date, align 2
  %432 = load i64, i64* %local_dir_header_ofs, align 8
  %433 = load i16, i16* %ext_attributes, align 2
  %434 = zext i16 %433 to i32
  %435 = call i32 @mz_zip_writer_add_to_central_dir(%struct.mz_zip_archive_tag* %420, i8* %421, i16 zeroext %423, i8* null, i16 zeroext 0, i8* %424, i16 zeroext %425, i64 %426, i64 %427, i32 %428, i16 zeroext %429, i16 zeroext 0, i16 zeroext %430, i16 zeroext %431, i64 %432, i32 %434)
  %436 = icmp ne i32 %435, 0
  br i1 %436, label %438, label %437

; <label>:437                                     ; preds = %419
  store i32 0, i32* %1, align 4
  br label %446

; <label>:438                                     ; preds = %419
  %439 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %440 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %439, i32 0, i32 2
  %441 = load i32, i32* %440, align 8
  %442 = add i32 %441, 1
  store i32 %442, i32* %440, align 8
  %443 = load i64, i64* %cur_archive_file_ofs, align 8
  %444 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %445 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %444, i32 0, i32 0
  store i64 %443, i64* %445, align 8
  store i32 1, i32* %1, align 4
  br label %446

; <label>:446                                     ; preds = %438, %437, %418, %406, %392, %361, %288, %266, %227, %185, %165, %121, %105, %95, %89, %84, %61, %55, %50, %45
  %447 = load i32, i32* %1, align 4
  ret i32 %447
}

; Function Attrs: nounwind uwtable
define internal i32 @mz_zip_get_file_modified_time(i8* %pFilename, i16* %pDOS_time, i16* %pDOS_date) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i16*, align 8
  %4 = alloca i16*, align 8
  %file_stat = alloca %struct.stat, align 8
  store i8* %pFilename, i8** %2, align 8
  store i16* %pDOS_time, i16** %3, align 8
  store i16* %pDOS_date, i16** %4, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = call i32 @stat(i8* %5, %struct.stat* %file_stat) #6
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %0
  store i32 0, i32* %1, align 4
  br label %15

; <label>:9                                       ; preds = %0
  %10 = getelementptr inbounds %struct.stat, %struct.stat* %file_stat, i32 0, i32 12
  %11 = getelementptr inbounds %struct.timespec, %struct.timespec* %10, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = load i16*, i16** %3, align 8
  %14 = load i16*, i16** %4, align 8
  call void @mz_zip_time_to_dos_time(i64 %12, i16* %13, i16* %14)
  store i32 1, i32* %1, align 4
  br label %15

; <label>:15                                      ; preds = %9, %8
  %16 = load i32, i32* %1, align 4
  ret i32 %16
}

declare i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #4

; Function Attrs: nounwind uwtable
define i32 @mz_zip_writer_add_from_zip_reader(%struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag* %pSource_zip, i32 %file_index) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca %struct.mz_zip_array*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.mz_zip_archive_tag*, align 8
  %8 = alloca %struct.mz_zip_array*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %orig_size.i5 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.mz_zip_archive_tag*, align 8
  %13 = alloca %struct.mz_zip_array*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct.mz_zip_archive_tag*, align 8
  %18 = alloca %struct.mz_zip_array*, align 8
  %19 = alloca i64, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %struct.mz_zip_archive_tag*, align 8
  %23 = alloca %struct.mz_zip_array*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i64, align 8
  %orig_size.i1 = alloca i64, align 8
  %26 = alloca i32, align 4
  %27 = alloca %struct.mz_zip_archive_tag*, align 8
  %28 = alloca %struct.mz_zip_array*, align 8
  %29 = alloca i64, align 8
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca %struct.mz_zip_archive_tag*, align 8
  %33 = alloca %struct.mz_zip_array*, align 8
  %34 = alloca i8*, align 8
  %35 = alloca i64, align 8
  %orig_size.i = alloca i64, align 8
  %36 = alloca i32, align 4
  %37 = alloca %struct.mz_zip_archive_tag*, align 8
  %38 = alloca %struct.mz_zip_array*, align 8
  %39 = alloca i64, align 8
  %40 = alloca i32, align 4
  %41 = alloca i8*, align 8
  %42 = alloca %struct.mz_zip_archive_tag*, align 8
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca %struct.mz_zip_archive_tag*, align 8
  %46 = alloca %struct.mz_zip_archive_tag*, align 8
  %47 = alloca i32, align 4
  %n = alloca i32, align 4
  %bit_flags = alloca i32, align 4
  %num_alignment_padding_bytes = alloca i32, align 4
  %comp_bytes_remaining = alloca i64, align 8
  %local_dir_header_ofs = alloca i64, align 8
  %cur_src_file_ofs = alloca i64, align 8
  %cur_dst_file_ofs = alloca i64, align 8
  %local_header_u32 = alloca [8 x i32], align 16
  %pLocal_header = alloca i8*, align 8
  %central_header = alloca [46 x i8], align 16
  %orig_central_dir_size = alloca i64, align 8
  %pState = alloca %struct.mz_zip_internal_state_tag*, align 8
  %pBuf = alloca i8*, align 8
  %pSrc_central_header = alloca i8*, align 8
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %45, align 8
  store %struct.mz_zip_archive_tag* %pSource_zip, %struct.mz_zip_archive_tag** %46, align 8
  store i32 %file_index, i32* %47, align 4
  %48 = getelementptr inbounds [8 x i32], [8 x i32]* %local_header_u32, i32 0, i32 0
  %49 = bitcast i32* %48 to i8*
  store i8* %49, i8** %pLocal_header, align 8
  %50 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %51 = icmp ne %struct.mz_zip_archive_tag* %50, null
  br i1 %51, label %52, label %62

; <label>:52                                      ; preds = %0
  %53 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %54 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %53, i32 0, i32 12
  %55 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %54, align 8
  %56 = icmp ne %struct.mz_zip_internal_state_tag* %55, null
  br i1 %56, label %57, label %62

; <label>:57                                      ; preds = %52
  %58 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %59 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %58, i32 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = icmp ne i32 %60, 2
  br i1 %61, label %62, label %63

; <label>:62                                      ; preds = %57, %52, %0
  store i32 0, i32* %44, align 4
  br label %656

; <label>:63                                      ; preds = %57
  %64 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %46, align 8
  %65 = load i32, i32* %47, align 4
  store %struct.mz_zip_archive_tag* %64, %struct.mz_zip_archive_tag** %42, align 8
  store i32 %65, i32* %43, align 4
  %66 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %42, align 8
  %67 = icmp ne %struct.mz_zip_archive_tag* %66, null
  br i1 %67, label %68, label %84

; <label>:68                                      ; preds = %63
  %69 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %42, align 8
  %70 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %69, i32 0, i32 12
  %71 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %70, align 8
  %72 = icmp ne %struct.mz_zip_internal_state_tag* %71, null
  br i1 %72, label %73, label %84

; <label>:73                                      ; preds = %68
  %74 = load i32, i32* %43, align 4
  %75 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %42, align 8
  %76 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %75, i32 0, i32 2
  %77 = load i32, i32* %76, align 8
  %78 = icmp uge i32 %74, %77
  br i1 %78, label %84, label %79

; <label>:79                                      ; preds = %73
  %80 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %42, align 8
  %81 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %80, i32 0, i32 3
  %82 = load i32, i32* %81, align 4
  %83 = icmp ne i32 %82, 1
  br i1 %83, label %84, label %85

; <label>:84                                      ; preds = %79, %73, %68, %63
  store i8* null, i8** %41, align 8
  br label %mz_zip_reader_get_cdh.exit

; <label>:85                                      ; preds = %79
  %86 = load i32, i32* %43, align 4
  %87 = zext i32 %86 to i64
  %88 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %42, align 8
  %89 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %88, i32 0, i32 12
  %90 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %89, align 8
  %91 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %90, i32 0, i32 1
  %92 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %91, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = bitcast i8* %93 to i32*
  %95 = getelementptr inbounds i32, i32* %94, i64 %87
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i64
  %98 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %42, align 8
  %99 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %98, i32 0, i32 12
  %100 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %99, align 8
  %101 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %100, i32 0, i32 0
  %102 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %101, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 %97
  store i8* %104, i8** %41, align 8
  br label %mz_zip_reader_get_cdh.exit

mz_zip_reader_get_cdh.exit:                       ; preds = %84, %85
  %105 = load i8*, i8** %41, align 8
  store i8* %105, i8** %pSrc_central_header, align 8
  %106 = icmp eq i8* null, %105
  br i1 %106, label %107, label %108

; <label>:107                                     ; preds = %mz_zip_reader_get_cdh.exit
  store i32 0, i32* %44, align 4
  br label %656

; <label>:108                                     ; preds = %mz_zip_reader_get_cdh.exit
  %109 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %110 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %109, i32 0, i32 12
  %111 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %110, align 8
  store %struct.mz_zip_internal_state_tag* %111, %struct.mz_zip_internal_state_tag** %pState, align 8
  %112 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %113 = call i32 @mz_zip_writer_compute_padding_needed_for_file_alignment(%struct.mz_zip_archive_tag* %112)
  store i32 %113, i32* %num_alignment_padding_bytes, align 4
  %114 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %115 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %114, i32 0, i32 2
  %116 = load i32, i32* %115, align 8
  %117 = icmp eq i32 %116, 65535
  br i1 %117, label %128, label %118

; <label>:118                                     ; preds = %108
  %119 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %120 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %119, i32 0, i32 0
  %121 = load i64, i64* %120, align 8
  %122 = load i32, i32* %num_alignment_padding_bytes, align 4
  %123 = zext i32 %122 to i64
  %124 = add i64 %121, %123
  %125 = add i64 %124, 30
  %126 = add i64 %125, 46
  %127 = icmp ugt i64 %126, 4294967295
  br i1 %127, label %128, label %129

; <label>:128                                     ; preds = %118, %108
  store i32 0, i32* %44, align 4
  br label %656

; <label>:129                                     ; preds = %118
  %130 = load i8*, i8** %pSrc_central_header, align 8
  %131 = getelementptr inbounds i8, i8* %130, i64 42
  %132 = bitcast i8* %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i64
  store i64 %134, i64* %cur_src_file_ofs, align 8
  %135 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %136 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %135, i32 0, i32 0
  %137 = load i64, i64* %136, align 8
  store i64 %137, i64* %cur_dst_file_ofs, align 8
  %138 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %46, align 8
  %139 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %138, i32 0, i32 9
  %140 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %139, align 8
  %141 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %46, align 8
  %142 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %141, i32 0, i32 11
  %143 = load i8*, i8** %142, align 8
  %144 = load i64, i64* %cur_src_file_ofs, align 8
  %145 = load i8*, i8** %pLocal_header, align 8
  %146 = call i64 %140(i8* %143, i64 %144, i8* %145, i64 30)
  %147 = icmp ne i64 %146, 30
  br i1 %147, label %148, label %149

; <label>:148                                     ; preds = %129
  store i32 0, i32* %44, align 4
  br label %656

; <label>:149                                     ; preds = %129
  %150 = load i8*, i8** %pLocal_header, align 8
  %151 = bitcast i8* %150 to i32*
  %152 = load i32, i32* %151, align 4
  %153 = icmp ne i32 %152, 67324752
  br i1 %153, label %154, label %155

; <label>:154                                     ; preds = %149
  store i32 0, i32* %44, align 4
  br label %656

; <label>:155                                     ; preds = %149
  %156 = load i64, i64* %cur_src_file_ofs, align 8
  %157 = add i64 %156, 30
  store i64 %157, i64* %cur_src_file_ofs, align 8
  %158 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %159 = load i64, i64* %cur_dst_file_ofs, align 8
  %160 = load i32, i32* %num_alignment_padding_bytes, align 4
  %161 = call i32 @mz_zip_writer_write_zeros(%struct.mz_zip_archive_tag* %158, i64 %159, i32 %160)
  %162 = icmp ne i32 %161, 0
  br i1 %162, label %164, label %163

; <label>:163                                     ; preds = %155
  store i32 0, i32* %44, align 4
  br label %656

; <label>:164                                     ; preds = %155
  %165 = load i32, i32* %num_alignment_padding_bytes, align 4
  %166 = zext i32 %165 to i64
  %167 = load i64, i64* %cur_dst_file_ofs, align 8
  %168 = add i64 %167, %166
  store i64 %168, i64* %cur_dst_file_ofs, align 8
  %169 = load i64, i64* %cur_dst_file_ofs, align 8
  store i64 %169, i64* %local_dir_header_ofs, align 8
  %170 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %171 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %170, i32 0, i32 4
  %172 = load i32, i32* %171, align 8
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %174, label %187

; <label>:174                                     ; preds = %164
  %175 = load i64, i64* %local_dir_header_ofs, align 8
  %176 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %177 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %176, i32 0, i32 4
  %178 = load i32, i32* %177, align 8
  %179 = sub i32 %178, 1
  %180 = zext i32 %179 to i64
  %181 = and i64 %175, %180
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %184

; <label>:183                                     ; preds = %174
  br label %186

; <label>:184                                     ; preds = %174
  call void @__assert_fail(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 4626, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__.mz_zip_writer_add_from_zip_reader, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %186

; <label>:186                                     ; preds = %185, %183
  br label %187

; <label>:187                                     ; preds = %186, %164
  %188 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %189 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %188, i32 0, i32 10
  %190 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %189, align 8
  %191 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %192 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %191, i32 0, i32 11
  %193 = load i8*, i8** %192, align 8
  %194 = load i64, i64* %cur_dst_file_ofs, align 8
  %195 = load i8*, i8** %pLocal_header, align 8
  %196 = call i64 %190(i8* %193, i64 %194, i8* %195, i64 30)
  %197 = icmp ne i64 %196, 30
  br i1 %197, label %198, label %199

; <label>:198                                     ; preds = %187
  store i32 0, i32* %44, align 4
  br label %656

; <label>:199                                     ; preds = %187
  %200 = load i64, i64* %cur_dst_file_ofs, align 8
  %201 = add i64 %200, 30
  store i64 %201, i64* %cur_dst_file_ofs, align 8
  %202 = load i8*, i8** %pLocal_header, align 8
  %203 = getelementptr inbounds i8, i8* %202, i64 26
  %204 = bitcast i8* %203 to i16*
  %205 = load i16, i16* %204, align 2
  %206 = zext i16 %205 to i32
  %207 = load i8*, i8** %pLocal_header, align 8
  %208 = getelementptr inbounds i8, i8* %207, i64 28
  %209 = bitcast i8* %208 to i16*
  %210 = load i16, i16* %209, align 2
  %211 = zext i16 %210 to i32
  %212 = add nsw i32 %206, %211
  store i32 %212, i32* %n, align 4
  %213 = load i32, i32* %n, align 4
  %214 = load i8*, i8** %pSrc_central_header, align 8
  %215 = getelementptr inbounds i8, i8* %214, i64 20
  %216 = bitcast i8* %215 to i32*
  %217 = load i32, i32* %216, align 4
  %218 = add i32 %213, %217
  %219 = zext i32 %218 to i64
  store i64 %219, i64* %comp_bytes_remaining, align 8
  %220 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %221 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %220, i32 0, i32 5
  %222 = load i8* (i8*, i64, i64)*, i8* (i8*, i64, i64)** %221, align 8
  %223 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %224 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %223, i32 0, i32 8
  %225 = load i8*, i8** %224, align 8
  %226 = load i64, i64* %comp_bytes_remaining, align 8
  %227 = icmp ult i64 65536, %226
  br i1 %227, label %228, label %229

; <label>:228                                     ; preds = %199
  br label %231

; <label>:229                                     ; preds = %199
  %230 = load i64, i64* %comp_bytes_remaining, align 8
  br label %231

; <label>:231                                     ; preds = %229, %228
  %232 = phi i64 [ 65536, %228 ], [ %230, %229 ]
  %233 = icmp ugt i64 16, %232
  br i1 %233, label %234, label %235

; <label>:234                                     ; preds = %231
  br label %243

; <label>:235                                     ; preds = %231
  %236 = load i64, i64* %comp_bytes_remaining, align 8
  %237 = icmp ult i64 65536, %236
  br i1 %237, label %238, label %239

; <label>:238                                     ; preds = %235
  br label %241

; <label>:239                                     ; preds = %235
  %240 = load i64, i64* %comp_bytes_remaining, align 8
  br label %241

; <label>:241                                     ; preds = %239, %238
  %242 = phi i64 [ 65536, %238 ], [ %240, %239 ]
  br label %243

; <label>:243                                     ; preds = %241, %234
  %244 = phi i64 [ 16, %234 ], [ %242, %241 ]
  %245 = call i8* %222(i8* %225, i64 1, i64 %244)
  store i8* %245, i8** %pBuf, align 8
  %246 = icmp eq i8* null, %245
  br i1 %246, label %247, label %248

; <label>:247                                     ; preds = %243
  store i32 0, i32* %44, align 4
  br label %656

; <label>:248                                     ; preds = %243
  br label %249

; <label>:249                                     ; preds = %310, %248
  %250 = load i64, i64* %comp_bytes_remaining, align 8
  %251 = icmp ne i64 %250, 0
  br i1 %251, label %252, label %319

; <label>:252                                     ; preds = %249
  %253 = load i64, i64* %comp_bytes_remaining, align 8
  %254 = icmp ult i64 65536, %253
  br i1 %254, label %255, label %256

; <label>:255                                     ; preds = %252
  br label %258

; <label>:256                                     ; preds = %252
  %257 = load i64, i64* %comp_bytes_remaining, align 8
  br label %258

; <label>:258                                     ; preds = %256, %255
  %259 = phi i64 [ 65536, %255 ], [ %257, %256 ]
  %260 = trunc i64 %259 to i32
  store i32 %260, i32* %n, align 4
  %261 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %46, align 8
  %262 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %261, i32 0, i32 9
  %263 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %262, align 8
  %264 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %46, align 8
  %265 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %264, i32 0, i32 11
  %266 = load i8*, i8** %265, align 8
  %267 = load i64, i64* %cur_src_file_ofs, align 8
  %268 = load i8*, i8** %pBuf, align 8
  %269 = load i32, i32* %n, align 4
  %270 = zext i32 %269 to i64
  %271 = call i64 %263(i8* %266, i64 %267, i8* %268, i64 %270)
  %272 = load i32, i32* %n, align 4
  %273 = zext i32 %272 to i64
  %274 = icmp ne i64 %271, %273
  br i1 %274, label %275, label %283

; <label>:275                                     ; preds = %258
  %276 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %277 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %276, i32 0, i32 6
  %278 = load void (i8*, i8*)*, void (i8*, i8*)** %277, align 8
  %279 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %280 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %279, i32 0, i32 8
  %281 = load i8*, i8** %280, align 8
  %282 = load i8*, i8** %pBuf, align 8
  call void %278(i8* %281, i8* %282)
  store i32 0, i32* %44, align 4
  br label %656

; <label>:283                                     ; preds = %258
  %284 = load i32, i32* %n, align 4
  %285 = zext i32 %284 to i64
  %286 = load i64, i64* %cur_src_file_ofs, align 8
  %287 = add i64 %286, %285
  store i64 %287, i64* %cur_src_file_ofs, align 8
  %288 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %289 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %288, i32 0, i32 10
  %290 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %289, align 8
  %291 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %292 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %291, i32 0, i32 11
  %293 = load i8*, i8** %292, align 8
  %294 = load i64, i64* %cur_dst_file_ofs, align 8
  %295 = load i8*, i8** %pBuf, align 8
  %296 = load i32, i32* %n, align 4
  %297 = zext i32 %296 to i64
  %298 = call i64 %290(i8* %293, i64 %294, i8* %295, i64 %297)
  %299 = load i32, i32* %n, align 4
  %300 = zext i32 %299 to i64
  %301 = icmp ne i64 %298, %300
  br i1 %301, label %302, label %310

; <label>:302                                     ; preds = %283
  %303 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %304 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %303, i32 0, i32 6
  %305 = load void (i8*, i8*)*, void (i8*, i8*)** %304, align 8
  %306 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %307 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %306, i32 0, i32 8
  %308 = load i8*, i8** %307, align 8
  %309 = load i8*, i8** %pBuf, align 8
  call void %305(i8* %308, i8* %309)
  store i32 0, i32* %44, align 4
  br label %656

; <label>:310                                     ; preds = %283
  %311 = load i32, i32* %n, align 4
  %312 = zext i32 %311 to i64
  %313 = load i64, i64* %cur_dst_file_ofs, align 8
  %314 = add i64 %313, %312
  store i64 %314, i64* %cur_dst_file_ofs, align 8
  %315 = load i32, i32* %n, align 4
  %316 = zext i32 %315 to i64
  %317 = load i64, i64* %comp_bytes_remaining, align 8
  %318 = sub i64 %317, %316
  store i64 %318, i64* %comp_bytes_remaining, align 8
  br label %249

; <label>:319                                     ; preds = %249
  %320 = load i8*, i8** %pLocal_header, align 8
  %321 = getelementptr inbounds i8, i8* %320, i64 6
  %322 = bitcast i8* %321 to i16*
  %323 = load i16, i16* %322, align 2
  %324 = zext i16 %323 to i32
  store i32 %324, i32* %bit_flags, align 4
  %325 = load i32, i32* %bit_flags, align 4
  %326 = and i32 %325, 8
  %327 = icmp ne i32 %326, 0
  br i1 %327, label %328, label %387

; <label>:328                                     ; preds = %319
  %329 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %46, align 8
  %330 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %329, i32 0, i32 9
  %331 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %330, align 8
  %332 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %46, align 8
  %333 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %332, i32 0, i32 11
  %334 = load i8*, i8** %333, align 8
  %335 = load i64, i64* %cur_src_file_ofs, align 8
  %336 = load i8*, i8** %pBuf, align 8
  %337 = call i64 %331(i8* %334, i64 %335, i8* %336, i64 16)
  %338 = icmp ne i64 %337, 16
  br i1 %338, label %339, label %347

; <label>:339                                     ; preds = %328
  %340 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %341 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %340, i32 0, i32 6
  %342 = load void (i8*, i8*)*, void (i8*, i8*)** %341, align 8
  %343 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %344 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %343, i32 0, i32 8
  %345 = load i8*, i8** %344, align 8
  %346 = load i8*, i8** %pBuf, align 8
  call void %342(i8* %345, i8* %346)
  store i32 0, i32* %44, align 4
  br label %656

; <label>:347                                     ; preds = %328
  %348 = load i8*, i8** %pBuf, align 8
  %349 = bitcast i8* %348 to i32*
  %350 = load i32, i32* %349, align 4
  %351 = icmp eq i32 %350, 134695760
  %352 = select i1 %351, i32 4, i32 3
  %353 = sext i32 %352 to i64
  %354 = mul i64 4, %353
  %355 = trunc i64 %354 to i32
  store i32 %355, i32* %n, align 4
  %356 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %357 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %356, i32 0, i32 10
  %358 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %357, align 8
  %359 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %360 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %359, i32 0, i32 11
  %361 = load i8*, i8** %360, align 8
  %362 = load i64, i64* %cur_dst_file_ofs, align 8
  %363 = load i8*, i8** %pBuf, align 8
  %364 = load i32, i32* %n, align 4
  %365 = zext i32 %364 to i64
  %366 = call i64 %358(i8* %361, i64 %362, i8* %363, i64 %365)
  %367 = load i32, i32* %n, align 4
  %368 = zext i32 %367 to i64
  %369 = icmp ne i64 %366, %368
  br i1 %369, label %370, label %378

; <label>:370                                     ; preds = %347
  %371 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %372 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %371, i32 0, i32 6
  %373 = load void (i8*, i8*)*, void (i8*, i8*)** %372, align 8
  %374 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %375 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %374, i32 0, i32 8
  %376 = load i8*, i8** %375, align 8
  %377 = load i8*, i8** %pBuf, align 8
  call void %373(i8* %376, i8* %377)
  store i32 0, i32* %44, align 4
  br label %656

; <label>:378                                     ; preds = %347
  %379 = load i32, i32* %n, align 4
  %380 = zext i32 %379 to i64
  %381 = load i64, i64* %cur_src_file_ofs, align 8
  %382 = add i64 %381, %380
  store i64 %382, i64* %cur_src_file_ofs, align 8
  %383 = load i32, i32* %n, align 4
  %384 = zext i32 %383 to i64
  %385 = load i64, i64* %cur_dst_file_ofs, align 8
  %386 = add i64 %385, %384
  store i64 %386, i64* %cur_dst_file_ofs, align 8
  br label %387

; <label>:387                                     ; preds = %378, %319
  %388 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %389 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %388, i32 0, i32 6
  %390 = load void (i8*, i8*)*, void (i8*, i8*)** %389, align 8
  %391 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %392 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %391, i32 0, i32 8
  %393 = load i8*, i8** %392, align 8
  %394 = load i8*, i8** %pBuf, align 8
  call void %390(i8* %393, i8* %394)
  %395 = load i64, i64* %cur_dst_file_ofs, align 8
  %396 = icmp ugt i64 %395, 4294967295
  br i1 %396, label %397, label %398

; <label>:397                                     ; preds = %387
  store i32 0, i32* %44, align 4
  br label %656

; <label>:398                                     ; preds = %387
  %399 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %400 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %399, i32 0, i32 0
  %401 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %400, i32 0, i32 1
  %402 = load i64, i64* %401, align 8
  store i64 %402, i64* %orig_central_dir_size, align 8
  %403 = getelementptr inbounds [46 x i8], [46 x i8]* %central_header, i32 0, i32 0
  %404 = load i8*, i8** %pSrc_central_header, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %403, i8* %404, i64 46, i32 1, i1 false)
  %405 = getelementptr inbounds [46 x i8], [46 x i8]* %central_header, i32 0, i32 0
  %406 = getelementptr inbounds i8, i8* %405, i64 42
  %407 = load i64, i64* %local_dir_header_ofs, align 8
  %408 = trunc i64 %407 to i32
  call void @mz_write_le32(i8* %406, i32 %408)
  %409 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %410 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %411 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %410, i32 0, i32 0
  %412 = getelementptr inbounds [46 x i8], [46 x i8]* %central_header, i32 0, i32 0
  store %struct.mz_zip_archive_tag* %409, %struct.mz_zip_archive_tag** %32, align 8
  store %struct.mz_zip_array* %411, %struct.mz_zip_array** %33, align 8
  store i8* %412, i8** %34, align 8
  store i64 46, i64* %35, align 8
  %413 = load %struct.mz_zip_array*, %struct.mz_zip_array** %33, align 8
  %414 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %413, i32 0, i32 1
  %415 = load i64, i64* %414, align 8
  store i64 %415, i64* %orig_size.i, align 8
  %416 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %32, align 8
  %417 = load %struct.mz_zip_array*, %struct.mz_zip_array** %33, align 8
  %418 = load i64, i64* %orig_size.i, align 8
  %419 = load i64, i64* %35, align 8
  %420 = add i64 %418, %419
  store %struct.mz_zip_archive_tag* %416, %struct.mz_zip_archive_tag** %27, align 8
  store %struct.mz_zip_array* %417, %struct.mz_zip_array** %28, align 8
  store i64 %420, i64* %29, align 8
  store i32 1, i32* %30, align 4
  %421 = load i64, i64* %29, align 8
  %422 = load %struct.mz_zip_array*, %struct.mz_zip_array** %28, align 8
  %423 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %422, i32 0, i32 2
  %424 = load i64, i64* %423, align 8
  %425 = icmp ugt i64 %421, %424
  br i1 %425, label %426, label %435

; <label>:426                                     ; preds = %398
  %427 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %27, align 8
  %428 = load %struct.mz_zip_array*, %struct.mz_zip_array** %28, align 8
  %429 = load i64, i64* %29, align 8
  %430 = load i32, i32* %30, align 4
  %431 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive_tag* %427, %struct.mz_zip_array* %428, i64 %429, i32 %430) #6
  %432 = icmp ne i32 %431, 0
  br i1 %432, label %434, label %433

; <label>:433                                     ; preds = %426
  store i32 0, i32* %26, align 4
  br label %mz_zip_array_resize.exit.i

; <label>:434                                     ; preds = %426
  br label %435

; <label>:435                                     ; preds = %434, %398
  %436 = load i64, i64* %29, align 8
  %437 = load %struct.mz_zip_array*, %struct.mz_zip_array** %28, align 8
  %438 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %437, i32 0, i32 1
  store i64 %436, i64* %438, align 8
  store i32 1, i32* %26, align 4
  br label %mz_zip_array_resize.exit.i

mz_zip_array_resize.exit.i:                       ; preds = %435, %433
  %439 = load i32, i32* %26, align 4
  %440 = icmp ne i32 %439, 0
  br i1 %440, label %442, label %441

; <label>:441                                     ; preds = %mz_zip_array_resize.exit.i
  store i32 0, i32* %31, align 4
  br label %mz_zip_array_push_back.exit

; <label>:442                                     ; preds = %mz_zip_array_resize.exit.i
  %443 = load %struct.mz_zip_array*, %struct.mz_zip_array** %33, align 8
  %444 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %443, i32 0, i32 0
  %445 = load i8*, i8** %444, align 8
  %446 = load i64, i64* %orig_size.i, align 8
  %447 = load %struct.mz_zip_array*, %struct.mz_zip_array** %33, align 8
  %448 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %447, i32 0, i32 3
  %449 = load i32, i32* %448, align 8
  %450 = zext i32 %449 to i64
  %451 = mul i64 %446, %450
  %452 = getelementptr inbounds i8, i8* %445, i64 %451
  %453 = load i8*, i8** %34, align 8
  %454 = load i64, i64* %35, align 8
  %455 = load %struct.mz_zip_array*, %struct.mz_zip_array** %33, align 8
  %456 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %455, i32 0, i32 3
  %457 = load i32, i32* %456, align 8
  %458 = zext i32 %457 to i64
  %459 = mul i64 %454, %458
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %452, i8* %453, i64 %459, i32 1, i1 false) #6
  store i32 1, i32* %31, align 4
  br label %mz_zip_array_push_back.exit

mz_zip_array_push_back.exit:                      ; preds = %441, %442
  %460 = load i32, i32* %31, align 4
  %461 = icmp ne i32 %460, 0
  br i1 %461, label %463, label %462

; <label>:462                                     ; preds = %mz_zip_array_push_back.exit
  store i32 0, i32* %44, align 4
  br label %656

; <label>:463                                     ; preds = %mz_zip_array_push_back.exit
  %464 = load i8*, i8** %pSrc_central_header, align 8
  %465 = getelementptr inbounds i8, i8* %464, i64 28
  %466 = bitcast i8* %465 to i16*
  %467 = load i16, i16* %466, align 2
  %468 = zext i16 %467 to i32
  %469 = load i8*, i8** %pSrc_central_header, align 8
  %470 = getelementptr inbounds i8, i8* %469, i64 30
  %471 = bitcast i8* %470 to i16*
  %472 = load i16, i16* %471, align 2
  %473 = zext i16 %472 to i32
  %474 = add nsw i32 %468, %473
  %475 = load i8*, i8** %pSrc_central_header, align 8
  %476 = getelementptr inbounds i8, i8* %475, i64 32
  %477 = bitcast i8* %476 to i16*
  %478 = load i16, i16* %477, align 2
  %479 = zext i16 %478 to i32
  %480 = add nsw i32 %474, %479
  store i32 %480, i32* %n, align 4
  %481 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %482 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %483 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %482, i32 0, i32 0
  %484 = load i8*, i8** %pSrc_central_header, align 8
  %485 = getelementptr inbounds i8, i8* %484, i64 46
  %486 = load i32, i32* %n, align 4
  %487 = zext i32 %486 to i64
  store %struct.mz_zip_archive_tag* %481, %struct.mz_zip_archive_tag** %22, align 8
  store %struct.mz_zip_array* %483, %struct.mz_zip_array** %23, align 8
  store i8* %485, i8** %24, align 8
  store i64 %487, i64* %25, align 8
  %488 = load %struct.mz_zip_array*, %struct.mz_zip_array** %23, align 8
  %489 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %488, i32 0, i32 1
  %490 = load i64, i64* %489, align 8
  store i64 %490, i64* %orig_size.i1, align 8
  %491 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %22, align 8
  %492 = load %struct.mz_zip_array*, %struct.mz_zip_array** %23, align 8
  %493 = load i64, i64* %orig_size.i1, align 8
  %494 = load i64, i64* %25, align 8
  %495 = add i64 %493, %494
  store %struct.mz_zip_archive_tag* %491, %struct.mz_zip_archive_tag** %17, align 8
  store %struct.mz_zip_array* %492, %struct.mz_zip_array** %18, align 8
  store i64 %495, i64* %19, align 8
  store i32 1, i32* %20, align 4
  %496 = load i64, i64* %19, align 8
  %497 = load %struct.mz_zip_array*, %struct.mz_zip_array** %18, align 8
  %498 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %497, i32 0, i32 2
  %499 = load i64, i64* %498, align 8
  %500 = icmp ugt i64 %496, %499
  br i1 %500, label %501, label %510

; <label>:501                                     ; preds = %463
  %502 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %503 = load %struct.mz_zip_array*, %struct.mz_zip_array** %18, align 8
  %504 = load i64, i64* %19, align 8
  %505 = load i32, i32* %20, align 4
  %506 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive_tag* %502, %struct.mz_zip_array* %503, i64 %504, i32 %505) #6
  %507 = icmp ne i32 %506, 0
  br i1 %507, label %509, label %508

; <label>:508                                     ; preds = %501
  store i32 0, i32* %16, align 4
  br label %mz_zip_array_resize.exit.i2

; <label>:509                                     ; preds = %501
  br label %510

; <label>:510                                     ; preds = %509, %463
  %511 = load i64, i64* %19, align 8
  %512 = load %struct.mz_zip_array*, %struct.mz_zip_array** %18, align 8
  %513 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %512, i32 0, i32 1
  store i64 %511, i64* %513, align 8
  store i32 1, i32* %16, align 4
  br label %mz_zip_array_resize.exit.i2

mz_zip_array_resize.exit.i2:                      ; preds = %510, %508
  %514 = load i32, i32* %16, align 4
  %515 = icmp ne i32 %514, 0
  br i1 %515, label %517, label %516

; <label>:516                                     ; preds = %mz_zip_array_resize.exit.i2
  store i32 0, i32* %21, align 4
  br label %mz_zip_array_push_back.exit3

; <label>:517                                     ; preds = %mz_zip_array_resize.exit.i2
  %518 = load %struct.mz_zip_array*, %struct.mz_zip_array** %23, align 8
  %519 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %518, i32 0, i32 0
  %520 = load i8*, i8** %519, align 8
  %521 = load i64, i64* %orig_size.i1, align 8
  %522 = load %struct.mz_zip_array*, %struct.mz_zip_array** %23, align 8
  %523 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %522, i32 0, i32 3
  %524 = load i32, i32* %523, align 8
  %525 = zext i32 %524 to i64
  %526 = mul i64 %521, %525
  %527 = getelementptr inbounds i8, i8* %520, i64 %526
  %528 = load i8*, i8** %24, align 8
  %529 = load i64, i64* %25, align 8
  %530 = load %struct.mz_zip_array*, %struct.mz_zip_array** %23, align 8
  %531 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %530, i32 0, i32 3
  %532 = load i32, i32* %531, align 8
  %533 = zext i32 %532 to i64
  %534 = mul i64 %529, %533
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %527, i8* %528, i64 %534, i32 1, i1 false) #6
  store i32 1, i32* %21, align 4
  br label %mz_zip_array_push_back.exit3

mz_zip_array_push_back.exit3:                     ; preds = %516, %517
  %535 = load i32, i32* %21, align 4
  %536 = icmp ne i32 %535, 0
  br i1 %536, label %561, label %537

; <label>:537                                     ; preds = %mz_zip_array_push_back.exit3
  %538 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %539 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %540 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %539, i32 0, i32 0
  %541 = load i64, i64* %orig_central_dir_size, align 8
  store %struct.mz_zip_archive_tag* %538, %struct.mz_zip_archive_tag** %12, align 8
  store %struct.mz_zip_array* %540, %struct.mz_zip_array** %13, align 8
  store i64 %541, i64* %14, align 8
  store i32 0, i32* %15, align 4
  %542 = load i64, i64* %14, align 8
  %543 = load %struct.mz_zip_array*, %struct.mz_zip_array** %13, align 8
  %544 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %543, i32 0, i32 2
  %545 = load i64, i64* %544, align 8
  %546 = icmp ugt i64 %542, %545
  br i1 %546, label %547, label %556

; <label>:547                                     ; preds = %537
  %548 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %12, align 8
  %549 = load %struct.mz_zip_array*, %struct.mz_zip_array** %13, align 8
  %550 = load i64, i64* %14, align 8
  %551 = load i32, i32* %15, align 4
  %552 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive_tag* %548, %struct.mz_zip_array* %549, i64 %550, i32 %551) #6
  %553 = icmp ne i32 %552, 0
  br i1 %553, label %555, label %554

; <label>:554                                     ; preds = %547
  store i32 0, i32* %11, align 4
  br label %mz_zip_array_resize.exit4

; <label>:555                                     ; preds = %547
  br label %556

; <label>:556                                     ; preds = %555, %537
  %557 = load i64, i64* %14, align 8
  %558 = load %struct.mz_zip_array*, %struct.mz_zip_array** %13, align 8
  %559 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %558, i32 0, i32 1
  store i64 %557, i64* %559, align 8
  store i32 1, i32* %11, align 4
  br label %mz_zip_array_resize.exit4

mz_zip_array_resize.exit4:                        ; preds = %554, %556
  %560 = load i32, i32* %11, align 4
  store i32 0, i32* %44, align 4
  br label %656

; <label>:561                                     ; preds = %mz_zip_array_push_back.exit3
  %562 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %563 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %562, i32 0, i32 0
  %564 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %563, i32 0, i32 1
  %565 = load i64, i64* %564, align 8
  %566 = icmp ugt i64 %565, 4294967295
  br i1 %566, label %567, label %568

; <label>:567                                     ; preds = %561
  store i32 0, i32* %44, align 4
  br label %656

; <label>:568                                     ; preds = %561
  %569 = load i64, i64* %orig_central_dir_size, align 8
  %570 = trunc i64 %569 to i32
  store i32 %570, i32* %n, align 4
  %571 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %572 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %573 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %572, i32 0, i32 1
  %574 = bitcast i32* %n to i8*
  store %struct.mz_zip_archive_tag* %571, %struct.mz_zip_archive_tag** %7, align 8
  store %struct.mz_zip_array* %573, %struct.mz_zip_array** %8, align 8
  store i8* %574, i8** %9, align 8
  store i64 1, i64* %10, align 8
  %575 = load %struct.mz_zip_array*, %struct.mz_zip_array** %8, align 8
  %576 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %575, i32 0, i32 1
  %577 = load i64, i64* %576, align 8
  store i64 %577, i64* %orig_size.i5, align 8
  %578 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %7, align 8
  %579 = load %struct.mz_zip_array*, %struct.mz_zip_array** %8, align 8
  %580 = load i64, i64* %orig_size.i5, align 8
  %581 = load i64, i64* %10, align 8
  %582 = add i64 %580, %581
  store %struct.mz_zip_archive_tag* %578, %struct.mz_zip_archive_tag** %2, align 8
  store %struct.mz_zip_array* %579, %struct.mz_zip_array** %3, align 8
  store i64 %582, i64* %4, align 8
  store i32 1, i32* %5, align 4
  %583 = load i64, i64* %4, align 8
  %584 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %585 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %584, i32 0, i32 2
  %586 = load i64, i64* %585, align 8
  %587 = icmp ugt i64 %583, %586
  br i1 %587, label %588, label %597

; <label>:588                                     ; preds = %568
  %589 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %590 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %591 = load i64, i64* %4, align 8
  %592 = load i32, i32* %5, align 4
  %593 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive_tag* %589, %struct.mz_zip_array* %590, i64 %591, i32 %592) #6
  %594 = icmp ne i32 %593, 0
  br i1 %594, label %596, label %595

; <label>:595                                     ; preds = %588
  store i32 0, i32* %1, align 4
  br label %mz_zip_array_resize.exit.i6

; <label>:596                                     ; preds = %588
  br label %597

; <label>:597                                     ; preds = %596, %568
  %598 = load i64, i64* %4, align 8
  %599 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %600 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %599, i32 0, i32 1
  store i64 %598, i64* %600, align 8
  store i32 1, i32* %1, align 4
  br label %mz_zip_array_resize.exit.i6

mz_zip_array_resize.exit.i6:                      ; preds = %597, %595
  %601 = load i32, i32* %1, align 4
  %602 = icmp ne i32 %601, 0
  br i1 %602, label %604, label %603

; <label>:603                                     ; preds = %mz_zip_array_resize.exit.i6
  store i32 0, i32* %6, align 4
  br label %mz_zip_array_push_back.exit7

; <label>:604                                     ; preds = %mz_zip_array_resize.exit.i6
  %605 = load %struct.mz_zip_array*, %struct.mz_zip_array** %8, align 8
  %606 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %605, i32 0, i32 0
  %607 = load i8*, i8** %606, align 8
  %608 = load i64, i64* %orig_size.i5, align 8
  %609 = load %struct.mz_zip_array*, %struct.mz_zip_array** %8, align 8
  %610 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %609, i32 0, i32 3
  %611 = load i32, i32* %610, align 8
  %612 = zext i32 %611 to i64
  %613 = mul i64 %608, %612
  %614 = getelementptr inbounds i8, i8* %607, i64 %613
  %615 = load i8*, i8** %9, align 8
  %616 = load i64, i64* %10, align 8
  %617 = load %struct.mz_zip_array*, %struct.mz_zip_array** %8, align 8
  %618 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %617, i32 0, i32 3
  %619 = load i32, i32* %618, align 8
  %620 = zext i32 %619 to i64
  %621 = mul i64 %616, %620
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %614, i8* %615, i64 %621, i32 1, i1 false) #6
  store i32 1, i32* %6, align 4
  br label %mz_zip_array_push_back.exit7

mz_zip_array_push_back.exit7:                     ; preds = %603, %604
  %622 = load i32, i32* %6, align 4
  %623 = icmp ne i32 %622, 0
  br i1 %623, label %648, label %624

; <label>:624                                     ; preds = %mz_zip_array_push_back.exit7
  %625 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %626 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %627 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %626, i32 0, i32 0
  %628 = load i64, i64* %orig_central_dir_size, align 8
  store %struct.mz_zip_archive_tag* %625, %struct.mz_zip_archive_tag** %37, align 8
  store %struct.mz_zip_array* %627, %struct.mz_zip_array** %38, align 8
  store i64 %628, i64* %39, align 8
  store i32 0, i32* %40, align 4
  %629 = load i64, i64* %39, align 8
  %630 = load %struct.mz_zip_array*, %struct.mz_zip_array** %38, align 8
  %631 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %630, i32 0, i32 2
  %632 = load i64, i64* %631, align 8
  %633 = icmp ugt i64 %629, %632
  br i1 %633, label %634, label %643

; <label>:634                                     ; preds = %624
  %635 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %37, align 8
  %636 = load %struct.mz_zip_array*, %struct.mz_zip_array** %38, align 8
  %637 = load i64, i64* %39, align 8
  %638 = load i32, i32* %40, align 4
  %639 = call i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive_tag* %635, %struct.mz_zip_array* %636, i64 %637, i32 %638) #6
  %640 = icmp ne i32 %639, 0
  br i1 %640, label %642, label %641

; <label>:641                                     ; preds = %634
  store i32 0, i32* %36, align 4
  br label %mz_zip_array_resize.exit

; <label>:642                                     ; preds = %634
  br label %643

; <label>:643                                     ; preds = %642, %624
  %644 = load i64, i64* %39, align 8
  %645 = load %struct.mz_zip_array*, %struct.mz_zip_array** %38, align 8
  %646 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %645, i32 0, i32 1
  store i64 %644, i64* %646, align 8
  store i32 1, i32* %36, align 4
  br label %mz_zip_array_resize.exit

mz_zip_array_resize.exit:                         ; preds = %641, %643
  %647 = load i32, i32* %36, align 4
  store i32 0, i32* %44, align 4
  br label %656

; <label>:648                                     ; preds = %mz_zip_array_push_back.exit7
  %649 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %650 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %649, i32 0, i32 2
  %651 = load i32, i32* %650, align 8
  %652 = add i32 %651, 1
  store i32 %652, i32* %650, align 8
  %653 = load i64, i64* %cur_dst_file_ofs, align 8
  %654 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %45, align 8
  %655 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %654, i32 0, i32 0
  store i64 %653, i64* %655, align 8
  store i32 1, i32* %44, align 4
  br label %656

; <label>:656                                     ; preds = %648, %mz_zip_array_resize.exit, %567, %mz_zip_array_resize.exit4, %462, %397, %370, %339, %302, %275, %247, %198, %163, %154, %148, %128, %107, %62
  %657 = load i32, i32* %44, align 4
  ret i32 %657
}

; Function Attrs: nounwind uwtable
define internal void @mz_write_le32(i8* %p, i32 %v) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i32, align 4
  store i8* %p, i8** %1, align 8
  store i32 %v, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = trunc i32 %3 to i8
  %5 = load i8*, i8** %1, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  store i8 %4, i8* %6, align 1
  %7 = load i32, i32* %2, align 4
  %8 = lshr i32 %7, 8
  %9 = trunc i32 %8 to i8
  %10 = load i8*, i8** %1, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 1
  store i8 %9, i8* %11, align 1
  %12 = load i32, i32* %2, align 4
  %13 = lshr i32 %12, 16
  %14 = trunc i32 %13 to i8
  %15 = load i8*, i8** %1, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 2
  store i8 %14, i8* %16, align 1
  %17 = load i32, i32* %2, align 4
  %18 = lshr i32 %17, 24
  %19 = trunc i32 %18 to i8
  %20 = load i8*, i8** %1, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 3
  store i8 %19, i8* %21, align 1
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_writer_finalize_archive(%struct.mz_zip_archive_tag* %pZip) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %pState = alloca %struct.mz_zip_internal_state_tag*, align 8
  %central_dir_ofs = alloca i64, align 8
  %central_dir_size = alloca i64, align 8
  %hdr = alloca [22 x i8], align 16
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  %3 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %4 = icmp ne %struct.mz_zip_archive_tag* %3, null
  br i1 %4, label %5, label %15

; <label>:5                                       ; preds = %0
  %6 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %7 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %6, i32 0, i32 12
  %8 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %7, align 8
  %9 = icmp ne %struct.mz_zip_internal_state_tag* %8, null
  br i1 %9, label %10, label %15

; <label>:10                                      ; preds = %5
  %11 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %12 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %11, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = icmp ne i32 %13, 2
  br i1 %14, label %15, label %16

; <label>:15                                      ; preds = %10, %5, %0
  store i32 0, i32* %1, align 4
  br label %130

; <label>:16                                      ; preds = %10
  %17 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %18 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %17, i32 0, i32 12
  %19 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %18, align 8
  store %struct.mz_zip_internal_state_tag* %19, %struct.mz_zip_internal_state_tag** %pState, align 8
  %20 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %21 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %20, i32 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp ugt i32 %22, 65535
  br i1 %23, label %35, label %24

; <label>:24                                      ; preds = %16
  %25 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %26 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %25, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %29 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %28, i32 0, i32 0
  %30 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %29, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %27, %31
  %33 = add i64 %32, 22
  %34 = icmp ugt i64 %33, 4294967295
  br i1 %34, label %35, label %36

; <label>:35                                      ; preds = %24, %16
  store i32 0, i32* %1, align 4
  br label %130

; <label>:36                                      ; preds = %24
  store i64 0, i64* %central_dir_ofs, align 8
  store i64 0, i64* %central_dir_size, align 8
  %37 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %38 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %37, i32 0, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %74

; <label>:41                                      ; preds = %36
  %42 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %43 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %42, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %central_dir_ofs, align 8
  %45 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %46 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %45, i32 0, i32 0
  %47 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %46, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %central_dir_size, align 8
  %49 = load i64, i64* %central_dir_ofs, align 8
  %50 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %51 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %50, i32 0, i32 1
  store i64 %49, i64* %51, align 8
  %52 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %53 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %52, i32 0, i32 10
  %54 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %53, align 8
  %55 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %56 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %55, i32 0, i32 11
  %57 = load i8*, i8** %56, align 8
  %58 = load i64, i64* %central_dir_ofs, align 8
  %59 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %60 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %59, i32 0, i32 0
  %61 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %60, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = load i64, i64* %central_dir_size, align 8
  %64 = call i64 %54(i8* %57, i64 %58, i8* %62, i64 %63)
  %65 = load i64, i64* %central_dir_size, align 8
  %66 = icmp ne i64 %64, %65
  br i1 %66, label %67, label %68

; <label>:67                                      ; preds = %41
  store i32 0, i32* %1, align 4
  br label %130

; <label>:68                                      ; preds = %41
  %69 = load i64, i64* %central_dir_size, align 8
  %70 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %71 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %70, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, %69
  store i64 %73, i64* %71, align 8
  br label %74

; <label>:74                                      ; preds = %68, %36
  %75 = bitcast [22 x i8]* %hdr to i8*
  call void @llvm.memset.p0i8.i64(i8* %75, i8 0, i64 22, i32 16, i1 false)
  %76 = getelementptr inbounds [22 x i8], [22 x i8]* %hdr, i32 0, i32 0
  %77 = getelementptr inbounds i8, i8* %76, i64 0
  call void @mz_write_le32(i8* %77, i32 101010256)
  %78 = getelementptr inbounds [22 x i8], [22 x i8]* %hdr, i32 0, i32 0
  %79 = getelementptr inbounds i8, i8* %78, i64 8
  %80 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %81 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %80, i32 0, i32 2
  %82 = load i32, i32* %81, align 8
  %83 = trunc i32 %82 to i16
  call void @mz_write_le16(i8* %79, i16 zeroext %83)
  %84 = getelementptr inbounds [22 x i8], [22 x i8]* %hdr, i32 0, i32 0
  %85 = getelementptr inbounds i8, i8* %84, i64 10
  %86 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %87 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %86, i32 0, i32 2
  %88 = load i32, i32* %87, align 8
  %89 = trunc i32 %88 to i16
  call void @mz_write_le16(i8* %85, i16 zeroext %89)
  %90 = getelementptr inbounds [22 x i8], [22 x i8]* %hdr, i32 0, i32 0
  %91 = getelementptr inbounds i8, i8* %90, i64 12
  %92 = load i64, i64* %central_dir_size, align 8
  %93 = trunc i64 %92 to i32
  call void @mz_write_le32(i8* %91, i32 %93)
  %94 = getelementptr inbounds [22 x i8], [22 x i8]* %hdr, i32 0, i32 0
  %95 = getelementptr inbounds i8, i8* %94, i64 16
  %96 = load i64, i64* %central_dir_ofs, align 8
  %97 = trunc i64 %96 to i32
  call void @mz_write_le32(i8* %95, i32 %97)
  %98 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %99 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %98, i32 0, i32 10
  %100 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %99, align 8
  %101 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %102 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %101, i32 0, i32 11
  %103 = load i8*, i8** %102, align 8
  %104 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %105 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %104, i32 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds [22 x i8], [22 x i8]* %hdr, i32 0, i32 0
  %108 = call i64 %100(i8* %103, i64 %106, i8* %107, i64 22)
  %109 = icmp ne i64 %108, 22
  br i1 %109, label %110, label %111

; <label>:110                                     ; preds = %74
  store i32 0, i32* %1, align 4
  br label %130

; <label>:111                                     ; preds = %74
  %112 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %113 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %112, i32 0, i32 3
  %114 = load %struct._IO_FILE*, %struct._IO_FILE** %113, align 8
  %115 = icmp ne %struct._IO_FILE* %114, null
  br i1 %115, label %116, label %123

; <label>:116                                     ; preds = %111
  %117 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %118 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %117, i32 0, i32 3
  %119 = load %struct._IO_FILE*, %struct._IO_FILE** %118, align 8
  %120 = call i32 @fflush(%struct._IO_FILE* %119)
  %121 = icmp eq i32 %120, -1
  br i1 %121, label %122, label %123

; <label>:122                                     ; preds = %116
  store i32 0, i32* %1, align 4
  br label %130

; <label>:123                                     ; preds = %116, %111
  %124 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %125 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %124, i32 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %126, 22
  store i64 %127, i64* %125, align 8
  %128 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %129 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %128, i32 0, i32 3
  store i32 3, i32* %129, align 4
  store i32 1, i32* %1, align 4
  br label %130

; <label>:130                                     ; preds = %123, %122, %110, %67, %35, %15
  %131 = load i32, i32* %1, align 4
  ret i32 %131
}

; Function Attrs: nounwind uwtable
define internal void @mz_write_le16(i8* %p, i16 zeroext %v) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i16, align 2
  store i8* %p, i8** %1, align 8
  store i16 %v, i16* %2, align 2
  %3 = load i16, i16* %2, align 2
  %4 = trunc i16 %3 to i8
  %5 = load i8*, i8** %1, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  store i8 %4, i8* %6, align 1
  %7 = load i16, i16* %2, align 2
  %8 = zext i16 %7 to i32
  %9 = ashr i32 %8, 8
  %10 = trunc i32 %9 to i8
  %11 = load i8*, i8** %1, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 1
  store i8 %10, i8* %12, align 1
  ret void
}

declare i32 @fflush(%struct._IO_FILE*) #4

; Function Attrs: nounwind uwtable
define i32 @mz_zip_writer_finalize_heap_archive(%struct.mz_zip_archive_tag* %pZip, i8** %pBuf, i64* %pSize) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i64*, align 8
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  store i8** %pBuf, i8*** %3, align 8
  store i64* %pSize, i64** %4, align 8
  %5 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %6 = icmp ne %struct.mz_zip_archive_tag* %5, null
  br i1 %6, label %7, label %18

; <label>:7                                       ; preds = %0
  %8 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %9 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %8, i32 0, i32 12
  %10 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %9, align 8
  %11 = icmp ne %struct.mz_zip_internal_state_tag* %10, null
  br i1 %11, label %12, label %18

; <label>:12                                      ; preds = %7
  %13 = load i8**, i8*** %3, align 8
  %14 = icmp ne i8** %13, null
  br i1 %14, label %15, label %18

; <label>:15                                      ; preds = %12
  %16 = load i64*, i64** %4, align 8
  %17 = icmp ne i64* %16, null
  br i1 %17, label %19, label %18

; <label>:18                                      ; preds = %15, %12, %7, %0
  store i32 0, i32* %1, align 4
  br label %55

; <label>:19                                      ; preds = %15
  %20 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %21 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %20, i32 0, i32 10
  %22 = load i64 (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)** %21, align 8
  %23 = icmp ne i64 (i8*, i64, i8*, i64)* %22, @mz_zip_heap_write_func
  br i1 %23, label %24, label %25

; <label>:24                                      ; preds = %19
  store i32 0, i32* %1, align 4
  br label %55

; <label>:25                                      ; preds = %19
  %26 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %27 = call i32 @mz_zip_writer_finalize_archive(%struct.mz_zip_archive_tag* %26)
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %30, label %29

; <label>:29                                      ; preds = %25
  store i32 0, i32* %1, align 4
  br label %55

; <label>:30                                      ; preds = %25
  %31 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %32 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %31, i32 0, i32 12
  %33 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %32, align 8
  %34 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %33, i32 0, i32 4
  %35 = load i8*, i8** %34, align 8
  %36 = load i8**, i8*** %3, align 8
  store i8* %35, i8** %36, align 8
  %37 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %38 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %37, i32 0, i32 12
  %39 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %38, align 8
  %40 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %39, i32 0, i32 5
  %41 = load i64, i64* %40, align 8
  %42 = load i64*, i64** %4, align 8
  store i64 %41, i64* %42, align 8
  %43 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %44 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %43, i32 0, i32 12
  %45 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %44, align 8
  %46 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %45, i32 0, i32 4
  store i8* null, i8** %46, align 8
  %47 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %48 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %47, i32 0, i32 12
  %49 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %48, align 8
  %50 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %49, i32 0, i32 6
  store i64 0, i64* %50, align 8
  %51 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %52 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %51, i32 0, i32 12
  %53 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %52, align 8
  %54 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %53, i32 0, i32 5
  store i64 0, i64* %54, align 8
  store i32 1, i32* %1, align 4
  br label %55

; <label>:55                                      ; preds = %30, %29, %24, %18
  %56 = load i32, i32* %1, align 4
  ret i32 %56
}

; Function Attrs: nounwind uwtable
define i32 @mz_zip_add_mem_to_archive_file_in_place(i8* %pZip_filename, i8* %pArchive_name, i8* %pBuf, i64 %buf_size, i8* %pComment, i16 zeroext %comment_size, i32 %level_and_flags) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16, align 2
  %8 = alloca i32, align 4
  %status = alloca i32, align 4
  %created_new_archive = alloca i32, align 4
  %zip_archive = alloca %struct.mz_zip_archive_tag, align 8
  %file_stat = alloca %struct.stat, align 8
  %ignoredStatus = alloca i32, align 4
  store i8* %pZip_filename, i8** %2, align 8
  store i8* %pArchive_name, i8** %3, align 8
  store i8* %pBuf, i8** %4, align 8
  store i64 %buf_size, i64* %5, align 8
  store i8* %pComment, i8** %6, align 8
  store i16 %comment_size, i16* %7, align 2
  store i32 %level_and_flags, i32* %8, align 4
  store i32 0, i32* %created_new_archive, align 4
  %9 = bitcast %struct.mz_zip_archive_tag* %zip_archive to i8*
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 96, i32 8, i1 false)
  %10 = load i32, i32* %8, align 4
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %0
  store i32 6, i32* %8, align 4
  br label %13

; <label>:13                                      ; preds = %12, %0
  %14 = load i8*, i8** %2, align 8
  %15 = icmp ne i8* %14, null
  br i1 %15, label %16, label %36

; <label>:16                                      ; preds = %13
  %17 = load i8*, i8** %3, align 8
  %18 = icmp ne i8* %17, null
  br i1 %18, label %19, label %36

; <label>:19                                      ; preds = %16
  %20 = load i64, i64* %5, align 8
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %22, label %25

; <label>:22                                      ; preds = %19
  %23 = load i8*, i8** %4, align 8
  %24 = icmp ne i8* %23, null
  br i1 %24, label %25, label %36

; <label>:25                                      ; preds = %22, %19
  %26 = load i16, i16* %7, align 2
  %27 = zext i16 %26 to i32
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %32

; <label>:29                                      ; preds = %25
  %30 = load i8*, i8** %6, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %36

; <label>:32                                      ; preds = %29, %25
  %33 = load i32, i32* %8, align 4
  %34 = and i32 %33, 15
  %35 = icmp ugt i32 %34, 10
  br i1 %35, label %36, label %37

; <label>:36                                      ; preds = %32, %29, %22, %16, %13
  store i32 0, i32* %1, align 4
  br label %93

; <label>:37                                      ; preds = %32
  %38 = load i8*, i8** %3, align 8
  %39 = call i32 @mz_zip_writer_validate_archive_name(i8* %38)
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %42, label %41

; <label>:41                                      ; preds = %37
  store i32 0, i32* %1, align 4
  br label %93

; <label>:42                                      ; preds = %37
  %43 = load i8*, i8** %2, align 8
  %44 = call i32 @stat(i8* %43, %struct.stat* %file_stat) #6
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %52

; <label>:46                                      ; preds = %42
  %47 = load i8*, i8** %2, align 8
  %48 = call i32 @mz_zip_writer_init_file(%struct.mz_zip_archive_tag* %zip_archive, i8* %47, i64 0)
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %51, label %50

; <label>:50                                      ; preds = %46
  store i32 0, i32* %1, align 4
  br label %93

; <label>:51                                      ; preds = %46
  store i32 1, i32* %created_new_archive, align 4
  br label %66

; <label>:52                                      ; preds = %42
  %53 = load i8*, i8** %2, align 8
  %54 = load i32, i32* %8, align 4
  %55 = or i32 %54, 2048
  %56 = call i32 @mz_zip_reader_init_file(%struct.mz_zip_archive_tag* %zip_archive, i8* %53, i32 %55)
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %59, label %58

; <label>:58                                      ; preds = %52
  store i32 0, i32* %1, align 4
  br label %93

; <label>:59                                      ; preds = %52
  %60 = load i8*, i8** %2, align 8
  %61 = call i32 @mz_zip_writer_init_from_reader(%struct.mz_zip_archive_tag* %zip_archive, i8* %60)
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %65, label %63

; <label>:63                                      ; preds = %59
  %64 = call i32 @mz_zip_reader_end(%struct.mz_zip_archive_tag* %zip_archive)
  store i32 0, i32* %1, align 4
  br label %93

; <label>:65                                      ; preds = %59
  br label %66

; <label>:66                                      ; preds = %65, %51
  %67 = load i8*, i8** %3, align 8
  %68 = load i8*, i8** %4, align 8
  %69 = load i64, i64* %5, align 8
  %70 = load i8*, i8** %6, align 8
  %71 = load i16, i16* %7, align 2
  %72 = load i32, i32* %8, align 4
  %73 = call i32 @mz_zip_writer_add_mem_ex(%struct.mz_zip_archive_tag* %zip_archive, i8* %67, i8* %68, i64 %69, i8* %70, i16 zeroext %71, i32 %72, i64 0, i32 0)
  store i32 %73, i32* %status, align 4
  %74 = call i32 @mz_zip_writer_finalize_archive(%struct.mz_zip_archive_tag* %zip_archive)
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %77, label %76

; <label>:76                                      ; preds = %66
  store i32 0, i32* %status, align 4
  br label %77

; <label>:77                                      ; preds = %76, %66
  %78 = call i32 @mz_zip_writer_end(%struct.mz_zip_archive_tag* %zip_archive)
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %81, label %80

; <label>:80                                      ; preds = %77
  store i32 0, i32* %status, align 4
  br label %81

; <label>:81                                      ; preds = %80, %77
  %82 = load i32, i32* %status, align 4
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %91, label %84

; <label>:84                                      ; preds = %81
  %85 = load i32, i32* %created_new_archive, align 4
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %87, label %91

; <label>:87                                      ; preds = %84
  %88 = load i8*, i8** %2, align 8
  %89 = call i32 @remove(i8* %88) #6
  store i32 %89, i32* %ignoredStatus, align 4
  %90 = load i32, i32* %ignoredStatus, align 4
  br label %91

; <label>:91                                      ; preds = %87, %84, %81
  %92 = load i32, i32* %status, align 4
  store i32 %92, i32* %1, align 4
  br label %93

; <label>:93                                      ; preds = %91, %63, %58, %50, %41, %36
  %94 = load i32, i32* %1, align 4
  ret i32 %94
}

; Function Attrs: nounwind
declare i32 @stat(i8*, %struct.stat*) #1

; Function Attrs: nounwind
declare i32 @remove(i8*) #1

; Function Attrs: nounwind uwtable
define i8* @mz_zip_extract_archive_file_to_heap(i8* %pZip_filename, i8* %pArchive_name, i64* %pSize, i32 %flags) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i32, align 4
  %file_index = alloca i32, align 4
  %zip_archive = alloca %struct.mz_zip_archive_tag, align 8
  %p = alloca i8*, align 8
  store i8* %pZip_filename, i8** %2, align 8
  store i8* %pArchive_name, i8** %3, align 8
  store i64* %pSize, i64** %4, align 8
  store i32 %flags, i32* %5, align 4
  store i8* null, i8** %p, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = icmp ne i64* %6, null
  br i1 %7, label %8, label %10

; <label>:8                                       ; preds = %0
  %9 = load i64*, i64** %4, align 8
  store i64 0, i64* %9, align 8
  br label %10

; <label>:10                                      ; preds = %8, %0
  %11 = load i8*, i8** %2, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %13, label %16

; <label>:13                                      ; preds = %10
  %14 = load i8*, i8** %3, align 8
  %15 = icmp ne i8* %14, null
  br i1 %15, label %17, label %16

; <label>:16                                      ; preds = %13, %10
  store i8* null, i8** %1, align 8
  br label %38

; <label>:17                                      ; preds = %13
  %18 = bitcast %struct.mz_zip_archive_tag* %zip_archive to i8*
  call void @llvm.memset.p0i8.i64(i8* %18, i8 0, i64 96, i32 8, i1 false)
  %19 = load i8*, i8** %2, align 8
  %20 = load i32, i32* %5, align 4
  %21 = or i32 %20, 2048
  %22 = call i32 @mz_zip_reader_init_file(%struct.mz_zip_archive_tag* %zip_archive, i8* %19, i32 %21)
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %25, label %24

; <label>:24                                      ; preds = %17
  store i8* null, i8** %1, align 8
  br label %38

; <label>:25                                      ; preds = %17
  %26 = load i8*, i8** %3, align 8
  %27 = load i32, i32* %5, align 4
  %28 = call i32 @mz_zip_reader_locate_file(%struct.mz_zip_archive_tag* %zip_archive, i8* %26, i8* null, i32 %27)
  store i32 %28, i32* %file_index, align 4
  %29 = icmp sge i32 %28, 0
  br i1 %29, label %30, label %35

; <label>:30                                      ; preds = %25
  %31 = load i32, i32* %file_index, align 4
  %32 = load i64*, i64** %4, align 8
  %33 = load i32, i32* %5, align 4
  %34 = call i8* @mz_zip_reader_extract_to_heap(%struct.mz_zip_archive_tag* %zip_archive, i32 %31, i64* %32, i32 %33)
  store i8* %34, i8** %p, align 8
  br label %35

; <label>:35                                      ; preds = %30, %25
  %36 = call i32 @mz_zip_reader_end(%struct.mz_zip_archive_tag* %zip_archive)
  %37 = load i8*, i8** %p, align 8
  store i8* %37, i8** %1, align 8
  br label %38

; <label>:38                                      ; preds = %35, %24, %16
  %39 = load i8*, i8** %1, align 8
  ret i8* %39
}

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8**, align 8
  %step = alloca i32, align 4
  %cmp_status = alloca i32, align 4
  %src_len = alloca i64, align 8
  %cmp_len = alloca i64, align 8
  %uncomp_len = alloca i64, align 8
  %pCmp = alloca i8*, align 8
  %pUncomp = alloca i8*, align 8
  %total_succeeded = alloca i32, align 4
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %1, align 4
  store i32 %argc, i32* %2, align 4
  store i8** %argv, i8*** %3, align 8
  store i32 0, i32* %step, align 4
  %4 = load i8*, i8** @s_pStr, align 8
  %5 = call i64 @strlen(i8* %4) #8
  store i64 %5, i64* %src_len, align 8
  %6 = load i64, i64* %src_len, align 8
  %7 = call i64 @mz_compressBound(i64 %6)
  store i64 %7, i64* %cmp_len, align 8
  %8 = load i64, i64* %src_len, align 8
  store i64 %8, i64* %uncomp_len, align 8
  store i32 0, i32* %total_succeeded, align 4
  %9 = load i32, i32* %2, align 4
  %10 = load i8**, i8*** %3, align 8
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0))
  br label %12

; <label>:12                                      ; preds = %116, %0
  %13 = load i64, i64* %cmp_len, align 8
  %14 = call noalias i8* @malloc(i64 %13) #6
  store i8* %14, i8** %pCmp, align 8
  %15 = load i64, i64* %src_len, align 8
  %16 = call noalias i8* @malloc(i64 %15) #6
  store i8* %16, i8** %pUncomp, align 8
  %17 = load i8*, i8** %pCmp, align 8
  %18 = icmp ne i8* %17, null
  br i1 %18, label %19, label %22

; <label>:19                                      ; preds = %12
  %20 = load i8*, i8** %pUncomp, align 8
  %21 = icmp ne i8* %20, null
  br i1 %21, label %24, label %22

; <label>:22                                      ; preds = %19, %12
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i32 0, i32 0))
  store i32 1, i32* %1, align 4
  br label %121

; <label>:24                                      ; preds = %19
  %25 = load i8*, i8** %pCmp, align 8
  %26 = load i8*, i8** @s_pStr, align 8
  %27 = load i64, i64* %src_len, align 8
  %28 = call i32 @mz_compress(i8* %25, i64* %cmp_len, i8* %26, i64 %27)
  store i32 %28, i32* %cmp_status, align 4
  %29 = load i32, i32* %cmp_status, align 4
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %35

; <label>:31                                      ; preds = %24
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i32 0, i32 0))
  %33 = load i8*, i8** %pCmp, align 8
  call void @free(i8* %33) #6
  %34 = load i8*, i8** %pUncomp, align 8
  call void @free(i8* %34) #6
  store i32 1, i32* %1, align 4
  br label %121

; <label>:35                                      ; preds = %24
  %36 = load i64, i64* %src_len, align 8
  %37 = trunc i64 %36 to i32
  %38 = load i64, i64* %cmp_len, align 8
  %39 = trunc i64 %38 to i32
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.24, i32 0, i32 0), i32 %37, i32 %39)
  %41 = load i32, i32* %step, align 4
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %68

; <label>:43                                      ; preds = %35
  %44 = call i32 @rand() #6
  %45 = srem i32 %44, 3
  %46 = add nsw i32 1, %45
  store i32 %46, i32* %n, align 4
  br label %47

; <label>:47                                      ; preds = %51, %43
  %48 = load i32, i32* %n, align 4
  %49 = add i32 %48, -1
  store i32 %49, i32* %n, align 4
  %50 = icmp ne i32 %48, 0
  br i1 %50, label %51, label %67

; <label>:51                                      ; preds = %47
  %52 = call i32 @rand() #6
  %53 = sext i32 %52 to i64
  %54 = load i64, i64* %cmp_len, align 8
  %55 = urem i64 %53, %54
  %56 = trunc i64 %55 to i32
  store i32 %56, i32* %i, align 4
  %57 = call i32 @rand() #6
  %58 = and i32 %57, 255
  %59 = load i32, i32* %i, align 4
  %60 = zext i32 %59 to i64
  %61 = load i8*, i8** %pCmp, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = xor i32 %64, %58
  %66 = trunc i32 %65 to i8
  store i8 %66, i8* %62, align 1
  br label %47

; <label>:67                                      ; preds = %47
  br label %68

; <label>:68                                      ; preds = %67, %35
  %69 = load i8*, i8** %pUncomp, align 8
  %70 = load i8*, i8** %pCmp, align 8
  %71 = load i64, i64* %cmp_len, align 8
  %72 = call i32 @mz_uncompress(i8* %69, i64* %uncomp_len, i8* %70, i64 %71)
  store i32 %72, i32* %cmp_status, align 4
  %73 = load i32, i32* %cmp_status, align 4
  %74 = icmp eq i32 %73, 0
  %75 = zext i1 %74 to i32
  %76 = load i32, i32* %total_succeeded, align 4
  %77 = add i32 %76, %75
  store i32 %77, i32* %total_succeeded, align 4
  %78 = load i32, i32* %step, align 4
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %84

; <label>:80                                      ; preds = %68
  %81 = load i32, i32* %step, align 4
  %82 = load i32, i32* %total_succeeded, align 4
  %83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25, i32 0, i32 0), i32 %81, i32 %82)
  br label %111

; <label>:84                                      ; preds = %68
  %85 = load i32, i32* %cmp_status, align 4
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %87, label %91

; <label>:87                                      ; preds = %84
  %88 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i32 0, i32 0))
  %89 = load i8*, i8** %pCmp, align 8
  call void @free(i8* %89) #6
  %90 = load i8*, i8** %pUncomp, align 8
  call void @free(i8* %90) #6
  store i32 1, i32* %1, align 4
  br label %121

; <label>:91                                      ; preds = %84
  %92 = load i64, i64* %cmp_len, align 8
  %93 = trunc i64 %92 to i32
  %94 = load i64, i64* %uncomp_len, align 8
  %95 = trunc i64 %94 to i32
  %96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.27, i32 0, i32 0), i32 %93, i32 %95)
  %97 = load i64, i64* %uncomp_len, align 8
  %98 = load i64, i64* %src_len, align 8
  %99 = icmp ne i64 %97, %98
  br i1 %99, label %106, label %100

; <label>:100                                     ; preds = %91
  %101 = load i8*, i8** %pUncomp, align 8
  %102 = load i8*, i8** @s_pStr, align 8
  %103 = load i64, i64* %src_len, align 8
  %104 = call i32 @memcmp(i8* %101, i8* %102, i64 %103) #8
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %106, label %110

; <label>:106                                     ; preds = %100, %91
  %107 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.28, i32 0, i32 0))
  %108 = load i8*, i8** %pCmp, align 8
  call void @free(i8* %108) #6
  %109 = load i8*, i8** %pUncomp, align 8
  call void @free(i8* %109) #6
  store i32 1, i32* %1, align 4
  br label %121

; <label>:110                                     ; preds = %100
  br label %111

; <label>:111                                     ; preds = %110, %80
  %112 = load i8*, i8** %pCmp, align 8
  call void @free(i8* %112) #6
  %113 = load i8*, i8** %pUncomp, align 8
  call void @free(i8* %113) #6
  %114 = load i32, i32* %step, align 4
  %115 = add i32 %114, 1
  store i32 %115, i32* %step, align 4
  br label %116

; <label>:116                                     ; preds = %111
  %117 = load i32, i32* %2, align 4
  %118 = icmp sge i32 %117, 2
  br i1 %118, label %12, label %119

; <label>:119                                     ; preds = %116
  %120 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i32 0, i32 0))
  store i32 0, i32* %1, align 4
  br label %121

; <label>:121                                     ; preds = %119, %106, %87, %31, %22
  %122 = load i32, i32* %1, align 4
  ret i32 %122
}

declare i32 @printf(i8*, ...) #4

; Function Attrs: nounwind
declare i32 @rand() #1

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #5

; Function Attrs: nounwind uwtable
define internal i32 @tdefl_compress_block(%struct.tdefl_compressor* %d, i32 %static_block) #0 {
  %1 = alloca %struct.tdefl_compressor*, align 8
  %2 = alloca i32, align 4
  store %struct.tdefl_compressor* %d, %struct.tdefl_compressor** %1, align 8
  store i32 %static_block, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %5, label %7

; <label>:5                                       ; preds = %0
  %6 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  call void @tdefl_start_static_block(%struct.tdefl_compressor* %6)
  br label %9

; <label>:7                                       ; preds = %0
  %8 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  call void @tdefl_start_dynamic_block(%struct.tdefl_compressor* %8)
  br label %9

; <label>:9                                       ; preds = %7, %5
  %10 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %11 = call i32 @tdefl_compress_lz_codes(%struct.tdefl_compressor* %10)
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define internal void @tdefl_start_static_block(%struct.tdefl_compressor* %d) #0 {
  %1 = alloca %struct.tdefl_compressor*, align 8
  %i = alloca i32, align 4
  %p = alloca i8*, align 8
  %bits = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.tdefl_compressor* %d, %struct.tdefl_compressor** %1, align 8
  %2 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %3 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %2, i32 0, i32 38
  %4 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %3, i64 0, i64 0
  %5 = getelementptr inbounds [288 x i8], [288 x i8]* %4, i64 0, i64 0
  store i8* %5, i8** %p, align 8
  store i32 0, i32* %i, align 4
  br label %6

; <label>:6                                       ; preds = %12, %0
  %7 = load i32, i32* %i, align 4
  %8 = icmp ule i32 %7, 143
  br i1 %8, label %9, label %15

; <label>:9                                       ; preds = %6
  %10 = load i8*, i8** %p, align 8
  %11 = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %11, i8** %p, align 8
  store i8 8, i8* %10, align 1
  br label %12

; <label>:12                                      ; preds = %9
  %13 = load i32, i32* %i, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %i, align 4
  br label %6

; <label>:15                                      ; preds = %6
  br label %16

; <label>:16                                      ; preds = %22, %15
  %17 = load i32, i32* %i, align 4
  %18 = icmp ule i32 %17, 255
  br i1 %18, label %19, label %25

; <label>:19                                      ; preds = %16
  %20 = load i8*, i8** %p, align 8
  %21 = getelementptr inbounds i8, i8* %20, i32 1
  store i8* %21, i8** %p, align 8
  store i8 9, i8* %20, align 1
  br label %22

; <label>:22                                      ; preds = %19
  %23 = load i32, i32* %i, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %i, align 4
  br label %16

; <label>:25                                      ; preds = %16
  br label %26

; <label>:26                                      ; preds = %32, %25
  %27 = load i32, i32* %i, align 4
  %28 = icmp ule i32 %27, 279
  br i1 %28, label %29, label %35

; <label>:29                                      ; preds = %26
  %30 = load i8*, i8** %p, align 8
  %31 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %31, i8** %p, align 8
  store i8 7, i8* %30, align 1
  br label %32

; <label>:32                                      ; preds = %29
  %33 = load i32, i32* %i, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %i, align 4
  br label %26

; <label>:35                                      ; preds = %26
  br label %36

; <label>:36                                      ; preds = %42, %35
  %37 = load i32, i32* %i, align 4
  %38 = icmp ule i32 %37, 287
  br i1 %38, label %39, label %45

; <label>:39                                      ; preds = %36
  %40 = load i8*, i8** %p, align 8
  %41 = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %41, i8** %p, align 8
  store i8 8, i8* %40, align 1
  br label %42

; <label>:42                                      ; preds = %39
  %43 = load i32, i32* %i, align 4
  %44 = add i32 %43, 1
  store i32 %44, i32* %i, align 4
  br label %36

; <label>:45                                      ; preds = %36
  %46 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %47 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %46, i32 0, i32 38
  %48 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %47, i64 0, i64 1
  %49 = getelementptr inbounds [288 x i8], [288 x i8]* %48, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* %49, i8 5, i64 32, i32 2, i1 false)
  %50 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  call void @tdefl_optimize_huffman_table(%struct.tdefl_compressor* %50, i32 0, i32 288, i32 15, i32 1)
  %51 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  call void @tdefl_optimize_huffman_table(%struct.tdefl_compressor* %51, i32 1, i32 32, i32 15, i32 1)
  br label %52

; <label>:52                                      ; preds = %45
  store i32 1, i32* %bits, align 4
  store i32 2, i32* %len, align 4
  %53 = load i32, i32* %bits, align 4
  %54 = load i32, i32* %len, align 4
  %55 = shl i32 1, %54
  %56 = sub i32 %55, 1
  %57 = icmp ule i32 %53, %56
  br i1 %57, label %58, label %59

; <label>:58                                      ; preds = %52
  br label %61

; <label>:59                                      ; preds = %52
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2013, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__.tdefl_start_static_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %61

; <label>:61                                      ; preds = %60, %58
  %62 = load i32, i32* %bits, align 4
  %63 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %64 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %63, i32 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = shl i32 %62, %65
  %67 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %68 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %67, i32 0, i32 17
  %69 = load i32, i32* %68, align 8
  %70 = or i32 %69, %66
  store i32 %70, i32* %68, align 8
  %71 = load i32, i32* %len, align 4
  %72 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %73 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %72, i32 0, i32 16
  %74 = load i32, i32* %73, align 4
  %75 = add i32 %74, %71
  store i32 %75, i32* %73, align 4
  br label %76

; <label>:76                                      ; preds = %98, %61
  %77 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %78 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %77, i32 0, i32 16
  %79 = load i32, i32* %78, align 4
  %80 = icmp uge i32 %79, 8
  br i1 %80, label %81, label %107

; <label>:81                                      ; preds = %76
  %82 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %83 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %82, i32 0, i32 11
  %84 = load i8*, i8** %83, align 8
  %85 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %86 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %85, i32 0, i32 12
  %87 = load i8*, i8** %86, align 8
  %88 = icmp ult i8* %84, %87
  br i1 %88, label %89, label %98

; <label>:89                                      ; preds = %81
  %90 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %91 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %90, i32 0, i32 17
  %92 = load i32, i32* %91, align 8
  %93 = trunc i32 %92 to i8
  %94 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %95 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %94, i32 0, i32 11
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr inbounds i8, i8* %96, i32 1
  store i8* %97, i8** %95, align 8
  store i8 %93, i8* %96, align 1
  br label %98

; <label>:98                                      ; preds = %89, %81
  %99 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %100 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %99, i32 0, i32 17
  %101 = load i32, i32* %100, align 8
  %102 = lshr i32 %101, 8
  store i32 %102, i32* %100, align 8
  %103 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %104 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %103, i32 0, i32 16
  %105 = load i32, i32* %104, align 4
  %106 = sub i32 %105, 8
  store i32 %106, i32* %104, align 4
  br label %76

; <label>:107                                     ; preds = %76
  br label %108

; <label>:108                                     ; preds = %107
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @tdefl_start_dynamic_block(%struct.tdefl_compressor* %d) #0 {
  %1 = alloca %struct.tdefl_compressor*, align 8
  %num_lit_codes = alloca i32, align 4
  %num_dist_codes = alloca i32, align 4
  %num_bit_lengths = alloca i32, align 4
  %i = alloca i32, align 4
  %total_code_sizes_to_pack = alloca i32, align 4
  %num_packed_code_sizes = alloca i32, align 4
  %rle_z_count = alloca i32, align 4
  %rle_repeat_count = alloca i32, align 4
  %packed_code_sizes_index = alloca i32, align 4
  %code_sizes_to_pack = alloca [320 x i8], align 16
  %packed_code_sizes = alloca [320 x i8], align 16
  %prev_code_size = alloca i8, align 1
  %code_size = alloca i8, align 1
  %bits = alloca i32, align 4
  %len = alloca i32, align 4
  %bits1 = alloca i32, align 4
  %len2 = alloca i32, align 4
  %bits3 = alloca i32, align 4
  %len4 = alloca i32, align 4
  %bits5 = alloca i32, align 4
  %len6 = alloca i32, align 4
  %bits7 = alloca i32, align 4
  %len8 = alloca i32, align 4
  %code = alloca i32, align 4
  %bits9 = alloca i32, align 4
  %len10 = alloca i32, align 4
  %bits11 = alloca i32, align 4
  %len12 = alloca i32, align 4
  store %struct.tdefl_compressor* %d, %struct.tdefl_compressor** %1, align 8
  store i8 -1, i8* %prev_code_size, align 1
  %2 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %3 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %2, i32 0, i32 36
  %4 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %3, i64 0, i64 0
  %5 = getelementptr inbounds [288 x i16], [288 x i16]* %4, i64 0, i64 256
  store i16 1, i16* %5, align 2
  %6 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  call void @tdefl_optimize_huffman_table(%struct.tdefl_compressor* %6, i32 0, i32 288, i32 15, i32 0)
  %7 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  call void @tdefl_optimize_huffman_table(%struct.tdefl_compressor* %7, i32 1, i32 32, i32 15, i32 0)
  store i32 286, i32* %num_lit_codes, align 4
  br label %8

; <label>:8                                       ; preds = %23, %0
  %9 = load i32, i32* %num_lit_codes, align 4
  %10 = icmp sgt i32 %9, 257
  br i1 %10, label %11, label %26

; <label>:11                                      ; preds = %8
  %12 = load i32, i32* %num_lit_codes, align 4
  %13 = sub nsw i32 %12, 1
  %14 = sext i32 %13 to i64
  %15 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %16 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %15, i32 0, i32 38
  %17 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %16, i64 0, i64 0
  %18 = getelementptr inbounds [288 x i8], [288 x i8]* %17, i64 0, i64 %14
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %11
  br label %26

; <label>:22                                      ; preds = %11
  br label %23

; <label>:23                                      ; preds = %22
  %24 = load i32, i32* %num_lit_codes, align 4
  %25 = add nsw i32 %24, -1
  store i32 %25, i32* %num_lit_codes, align 4
  br label %8

; <label>:26                                      ; preds = %21, %8
  store i32 30, i32* %num_dist_codes, align 4
  br label %27

; <label>:27                                      ; preds = %42, %26
  %28 = load i32, i32* %num_dist_codes, align 4
  %29 = icmp sgt i32 %28, 1
  br i1 %29, label %30, label %45

; <label>:30                                      ; preds = %27
  %31 = load i32, i32* %num_dist_codes, align 4
  %32 = sub nsw i32 %31, 1
  %33 = sext i32 %32 to i64
  %34 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %35 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %34, i32 0, i32 38
  %36 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %35, i64 0, i64 1
  %37 = getelementptr inbounds [288 x i8], [288 x i8]* %36, i64 0, i64 %33
  %38 = load i8, i8* %37, align 1
  %39 = icmp ne i8 %38, 0
  br i1 %39, label %40, label %41

; <label>:40                                      ; preds = %30
  br label %45

; <label>:41                                      ; preds = %30
  br label %42

; <label>:42                                      ; preds = %41
  %43 = load i32, i32* %num_dist_codes, align 4
  %44 = add nsw i32 %43, -1
  store i32 %44, i32* %num_dist_codes, align 4
  br label %27

; <label>:45                                      ; preds = %40, %27
  %46 = getelementptr inbounds [320 x i8], [320 x i8]* %code_sizes_to_pack, i32 0, i32 0
  %47 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %48 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %47, i32 0, i32 38
  %49 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %48, i64 0, i64 0
  %50 = getelementptr inbounds [288 x i8], [288 x i8]* %49, i64 0, i64 0
  %51 = load i32, i32* %num_lit_codes, align 4
  %52 = sext i32 %51 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %50, i64 %52, i32 2, i1 false)
  %53 = getelementptr inbounds [320 x i8], [320 x i8]* %code_sizes_to_pack, i32 0, i32 0
  %54 = load i32, i32* %num_lit_codes, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %53, i64 %55
  %57 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %58 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %57, i32 0, i32 38
  %59 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %58, i64 0, i64 1
  %60 = getelementptr inbounds [288 x i8], [288 x i8]* %59, i64 0, i64 0
  %61 = load i32, i32* %num_dist_codes, align 4
  %62 = sext i32 %61 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %60, i64 %62, i32 1, i1 false)
  %63 = load i32, i32* %num_lit_codes, align 4
  %64 = load i32, i32* %num_dist_codes, align 4
  %65 = add nsw i32 %63, %64
  store i32 %65, i32* %total_code_sizes_to_pack, align 4
  store i32 0, i32* %num_packed_code_sizes, align 4
  store i32 0, i32* %rle_z_count, align 4
  store i32 0, i32* %rle_repeat_count, align 4
  %66 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %67 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %66, i32 0, i32 36
  %68 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %67, i64 0, i64 2
  %69 = getelementptr inbounds [288 x i16], [288 x i16]* %68, i64 0, i64 0
  %70 = bitcast i16* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* %70, i8 0, i64 38, i32 2, i1 false)
  store i32 0, i32* %i, align 4
  br label %71

; <label>:71                                      ; preds = %471, %45
  %72 = load i32, i32* %i, align 4
  %73 = load i32, i32* %total_code_sizes_to_pack, align 4
  %74 = icmp ult i32 %72, %73
  br i1 %74, label %75, label %474

; <label>:75                                      ; preds = %71
  %76 = load i32, i32* %i, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds [320 x i8], [320 x i8]* %code_sizes_to_pack, i64 0, i64 %77
  %79 = load i8, i8* %78, align 1
  store i8 %79, i8* %code_size, align 1
  %80 = load i8, i8* %code_size, align 1
  %81 = icmp ne i8 %80, 0
  br i1 %81, label %231, label %82

; <label>:82                                      ; preds = %75
  %83 = load i32, i32* %rle_repeat_count, align 4
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %142

; <label>:85                                      ; preds = %82
  %86 = load i32, i32* %rle_repeat_count, align 4
  %87 = icmp ult i32 %86, 3
  br i1 %87, label %88, label %117

; <label>:88                                      ; preds = %85
  %89 = load i8, i8* %prev_code_size, align 1
  %90 = zext i8 %89 to i64
  %91 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %92 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %91, i32 0, i32 36
  %93 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %92, i64 0, i64 2
  %94 = getelementptr inbounds [288 x i16], [288 x i16]* %93, i64 0, i64 %90
  %95 = load i16, i16* %94, align 2
  %96 = zext i16 %95 to i32
  %97 = load i32, i32* %rle_repeat_count, align 4
  %98 = add i32 %96, %97
  %99 = trunc i32 %98 to i16
  %100 = load i8, i8* %prev_code_size, align 1
  %101 = zext i8 %100 to i64
  %102 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %103 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %102, i32 0, i32 36
  %104 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %103, i64 0, i64 2
  %105 = getelementptr inbounds [288 x i16], [288 x i16]* %104, i64 0, i64 %101
  store i16 %99, i16* %105, align 2
  br label %106

; <label>:106                                     ; preds = %110, %88
  %107 = load i32, i32* %rle_repeat_count, align 4
  %108 = add i32 %107, -1
  store i32 %108, i32* %rle_repeat_count, align 4
  %109 = icmp ne i32 %107, 0
  br i1 %109, label %110, label %116

; <label>:110                                     ; preds = %106
  %111 = load i8, i8* %prev_code_size, align 1
  %112 = load i32, i32* %num_packed_code_sizes, align 4
  %113 = add i32 %112, 1
  store i32 %113, i32* %num_packed_code_sizes, align 4
  %114 = zext i32 %112 to i64
  %115 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %114
  store i8 %111, i8* %115, align 1
  br label %106

; <label>:116                                     ; preds = %106
  br label %141

; <label>:117                                     ; preds = %85
  %118 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %119 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %118, i32 0, i32 36
  %120 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %119, i64 0, i64 2
  %121 = getelementptr inbounds [288 x i16], [288 x i16]* %120, i64 0, i64 16
  %122 = load i16, i16* %121, align 2
  %123 = zext i16 %122 to i32
  %124 = add nsw i32 %123, 1
  %125 = trunc i32 %124 to i16
  %126 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %127 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %126, i32 0, i32 36
  %128 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %127, i64 0, i64 2
  %129 = getelementptr inbounds [288 x i16], [288 x i16]* %128, i64 0, i64 16
  store i16 %125, i16* %129, align 2
  %130 = load i32, i32* %num_packed_code_sizes, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %num_packed_code_sizes, align 4
  %132 = zext i32 %130 to i64
  %133 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %132
  store i8 16, i8* %133, align 1
  %134 = load i32, i32* %rle_repeat_count, align 4
  %135 = sub i32 %134, 3
  %136 = trunc i32 %135 to i8
  %137 = load i32, i32* %num_packed_code_sizes, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %num_packed_code_sizes, align 4
  %139 = zext i32 %137 to i64
  %140 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %139
  store i8 %136, i8* %140, align 1
  br label %141

; <label>:141                                     ; preds = %117, %116
  store i32 0, i32* %rle_repeat_count, align 4
  br label %142

; <label>:142                                     ; preds = %141, %82
  %143 = load i32, i32* %rle_z_count, align 4
  %144 = add i32 %143, 1
  store i32 %144, i32* %rle_z_count, align 4
  %145 = icmp eq i32 %144, 138
  br i1 %145, label %146, label %230

; <label>:146                                     ; preds = %142
  %147 = load i32, i32* %rle_z_count, align 4
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %149, label %229

; <label>:149                                     ; preds = %146
  %150 = load i32, i32* %rle_z_count, align 4
  %151 = icmp ult i32 %150, 3
  br i1 %151, label %152, label %176

; <label>:152                                     ; preds = %149
  %153 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %154 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %153, i32 0, i32 36
  %155 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %154, i64 0, i64 2
  %156 = getelementptr inbounds [288 x i16], [288 x i16]* %155, i64 0, i64 0
  %157 = load i16, i16* %156, align 2
  %158 = zext i16 %157 to i32
  %159 = load i32, i32* %rle_z_count, align 4
  %160 = add i32 %158, %159
  %161 = trunc i32 %160 to i16
  %162 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %163 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %162, i32 0, i32 36
  %164 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %163, i64 0, i64 2
  %165 = getelementptr inbounds [288 x i16], [288 x i16]* %164, i64 0, i64 0
  store i16 %161, i16* %165, align 2
  br label %166

; <label>:166                                     ; preds = %170, %152
  %167 = load i32, i32* %rle_z_count, align 4
  %168 = add i32 %167, -1
  store i32 %168, i32* %rle_z_count, align 4
  %169 = icmp ne i32 %167, 0
  br i1 %169, label %170, label %175

; <label>:170                                     ; preds = %166
  %171 = load i32, i32* %num_packed_code_sizes, align 4
  %172 = add i32 %171, 1
  store i32 %172, i32* %num_packed_code_sizes, align 4
  %173 = zext i32 %171 to i64
  %174 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %173
  store i8 0, i8* %174, align 1
  br label %166

; <label>:175                                     ; preds = %166
  br label %228

; <label>:176                                     ; preds = %149
  %177 = load i32, i32* %rle_z_count, align 4
  %178 = icmp ule i32 %177, 10
  br i1 %178, label %179, label %203

; <label>:179                                     ; preds = %176
  %180 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %181 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %180, i32 0, i32 36
  %182 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %181, i64 0, i64 2
  %183 = getelementptr inbounds [288 x i16], [288 x i16]* %182, i64 0, i64 17
  %184 = load i16, i16* %183, align 2
  %185 = zext i16 %184 to i32
  %186 = add nsw i32 %185, 1
  %187 = trunc i32 %186 to i16
  %188 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %189 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %188, i32 0, i32 36
  %190 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %189, i64 0, i64 2
  %191 = getelementptr inbounds [288 x i16], [288 x i16]* %190, i64 0, i64 17
  store i16 %187, i16* %191, align 2
  %192 = load i32, i32* %num_packed_code_sizes, align 4
  %193 = add i32 %192, 1
  store i32 %193, i32* %num_packed_code_sizes, align 4
  %194 = zext i32 %192 to i64
  %195 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %194
  store i8 17, i8* %195, align 1
  %196 = load i32, i32* %rle_z_count, align 4
  %197 = sub i32 %196, 3
  %198 = trunc i32 %197 to i8
  %199 = load i32, i32* %num_packed_code_sizes, align 4
  %200 = add i32 %199, 1
  store i32 %200, i32* %num_packed_code_sizes, align 4
  %201 = zext i32 %199 to i64
  %202 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %201
  store i8 %198, i8* %202, align 1
  br label %227

; <label>:203                                     ; preds = %176
  %204 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %205 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %204, i32 0, i32 36
  %206 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %205, i64 0, i64 2
  %207 = getelementptr inbounds [288 x i16], [288 x i16]* %206, i64 0, i64 18
  %208 = load i16, i16* %207, align 2
  %209 = zext i16 %208 to i32
  %210 = add nsw i32 %209, 1
  %211 = trunc i32 %210 to i16
  %212 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %213 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %212, i32 0, i32 36
  %214 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %213, i64 0, i64 2
  %215 = getelementptr inbounds [288 x i16], [288 x i16]* %214, i64 0, i64 18
  store i16 %211, i16* %215, align 2
  %216 = load i32, i32* %num_packed_code_sizes, align 4
  %217 = add i32 %216, 1
  store i32 %217, i32* %num_packed_code_sizes, align 4
  %218 = zext i32 %216 to i64
  %219 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %218
  store i8 18, i8* %219, align 1
  %220 = load i32, i32* %rle_z_count, align 4
  %221 = sub i32 %220, 11
  %222 = trunc i32 %221 to i8
  %223 = load i32, i32* %num_packed_code_sizes, align 4
  %224 = add i32 %223, 1
  store i32 %224, i32* %num_packed_code_sizes, align 4
  %225 = zext i32 %223 to i64
  %226 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %225
  store i8 %222, i8* %226, align 1
  br label %227

; <label>:227                                     ; preds = %203, %179
  br label %228

; <label>:228                                     ; preds = %227, %175
  store i32 0, i32* %rle_z_count, align 4
  br label %229

; <label>:229                                     ; preds = %228, %146
  br label %230

; <label>:230                                     ; preds = %229, %142
  br label %469

; <label>:231                                     ; preds = %75
  %232 = load i32, i32* %rle_z_count, align 4
  %233 = icmp ne i32 %232, 0
  br i1 %233, label %234, label %314

; <label>:234                                     ; preds = %231
  %235 = load i32, i32* %rle_z_count, align 4
  %236 = icmp ult i32 %235, 3
  br i1 %236, label %237, label %261

; <label>:237                                     ; preds = %234
  %238 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %239 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %238, i32 0, i32 36
  %240 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %239, i64 0, i64 2
  %241 = getelementptr inbounds [288 x i16], [288 x i16]* %240, i64 0, i64 0
  %242 = load i16, i16* %241, align 2
  %243 = zext i16 %242 to i32
  %244 = load i32, i32* %rle_z_count, align 4
  %245 = add i32 %243, %244
  %246 = trunc i32 %245 to i16
  %247 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %248 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %247, i32 0, i32 36
  %249 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %248, i64 0, i64 2
  %250 = getelementptr inbounds [288 x i16], [288 x i16]* %249, i64 0, i64 0
  store i16 %246, i16* %250, align 2
  br label %251

; <label>:251                                     ; preds = %255, %237
  %252 = load i32, i32* %rle_z_count, align 4
  %253 = add i32 %252, -1
  store i32 %253, i32* %rle_z_count, align 4
  %254 = icmp ne i32 %252, 0
  br i1 %254, label %255, label %260

; <label>:255                                     ; preds = %251
  %256 = load i32, i32* %num_packed_code_sizes, align 4
  %257 = add i32 %256, 1
  store i32 %257, i32* %num_packed_code_sizes, align 4
  %258 = zext i32 %256 to i64
  %259 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %258
  store i8 0, i8* %259, align 1
  br label %251

; <label>:260                                     ; preds = %251
  br label %313

; <label>:261                                     ; preds = %234
  %262 = load i32, i32* %rle_z_count, align 4
  %263 = icmp ule i32 %262, 10
  br i1 %263, label %264, label %288

; <label>:264                                     ; preds = %261
  %265 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %266 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %265, i32 0, i32 36
  %267 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %266, i64 0, i64 2
  %268 = getelementptr inbounds [288 x i16], [288 x i16]* %267, i64 0, i64 17
  %269 = load i16, i16* %268, align 2
  %270 = zext i16 %269 to i32
  %271 = add nsw i32 %270, 1
  %272 = trunc i32 %271 to i16
  %273 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %274 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %273, i32 0, i32 36
  %275 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %274, i64 0, i64 2
  %276 = getelementptr inbounds [288 x i16], [288 x i16]* %275, i64 0, i64 17
  store i16 %272, i16* %276, align 2
  %277 = load i32, i32* %num_packed_code_sizes, align 4
  %278 = add i32 %277, 1
  store i32 %278, i32* %num_packed_code_sizes, align 4
  %279 = zext i32 %277 to i64
  %280 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %279
  store i8 17, i8* %280, align 1
  %281 = load i32, i32* %rle_z_count, align 4
  %282 = sub i32 %281, 3
  %283 = trunc i32 %282 to i8
  %284 = load i32, i32* %num_packed_code_sizes, align 4
  %285 = add i32 %284, 1
  store i32 %285, i32* %num_packed_code_sizes, align 4
  %286 = zext i32 %284 to i64
  %287 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %286
  store i8 %283, i8* %287, align 1
  br label %312

; <label>:288                                     ; preds = %261
  %289 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %290 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %289, i32 0, i32 36
  %291 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %290, i64 0, i64 2
  %292 = getelementptr inbounds [288 x i16], [288 x i16]* %291, i64 0, i64 18
  %293 = load i16, i16* %292, align 2
  %294 = zext i16 %293 to i32
  %295 = add nsw i32 %294, 1
  %296 = trunc i32 %295 to i16
  %297 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %298 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %297, i32 0, i32 36
  %299 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %298, i64 0, i64 2
  %300 = getelementptr inbounds [288 x i16], [288 x i16]* %299, i64 0, i64 18
  store i16 %296, i16* %300, align 2
  %301 = load i32, i32* %num_packed_code_sizes, align 4
  %302 = add i32 %301, 1
  store i32 %302, i32* %num_packed_code_sizes, align 4
  %303 = zext i32 %301 to i64
  %304 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %303
  store i8 18, i8* %304, align 1
  %305 = load i32, i32* %rle_z_count, align 4
  %306 = sub i32 %305, 11
  %307 = trunc i32 %306 to i8
  %308 = load i32, i32* %num_packed_code_sizes, align 4
  %309 = add i32 %308, 1
  store i32 %309, i32* %num_packed_code_sizes, align 4
  %310 = zext i32 %308 to i64
  %311 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %310
  store i8 %307, i8* %311, align 1
  br label %312

; <label>:312                                     ; preds = %288, %264
  br label %313

; <label>:313                                     ; preds = %312, %260
  store i32 0, i32* %rle_z_count, align 4
  br label %314

; <label>:314                                     ; preds = %313, %231
  %315 = load i8, i8* %code_size, align 1
  %316 = zext i8 %315 to i32
  %317 = load i8, i8* %prev_code_size, align 1
  %318 = zext i8 %317 to i32
  %319 = icmp ne i32 %316, %318
  br i1 %319, label %320, label %402

; <label>:320                                     ; preds = %314
  %321 = load i32, i32* %rle_repeat_count, align 4
  %322 = icmp ne i32 %321, 0
  br i1 %322, label %323, label %380

; <label>:323                                     ; preds = %320
  %324 = load i32, i32* %rle_repeat_count, align 4
  %325 = icmp ult i32 %324, 3
  br i1 %325, label %326, label %355

; <label>:326                                     ; preds = %323
  %327 = load i8, i8* %prev_code_size, align 1
  %328 = zext i8 %327 to i64
  %329 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %330 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %329, i32 0, i32 36
  %331 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %330, i64 0, i64 2
  %332 = getelementptr inbounds [288 x i16], [288 x i16]* %331, i64 0, i64 %328
  %333 = load i16, i16* %332, align 2
  %334 = zext i16 %333 to i32
  %335 = load i32, i32* %rle_repeat_count, align 4
  %336 = add i32 %334, %335
  %337 = trunc i32 %336 to i16
  %338 = load i8, i8* %prev_code_size, align 1
  %339 = zext i8 %338 to i64
  %340 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %341 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %340, i32 0, i32 36
  %342 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %341, i64 0, i64 2
  %343 = getelementptr inbounds [288 x i16], [288 x i16]* %342, i64 0, i64 %339
  store i16 %337, i16* %343, align 2
  br label %344

; <label>:344                                     ; preds = %348, %326
  %345 = load i32, i32* %rle_repeat_count, align 4
  %346 = add i32 %345, -1
  store i32 %346, i32* %rle_repeat_count, align 4
  %347 = icmp ne i32 %345, 0
  br i1 %347, label %348, label %354

; <label>:348                                     ; preds = %344
  %349 = load i8, i8* %prev_code_size, align 1
  %350 = load i32, i32* %num_packed_code_sizes, align 4
  %351 = add i32 %350, 1
  store i32 %351, i32* %num_packed_code_sizes, align 4
  %352 = zext i32 %350 to i64
  %353 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %352
  store i8 %349, i8* %353, align 1
  br label %344

; <label>:354                                     ; preds = %344
  br label %379

; <label>:355                                     ; preds = %323
  %356 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %357 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %356, i32 0, i32 36
  %358 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %357, i64 0, i64 2
  %359 = getelementptr inbounds [288 x i16], [288 x i16]* %358, i64 0, i64 16
  %360 = load i16, i16* %359, align 2
  %361 = zext i16 %360 to i32
  %362 = add nsw i32 %361, 1
  %363 = trunc i32 %362 to i16
  %364 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %365 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %364, i32 0, i32 36
  %366 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %365, i64 0, i64 2
  %367 = getelementptr inbounds [288 x i16], [288 x i16]* %366, i64 0, i64 16
  store i16 %363, i16* %367, align 2
  %368 = load i32, i32* %num_packed_code_sizes, align 4
  %369 = add i32 %368, 1
  store i32 %369, i32* %num_packed_code_sizes, align 4
  %370 = zext i32 %368 to i64
  %371 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %370
  store i8 16, i8* %371, align 1
  %372 = load i32, i32* %rle_repeat_count, align 4
  %373 = sub i32 %372, 3
  %374 = trunc i32 %373 to i8
  %375 = load i32, i32* %num_packed_code_sizes, align 4
  %376 = add i32 %375, 1
  store i32 %376, i32* %num_packed_code_sizes, align 4
  %377 = zext i32 %375 to i64
  %378 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %377
  store i8 %374, i8* %378, align 1
  br label %379

; <label>:379                                     ; preds = %355, %354
  store i32 0, i32* %rle_repeat_count, align 4
  br label %380

; <label>:380                                     ; preds = %379, %320
  %381 = load i8, i8* %code_size, align 1
  %382 = zext i8 %381 to i64
  %383 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %384 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %383, i32 0, i32 36
  %385 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %384, i64 0, i64 2
  %386 = getelementptr inbounds [288 x i16], [288 x i16]* %385, i64 0, i64 %382
  %387 = load i16, i16* %386, align 2
  %388 = zext i16 %387 to i32
  %389 = add nsw i32 %388, 1
  %390 = trunc i32 %389 to i16
  %391 = load i8, i8* %code_size, align 1
  %392 = zext i8 %391 to i64
  %393 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %394 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %393, i32 0, i32 36
  %395 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %394, i64 0, i64 2
  %396 = getelementptr inbounds [288 x i16], [288 x i16]* %395, i64 0, i64 %392
  store i16 %390, i16* %396, align 2
  %397 = load i8, i8* %code_size, align 1
  %398 = load i32, i32* %num_packed_code_sizes, align 4
  %399 = add i32 %398, 1
  store i32 %399, i32* %num_packed_code_sizes, align 4
  %400 = zext i32 %398 to i64
  %401 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %400
  store i8 %397, i8* %401, align 1
  br label %468

; <label>:402                                     ; preds = %314
  %403 = load i32, i32* %rle_repeat_count, align 4
  %404 = add i32 %403, 1
  store i32 %404, i32* %rle_repeat_count, align 4
  %405 = icmp eq i32 %404, 6
  br i1 %405, label %406, label %467

; <label>:406                                     ; preds = %402
  %407 = load i32, i32* %rle_repeat_count, align 4
  %408 = icmp ne i32 %407, 0
  br i1 %408, label %409, label %466

; <label>:409                                     ; preds = %406
  %410 = load i32, i32* %rle_repeat_count, align 4
  %411 = icmp ult i32 %410, 3
  br i1 %411, label %412, label %441

; <label>:412                                     ; preds = %409
  %413 = load i8, i8* %prev_code_size, align 1
  %414 = zext i8 %413 to i64
  %415 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %416 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %415, i32 0, i32 36
  %417 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %416, i64 0, i64 2
  %418 = getelementptr inbounds [288 x i16], [288 x i16]* %417, i64 0, i64 %414
  %419 = load i16, i16* %418, align 2
  %420 = zext i16 %419 to i32
  %421 = load i32, i32* %rle_repeat_count, align 4
  %422 = add i32 %420, %421
  %423 = trunc i32 %422 to i16
  %424 = load i8, i8* %prev_code_size, align 1
  %425 = zext i8 %424 to i64
  %426 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %427 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %426, i32 0, i32 36
  %428 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %427, i64 0, i64 2
  %429 = getelementptr inbounds [288 x i16], [288 x i16]* %428, i64 0, i64 %425
  store i16 %423, i16* %429, align 2
  br label %430

; <label>:430                                     ; preds = %434, %412
  %431 = load i32, i32* %rle_repeat_count, align 4
  %432 = add i32 %431, -1
  store i32 %432, i32* %rle_repeat_count, align 4
  %433 = icmp ne i32 %431, 0
  br i1 %433, label %434, label %440

; <label>:434                                     ; preds = %430
  %435 = load i8, i8* %prev_code_size, align 1
  %436 = load i32, i32* %num_packed_code_sizes, align 4
  %437 = add i32 %436, 1
  store i32 %437, i32* %num_packed_code_sizes, align 4
  %438 = zext i32 %436 to i64
  %439 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %438
  store i8 %435, i8* %439, align 1
  br label %430

; <label>:440                                     ; preds = %430
  br label %465

; <label>:441                                     ; preds = %409
  %442 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %443 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %442, i32 0, i32 36
  %444 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %443, i64 0, i64 2
  %445 = getelementptr inbounds [288 x i16], [288 x i16]* %444, i64 0, i64 16
  %446 = load i16, i16* %445, align 2
  %447 = zext i16 %446 to i32
  %448 = add nsw i32 %447, 1
  %449 = trunc i32 %448 to i16
  %450 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %451 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %450, i32 0, i32 36
  %452 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %451, i64 0, i64 2
  %453 = getelementptr inbounds [288 x i16], [288 x i16]* %452, i64 0, i64 16
  store i16 %449, i16* %453, align 2
  %454 = load i32, i32* %num_packed_code_sizes, align 4
  %455 = add i32 %454, 1
  store i32 %455, i32* %num_packed_code_sizes, align 4
  %456 = zext i32 %454 to i64
  %457 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %456
  store i8 16, i8* %457, align 1
  %458 = load i32, i32* %rle_repeat_count, align 4
  %459 = sub i32 %458, 3
  %460 = trunc i32 %459 to i8
  %461 = load i32, i32* %num_packed_code_sizes, align 4
  %462 = add i32 %461, 1
  store i32 %462, i32* %num_packed_code_sizes, align 4
  %463 = zext i32 %461 to i64
  %464 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %463
  store i8 %460, i8* %464, align 1
  br label %465

; <label>:465                                     ; preds = %441, %440
  store i32 0, i32* %rle_repeat_count, align 4
  br label %466

; <label>:466                                     ; preds = %465, %406
  br label %467

; <label>:467                                     ; preds = %466, %402
  br label %468

; <label>:468                                     ; preds = %467, %380
  br label %469

; <label>:469                                     ; preds = %468, %230
  %470 = load i8, i8* %code_size, align 1
  store i8 %470, i8* %prev_code_size, align 1
  br label %471

; <label>:471                                     ; preds = %469
  %472 = load i32, i32* %i, align 4
  %473 = add i32 %472, 1
  store i32 %473, i32* %i, align 4
  br label %71

; <label>:474                                     ; preds = %71
  %475 = load i32, i32* %rle_repeat_count, align 4
  %476 = icmp ne i32 %475, 0
  br i1 %476, label %477, label %538

; <label>:477                                     ; preds = %474
  %478 = load i32, i32* %rle_repeat_count, align 4
  %479 = icmp ne i32 %478, 0
  br i1 %479, label %480, label %537

; <label>:480                                     ; preds = %477
  %481 = load i32, i32* %rle_repeat_count, align 4
  %482 = icmp ult i32 %481, 3
  br i1 %482, label %483, label %512

; <label>:483                                     ; preds = %480
  %484 = load i8, i8* %prev_code_size, align 1
  %485 = zext i8 %484 to i64
  %486 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %487 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %486, i32 0, i32 36
  %488 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %487, i64 0, i64 2
  %489 = getelementptr inbounds [288 x i16], [288 x i16]* %488, i64 0, i64 %485
  %490 = load i16, i16* %489, align 2
  %491 = zext i16 %490 to i32
  %492 = load i32, i32* %rle_repeat_count, align 4
  %493 = add i32 %491, %492
  %494 = trunc i32 %493 to i16
  %495 = load i8, i8* %prev_code_size, align 1
  %496 = zext i8 %495 to i64
  %497 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %498 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %497, i32 0, i32 36
  %499 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %498, i64 0, i64 2
  %500 = getelementptr inbounds [288 x i16], [288 x i16]* %499, i64 0, i64 %496
  store i16 %494, i16* %500, align 2
  br label %501

; <label>:501                                     ; preds = %505, %483
  %502 = load i32, i32* %rle_repeat_count, align 4
  %503 = add i32 %502, -1
  store i32 %503, i32* %rle_repeat_count, align 4
  %504 = icmp ne i32 %502, 0
  br i1 %504, label %505, label %511

; <label>:505                                     ; preds = %501
  %506 = load i8, i8* %prev_code_size, align 1
  %507 = load i32, i32* %num_packed_code_sizes, align 4
  %508 = add i32 %507, 1
  store i32 %508, i32* %num_packed_code_sizes, align 4
  %509 = zext i32 %507 to i64
  %510 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %509
  store i8 %506, i8* %510, align 1
  br label %501

; <label>:511                                     ; preds = %501
  br label %536

; <label>:512                                     ; preds = %480
  %513 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %514 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %513, i32 0, i32 36
  %515 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %514, i64 0, i64 2
  %516 = getelementptr inbounds [288 x i16], [288 x i16]* %515, i64 0, i64 16
  %517 = load i16, i16* %516, align 2
  %518 = zext i16 %517 to i32
  %519 = add nsw i32 %518, 1
  %520 = trunc i32 %519 to i16
  %521 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %522 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %521, i32 0, i32 36
  %523 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %522, i64 0, i64 2
  %524 = getelementptr inbounds [288 x i16], [288 x i16]* %523, i64 0, i64 16
  store i16 %520, i16* %524, align 2
  %525 = load i32, i32* %num_packed_code_sizes, align 4
  %526 = add i32 %525, 1
  store i32 %526, i32* %num_packed_code_sizes, align 4
  %527 = zext i32 %525 to i64
  %528 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %527
  store i8 16, i8* %528, align 1
  %529 = load i32, i32* %rle_repeat_count, align 4
  %530 = sub i32 %529, 3
  %531 = trunc i32 %530 to i8
  %532 = load i32, i32* %num_packed_code_sizes, align 4
  %533 = add i32 %532, 1
  store i32 %533, i32* %num_packed_code_sizes, align 4
  %534 = zext i32 %532 to i64
  %535 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %534
  store i8 %531, i8* %535, align 1
  br label %536

; <label>:536                                     ; preds = %512, %511
  store i32 0, i32* %rle_repeat_count, align 4
  br label %537

; <label>:537                                     ; preds = %536, %477
  br label %622

; <label>:538                                     ; preds = %474
  %539 = load i32, i32* %rle_z_count, align 4
  %540 = icmp ne i32 %539, 0
  br i1 %540, label %541, label %621

; <label>:541                                     ; preds = %538
  %542 = load i32, i32* %rle_z_count, align 4
  %543 = icmp ult i32 %542, 3
  br i1 %543, label %544, label %568

; <label>:544                                     ; preds = %541
  %545 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %546 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %545, i32 0, i32 36
  %547 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %546, i64 0, i64 2
  %548 = getelementptr inbounds [288 x i16], [288 x i16]* %547, i64 0, i64 0
  %549 = load i16, i16* %548, align 2
  %550 = zext i16 %549 to i32
  %551 = load i32, i32* %rle_z_count, align 4
  %552 = add i32 %550, %551
  %553 = trunc i32 %552 to i16
  %554 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %555 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %554, i32 0, i32 36
  %556 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %555, i64 0, i64 2
  %557 = getelementptr inbounds [288 x i16], [288 x i16]* %556, i64 0, i64 0
  store i16 %553, i16* %557, align 2
  br label %558

; <label>:558                                     ; preds = %562, %544
  %559 = load i32, i32* %rle_z_count, align 4
  %560 = add i32 %559, -1
  store i32 %560, i32* %rle_z_count, align 4
  %561 = icmp ne i32 %559, 0
  br i1 %561, label %562, label %567

; <label>:562                                     ; preds = %558
  %563 = load i32, i32* %num_packed_code_sizes, align 4
  %564 = add i32 %563, 1
  store i32 %564, i32* %num_packed_code_sizes, align 4
  %565 = zext i32 %563 to i64
  %566 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %565
  store i8 0, i8* %566, align 1
  br label %558

; <label>:567                                     ; preds = %558
  br label %620

; <label>:568                                     ; preds = %541
  %569 = load i32, i32* %rle_z_count, align 4
  %570 = icmp ule i32 %569, 10
  br i1 %570, label %571, label %595

; <label>:571                                     ; preds = %568
  %572 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %573 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %572, i32 0, i32 36
  %574 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %573, i64 0, i64 2
  %575 = getelementptr inbounds [288 x i16], [288 x i16]* %574, i64 0, i64 17
  %576 = load i16, i16* %575, align 2
  %577 = zext i16 %576 to i32
  %578 = add nsw i32 %577, 1
  %579 = trunc i32 %578 to i16
  %580 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %581 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %580, i32 0, i32 36
  %582 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %581, i64 0, i64 2
  %583 = getelementptr inbounds [288 x i16], [288 x i16]* %582, i64 0, i64 17
  store i16 %579, i16* %583, align 2
  %584 = load i32, i32* %num_packed_code_sizes, align 4
  %585 = add i32 %584, 1
  store i32 %585, i32* %num_packed_code_sizes, align 4
  %586 = zext i32 %584 to i64
  %587 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %586
  store i8 17, i8* %587, align 1
  %588 = load i32, i32* %rle_z_count, align 4
  %589 = sub i32 %588, 3
  %590 = trunc i32 %589 to i8
  %591 = load i32, i32* %num_packed_code_sizes, align 4
  %592 = add i32 %591, 1
  store i32 %592, i32* %num_packed_code_sizes, align 4
  %593 = zext i32 %591 to i64
  %594 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %593
  store i8 %590, i8* %594, align 1
  br label %619

; <label>:595                                     ; preds = %568
  %596 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %597 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %596, i32 0, i32 36
  %598 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %597, i64 0, i64 2
  %599 = getelementptr inbounds [288 x i16], [288 x i16]* %598, i64 0, i64 18
  %600 = load i16, i16* %599, align 2
  %601 = zext i16 %600 to i32
  %602 = add nsw i32 %601, 1
  %603 = trunc i32 %602 to i16
  %604 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %605 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %604, i32 0, i32 36
  %606 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %605, i64 0, i64 2
  %607 = getelementptr inbounds [288 x i16], [288 x i16]* %606, i64 0, i64 18
  store i16 %603, i16* %607, align 2
  %608 = load i32, i32* %num_packed_code_sizes, align 4
  %609 = add i32 %608, 1
  store i32 %609, i32* %num_packed_code_sizes, align 4
  %610 = zext i32 %608 to i64
  %611 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %610
  store i8 18, i8* %611, align 1
  %612 = load i32, i32* %rle_z_count, align 4
  %613 = sub i32 %612, 11
  %614 = trunc i32 %613 to i8
  %615 = load i32, i32* %num_packed_code_sizes, align 4
  %616 = add i32 %615, 1
  store i32 %616, i32* %num_packed_code_sizes, align 4
  %617 = zext i32 %615 to i64
  %618 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %617
  store i8 %614, i8* %618, align 1
  br label %619

; <label>:619                                     ; preds = %595, %571
  br label %620

; <label>:620                                     ; preds = %619, %567
  store i32 0, i32* %rle_z_count, align 4
  br label %621

; <label>:621                                     ; preds = %620, %538
  br label %622

; <label>:622                                     ; preds = %621, %537
  %623 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  call void @tdefl_optimize_huffman_table(%struct.tdefl_compressor* %623, i32 2, i32 19, i32 7, i32 0)
  br label %624

; <label>:624                                     ; preds = %622
  store i32 2, i32* %bits, align 4
  store i32 2, i32* %len, align 4
  %625 = load i32, i32* %bits, align 4
  %626 = load i32, i32* %len, align 4
  %627 = shl i32 1, %626
  %628 = sub i32 %627, 1
  %629 = icmp ule i32 %625, %628
  br i1 %629, label %630, label %631

; <label>:630                                     ; preds = %624
  br label %633

; <label>:631                                     ; preds = %624
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 1981, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.tdefl_start_dynamic_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %633

; <label>:633                                     ; preds = %632, %630
  %634 = load i32, i32* %bits, align 4
  %635 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %636 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %635, i32 0, i32 16
  %637 = load i32, i32* %636, align 4
  %638 = shl i32 %634, %637
  %639 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %640 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %639, i32 0, i32 17
  %641 = load i32, i32* %640, align 8
  %642 = or i32 %641, %638
  store i32 %642, i32* %640, align 8
  %643 = load i32, i32* %len, align 4
  %644 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %645 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %644, i32 0, i32 16
  %646 = load i32, i32* %645, align 4
  %647 = add i32 %646, %643
  store i32 %647, i32* %645, align 4
  br label %648

; <label>:648                                     ; preds = %670, %633
  %649 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %650 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %649, i32 0, i32 16
  %651 = load i32, i32* %650, align 4
  %652 = icmp uge i32 %651, 8
  br i1 %652, label %653, label %679

; <label>:653                                     ; preds = %648
  %654 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %655 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %654, i32 0, i32 11
  %656 = load i8*, i8** %655, align 8
  %657 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %658 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %657, i32 0, i32 12
  %659 = load i8*, i8** %658, align 8
  %660 = icmp ult i8* %656, %659
  br i1 %660, label %661, label %670

; <label>:661                                     ; preds = %653
  %662 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %663 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %662, i32 0, i32 17
  %664 = load i32, i32* %663, align 8
  %665 = trunc i32 %664 to i8
  %666 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %667 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %666, i32 0, i32 11
  %668 = load i8*, i8** %667, align 8
  %669 = getelementptr inbounds i8, i8* %668, i32 1
  store i8* %669, i8** %667, align 8
  store i8 %665, i8* %668, align 1
  br label %670

; <label>:670                                     ; preds = %661, %653
  %671 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %672 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %671, i32 0, i32 17
  %673 = load i32, i32* %672, align 8
  %674 = lshr i32 %673, 8
  store i32 %674, i32* %672, align 8
  %675 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %676 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %675, i32 0, i32 16
  %677 = load i32, i32* %676, align 4
  %678 = sub i32 %677, 8
  store i32 %678, i32* %676, align 4
  br label %648

; <label>:679                                     ; preds = %648
  br label %680

; <label>:680                                     ; preds = %679
  br label %681

; <label>:681                                     ; preds = %680
  %682 = load i32, i32* %num_lit_codes, align 4
  %683 = sub nsw i32 %682, 257
  store i32 %683, i32* %bits1, align 4
  store i32 5, i32* %len2, align 4
  %684 = load i32, i32* %bits1, align 4
  %685 = load i32, i32* %len2, align 4
  %686 = shl i32 1, %685
  %687 = sub i32 %686, 1
  %688 = icmp ule i32 %684, %687
  br i1 %688, label %689, label %690

; <label>:689                                     ; preds = %681
  br label %692

; <label>:690                                     ; preds = %681
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 1983, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.tdefl_start_dynamic_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %692

; <label>:692                                     ; preds = %691, %689
  %693 = load i32, i32* %bits1, align 4
  %694 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %695 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %694, i32 0, i32 16
  %696 = load i32, i32* %695, align 4
  %697 = shl i32 %693, %696
  %698 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %699 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %698, i32 0, i32 17
  %700 = load i32, i32* %699, align 8
  %701 = or i32 %700, %697
  store i32 %701, i32* %699, align 8
  %702 = load i32, i32* %len2, align 4
  %703 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %704 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %703, i32 0, i32 16
  %705 = load i32, i32* %704, align 4
  %706 = add i32 %705, %702
  store i32 %706, i32* %704, align 4
  br label %707

; <label>:707                                     ; preds = %729, %692
  %708 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %709 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %708, i32 0, i32 16
  %710 = load i32, i32* %709, align 4
  %711 = icmp uge i32 %710, 8
  br i1 %711, label %712, label %738

; <label>:712                                     ; preds = %707
  %713 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %714 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %713, i32 0, i32 11
  %715 = load i8*, i8** %714, align 8
  %716 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %717 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %716, i32 0, i32 12
  %718 = load i8*, i8** %717, align 8
  %719 = icmp ult i8* %715, %718
  br i1 %719, label %720, label %729

; <label>:720                                     ; preds = %712
  %721 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %722 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %721, i32 0, i32 17
  %723 = load i32, i32* %722, align 8
  %724 = trunc i32 %723 to i8
  %725 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %726 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %725, i32 0, i32 11
  %727 = load i8*, i8** %726, align 8
  %728 = getelementptr inbounds i8, i8* %727, i32 1
  store i8* %728, i8** %726, align 8
  store i8 %724, i8* %727, align 1
  br label %729

; <label>:729                                     ; preds = %720, %712
  %730 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %731 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %730, i32 0, i32 17
  %732 = load i32, i32* %731, align 8
  %733 = lshr i32 %732, 8
  store i32 %733, i32* %731, align 8
  %734 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %735 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %734, i32 0, i32 16
  %736 = load i32, i32* %735, align 4
  %737 = sub i32 %736, 8
  store i32 %737, i32* %735, align 4
  br label %707

; <label>:738                                     ; preds = %707
  br label %739

; <label>:739                                     ; preds = %738
  br label %740

; <label>:740                                     ; preds = %739
  %741 = load i32, i32* %num_dist_codes, align 4
  %742 = sub nsw i32 %741, 1
  store i32 %742, i32* %bits3, align 4
  store i32 5, i32* %len4, align 4
  %743 = load i32, i32* %bits3, align 4
  %744 = load i32, i32* %len4, align 4
  %745 = shl i32 1, %744
  %746 = sub i32 %745, 1
  %747 = icmp ule i32 %743, %746
  br i1 %747, label %748, label %749

; <label>:748                                     ; preds = %740
  br label %751

; <label>:749                                     ; preds = %740
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 1984, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.tdefl_start_dynamic_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %751

; <label>:751                                     ; preds = %750, %748
  %752 = load i32, i32* %bits3, align 4
  %753 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %754 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %753, i32 0, i32 16
  %755 = load i32, i32* %754, align 4
  %756 = shl i32 %752, %755
  %757 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %758 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %757, i32 0, i32 17
  %759 = load i32, i32* %758, align 8
  %760 = or i32 %759, %756
  store i32 %760, i32* %758, align 8
  %761 = load i32, i32* %len4, align 4
  %762 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %763 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %762, i32 0, i32 16
  %764 = load i32, i32* %763, align 4
  %765 = add i32 %764, %761
  store i32 %765, i32* %763, align 4
  br label %766

; <label>:766                                     ; preds = %788, %751
  %767 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %768 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %767, i32 0, i32 16
  %769 = load i32, i32* %768, align 4
  %770 = icmp uge i32 %769, 8
  br i1 %770, label %771, label %797

; <label>:771                                     ; preds = %766
  %772 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %773 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %772, i32 0, i32 11
  %774 = load i8*, i8** %773, align 8
  %775 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %776 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %775, i32 0, i32 12
  %777 = load i8*, i8** %776, align 8
  %778 = icmp ult i8* %774, %777
  br i1 %778, label %779, label %788

; <label>:779                                     ; preds = %771
  %780 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %781 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %780, i32 0, i32 17
  %782 = load i32, i32* %781, align 8
  %783 = trunc i32 %782 to i8
  %784 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %785 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %784, i32 0, i32 11
  %786 = load i8*, i8** %785, align 8
  %787 = getelementptr inbounds i8, i8* %786, i32 1
  store i8* %787, i8** %785, align 8
  store i8 %783, i8* %786, align 1
  br label %788

; <label>:788                                     ; preds = %779, %771
  %789 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %790 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %789, i32 0, i32 17
  %791 = load i32, i32* %790, align 8
  %792 = lshr i32 %791, 8
  store i32 %792, i32* %790, align 8
  %793 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %794 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %793, i32 0, i32 16
  %795 = load i32, i32* %794, align 4
  %796 = sub i32 %795, 8
  store i32 %796, i32* %794, align 4
  br label %766

; <label>:797                                     ; preds = %766
  br label %798

; <label>:798                                     ; preds = %797
  store i32 18, i32* %num_bit_lengths, align 4
  br label %799

; <label>:799                                     ; preds = %816, %798
  %800 = load i32, i32* %num_bit_lengths, align 4
  %801 = icmp sge i32 %800, 0
  br i1 %801, label %802, label %819

; <label>:802                                     ; preds = %799
  %803 = load i32, i32* %num_bit_lengths, align 4
  %804 = sext i32 %803 to i64
  %805 = getelementptr inbounds [19 x i8], [19 x i8]* @s_tdefl_packed_code_size_syms_swizzle, i64 0, i64 %804
  %806 = load i8, i8* %805, align 1
  %807 = zext i8 %806 to i64
  %808 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %809 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %808, i32 0, i32 38
  %810 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %809, i64 0, i64 2
  %811 = getelementptr inbounds [288 x i8], [288 x i8]* %810, i64 0, i64 %807
  %812 = load i8, i8* %811, align 1
  %813 = icmp ne i8 %812, 0
  br i1 %813, label %814, label %815

; <label>:814                                     ; preds = %802
  br label %819

; <label>:815                                     ; preds = %802
  br label %816

; <label>:816                                     ; preds = %815
  %817 = load i32, i32* %num_bit_lengths, align 4
  %818 = add nsw i32 %817, -1
  store i32 %818, i32* %num_bit_lengths, align 4
  br label %799

; <label>:819                                     ; preds = %814, %799
  %820 = load i32, i32* %num_bit_lengths, align 4
  %821 = add nsw i32 %820, 1
  %822 = icmp sgt i32 4, %821
  br i1 %822, label %823, label %824

; <label>:823                                     ; preds = %819
  br label %827

; <label>:824                                     ; preds = %819
  %825 = load i32, i32* %num_bit_lengths, align 4
  %826 = add nsw i32 %825, 1
  br label %827

; <label>:827                                     ; preds = %824, %823
  %828 = phi i32 [ 4, %823 ], [ %826, %824 ]
  store i32 %828, i32* %num_bit_lengths, align 4
  br label %829

; <label>:829                                     ; preds = %827
  %830 = load i32, i32* %num_bit_lengths, align 4
  %831 = sub nsw i32 %830, 4
  store i32 %831, i32* %bits5, align 4
  store i32 4, i32* %len6, align 4
  %832 = load i32, i32* %bits5, align 4
  %833 = load i32, i32* %len6, align 4
  %834 = shl i32 1, %833
  %835 = sub i32 %834, 1
  %836 = icmp ule i32 %832, %835
  br i1 %836, label %837, label %838

; <label>:837                                     ; preds = %829
  br label %840

; <label>:838                                     ; preds = %829
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 1987, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.tdefl_start_dynamic_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %840

; <label>:840                                     ; preds = %839, %837
  %841 = load i32, i32* %bits5, align 4
  %842 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %843 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %842, i32 0, i32 16
  %844 = load i32, i32* %843, align 4
  %845 = shl i32 %841, %844
  %846 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %847 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %846, i32 0, i32 17
  %848 = load i32, i32* %847, align 8
  %849 = or i32 %848, %845
  store i32 %849, i32* %847, align 8
  %850 = load i32, i32* %len6, align 4
  %851 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %852 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %851, i32 0, i32 16
  %853 = load i32, i32* %852, align 4
  %854 = add i32 %853, %850
  store i32 %854, i32* %852, align 4
  br label %855

; <label>:855                                     ; preds = %877, %840
  %856 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %857 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %856, i32 0, i32 16
  %858 = load i32, i32* %857, align 4
  %859 = icmp uge i32 %858, 8
  br i1 %859, label %860, label %886

; <label>:860                                     ; preds = %855
  %861 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %862 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %861, i32 0, i32 11
  %863 = load i8*, i8** %862, align 8
  %864 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %865 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %864, i32 0, i32 12
  %866 = load i8*, i8** %865, align 8
  %867 = icmp ult i8* %863, %866
  br i1 %867, label %868, label %877

; <label>:868                                     ; preds = %860
  %869 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %870 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %869, i32 0, i32 17
  %871 = load i32, i32* %870, align 8
  %872 = trunc i32 %871 to i8
  %873 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %874 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %873, i32 0, i32 11
  %875 = load i8*, i8** %874, align 8
  %876 = getelementptr inbounds i8, i8* %875, i32 1
  store i8* %876, i8** %874, align 8
  store i8 %872, i8* %875, align 1
  br label %877

; <label>:877                                     ; preds = %868, %860
  %878 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %879 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %878, i32 0, i32 17
  %880 = load i32, i32* %879, align 8
  %881 = lshr i32 %880, 8
  store i32 %881, i32* %879, align 8
  %882 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %883 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %882, i32 0, i32 16
  %884 = load i32, i32* %883, align 4
  %885 = sub i32 %884, 8
  store i32 %885, i32* %883, align 4
  br label %855

; <label>:886                                     ; preds = %855
  br label %887

; <label>:887                                     ; preds = %886
  store i32 0, i32* %i, align 4
  br label %888

; <label>:888                                     ; preds = %961, %887
  %889 = load i32, i32* %i, align 4
  %890 = load i32, i32* %num_bit_lengths, align 4
  %891 = icmp slt i32 %889, %890
  br i1 %891, label %892, label %964

; <label>:892                                     ; preds = %888
  br label %893

; <label>:893                                     ; preds = %892
  %894 = load i32, i32* %i, align 4
  %895 = zext i32 %894 to i64
  %896 = getelementptr inbounds [19 x i8], [19 x i8]* @s_tdefl_packed_code_size_syms_swizzle, i64 0, i64 %895
  %897 = load i8, i8* %896, align 1
  %898 = zext i8 %897 to i64
  %899 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %900 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %899, i32 0, i32 38
  %901 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %900, i64 0, i64 2
  %902 = getelementptr inbounds [288 x i8], [288 x i8]* %901, i64 0, i64 %898
  %903 = load i8, i8* %902, align 1
  %904 = zext i8 %903 to i32
  store i32 %904, i32* %bits7, align 4
  store i32 3, i32* %len8, align 4
  %905 = load i32, i32* %bits7, align 4
  %906 = load i32, i32* %len8, align 4
  %907 = shl i32 1, %906
  %908 = sub i32 %907, 1
  %909 = icmp ule i32 %905, %908
  br i1 %909, label %910, label %911

; <label>:910                                     ; preds = %893
  br label %913

; <label>:911                                     ; preds = %893
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 1988, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.tdefl_start_dynamic_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %913

; <label>:913                                     ; preds = %912, %910
  %914 = load i32, i32* %bits7, align 4
  %915 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %916 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %915, i32 0, i32 16
  %917 = load i32, i32* %916, align 4
  %918 = shl i32 %914, %917
  %919 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %920 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %919, i32 0, i32 17
  %921 = load i32, i32* %920, align 8
  %922 = or i32 %921, %918
  store i32 %922, i32* %920, align 8
  %923 = load i32, i32* %len8, align 4
  %924 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %925 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %924, i32 0, i32 16
  %926 = load i32, i32* %925, align 4
  %927 = add i32 %926, %923
  store i32 %927, i32* %925, align 4
  br label %928

; <label>:928                                     ; preds = %950, %913
  %929 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %930 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %929, i32 0, i32 16
  %931 = load i32, i32* %930, align 4
  %932 = icmp uge i32 %931, 8
  br i1 %932, label %933, label %959

; <label>:933                                     ; preds = %928
  %934 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %935 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %934, i32 0, i32 11
  %936 = load i8*, i8** %935, align 8
  %937 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %938 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %937, i32 0, i32 12
  %939 = load i8*, i8** %938, align 8
  %940 = icmp ult i8* %936, %939
  br i1 %940, label %941, label %950

; <label>:941                                     ; preds = %933
  %942 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %943 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %942, i32 0, i32 17
  %944 = load i32, i32* %943, align 8
  %945 = trunc i32 %944 to i8
  %946 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %947 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %946, i32 0, i32 11
  %948 = load i8*, i8** %947, align 8
  %949 = getelementptr inbounds i8, i8* %948, i32 1
  store i8* %949, i8** %947, align 8
  store i8 %945, i8* %948, align 1
  br label %950

; <label>:950                                     ; preds = %941, %933
  %951 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %952 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %951, i32 0, i32 17
  %953 = load i32, i32* %952, align 8
  %954 = lshr i32 %953, 8
  store i32 %954, i32* %952, align 8
  %955 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %956 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %955, i32 0, i32 16
  %957 = load i32, i32* %956, align 4
  %958 = sub i32 %957, 8
  store i32 %958, i32* %956, align 4
  br label %928

; <label>:959                                     ; preds = %928
  br label %960

; <label>:960                                     ; preds = %959
  br label %961

; <label>:961                                     ; preds = %960
  %962 = load i32, i32* %i, align 4
  %963 = add i32 %962, 1
  store i32 %963, i32* %i, align 4
  br label %888

; <label>:964                                     ; preds = %888
  store i32 0, i32* %packed_code_sizes_index, align 4
  br label %965

; <label>:965                                     ; preds = %1127, %964
  %966 = load i32, i32* %packed_code_sizes_index, align 4
  %967 = load i32, i32* %num_packed_code_sizes, align 4
  %968 = icmp ult i32 %966, %967
  br i1 %968, label %969, label %1128

; <label>:969                                     ; preds = %965
  %970 = load i32, i32* %packed_code_sizes_index, align 4
  %971 = add i32 %970, 1
  store i32 %971, i32* %packed_code_sizes_index, align 4
  %972 = zext i32 %970 to i64
  %973 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %972
  %974 = load i8, i8* %973, align 1
  %975 = zext i8 %974 to i32
  store i32 %975, i32* %code, align 4
  %976 = load i32, i32* %code, align 4
  %977 = icmp ult i32 %976, 19
  br i1 %977, label %978, label %979

; <label>:978                                     ; preds = %969
  br label %981

; <label>:979                                     ; preds = %969
  call void @__assert_fail(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 1992, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.tdefl_start_dynamic_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %981

; <label>:981                                     ; preds = %980, %978
  br label %982

; <label>:982                                     ; preds = %981
  %983 = load i32, i32* %code, align 4
  %984 = zext i32 %983 to i64
  %985 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %986 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %985, i32 0, i32 37
  %987 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %986, i64 0, i64 2
  %988 = getelementptr inbounds [288 x i16], [288 x i16]* %987, i64 0, i64 %984
  %989 = load i16, i16* %988, align 2
  %990 = zext i16 %989 to i32
  store i32 %990, i32* %bits9, align 4
  %991 = load i32, i32* %code, align 4
  %992 = zext i32 %991 to i64
  %993 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %994 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %993, i32 0, i32 38
  %995 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %994, i64 0, i64 2
  %996 = getelementptr inbounds [288 x i8], [288 x i8]* %995, i64 0, i64 %992
  %997 = load i8, i8* %996, align 1
  %998 = zext i8 %997 to i32
  store i32 %998, i32* %len10, align 4
  %999 = load i32, i32* %bits9, align 4
  %1000 = load i32, i32* %len10, align 4
  %1001 = shl i32 1, %1000
  %1002 = sub i32 %1001, 1
  %1003 = icmp ule i32 %999, %1002
  br i1 %1003, label %1004, label %1005

; <label>:1004                                    ; preds = %982
  br label %1007

; <label>:1005                                    ; preds = %982
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 1993, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.tdefl_start_dynamic_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %1007

; <label>:1007                                    ; preds = %1006, %1004
  %1008 = load i32, i32* %bits9, align 4
  %1009 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1010 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1009, i32 0, i32 16
  %1011 = load i32, i32* %1010, align 4
  %1012 = shl i32 %1008, %1011
  %1013 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1014 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1013, i32 0, i32 17
  %1015 = load i32, i32* %1014, align 8
  %1016 = or i32 %1015, %1012
  store i32 %1016, i32* %1014, align 8
  %1017 = load i32, i32* %len10, align 4
  %1018 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1019 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1018, i32 0, i32 16
  %1020 = load i32, i32* %1019, align 4
  %1021 = add i32 %1020, %1017
  store i32 %1021, i32* %1019, align 4
  br label %1022

; <label>:1022                                    ; preds = %1044, %1007
  %1023 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1024 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1023, i32 0, i32 16
  %1025 = load i32, i32* %1024, align 4
  %1026 = icmp uge i32 %1025, 8
  br i1 %1026, label %1027, label %1053

; <label>:1027                                    ; preds = %1022
  %1028 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1029 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1028, i32 0, i32 11
  %1030 = load i8*, i8** %1029, align 8
  %1031 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1032 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1031, i32 0, i32 12
  %1033 = load i8*, i8** %1032, align 8
  %1034 = icmp ult i8* %1030, %1033
  br i1 %1034, label %1035, label %1044

; <label>:1035                                    ; preds = %1027
  %1036 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1037 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1036, i32 0, i32 17
  %1038 = load i32, i32* %1037, align 8
  %1039 = trunc i32 %1038 to i8
  %1040 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1041 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1040, i32 0, i32 11
  %1042 = load i8*, i8** %1041, align 8
  %1043 = getelementptr inbounds i8, i8* %1042, i32 1
  store i8* %1043, i8** %1041, align 8
  store i8 %1039, i8* %1042, align 1
  br label %1044

; <label>:1044                                    ; preds = %1035, %1027
  %1045 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1046 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1045, i32 0, i32 17
  %1047 = load i32, i32* %1046, align 8
  %1048 = lshr i32 %1047, 8
  store i32 %1048, i32* %1046, align 8
  %1049 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1050 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1049, i32 0, i32 16
  %1051 = load i32, i32* %1050, align 4
  %1052 = sub i32 %1051, 8
  store i32 %1052, i32* %1050, align 4
  br label %1022

; <label>:1053                                    ; preds = %1022
  br label %1054

; <label>:1054                                    ; preds = %1053
  %1055 = load i32, i32* %code, align 4
  %1056 = icmp uge i32 %1055, 16
  br i1 %1056, label %1057, label %1127

; <label>:1057                                    ; preds = %1054
  br label %1058

; <label>:1058                                    ; preds = %1057
  %1059 = load i32, i32* %packed_code_sizes_index, align 4
  %1060 = add i32 %1059, 1
  store i32 %1060, i32* %packed_code_sizes_index, align 4
  %1061 = zext i32 %1059 to i64
  %1062 = getelementptr inbounds [320 x i8], [320 x i8]* %packed_code_sizes, i64 0, i64 %1061
  %1063 = load i8, i8* %1062, align 1
  %1064 = zext i8 %1063 to i32
  store i32 %1064, i32* %bits11, align 4
  %1065 = load i32, i32* %code, align 4
  %1066 = sub i32 %1065, 16
  %1067 = zext i32 %1066 to i64
  %1068 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.12, i64 0, i64 %1067
  %1069 = load i8, i8* %1068, align 1
  %1070 = sext i8 %1069 to i32
  store i32 %1070, i32* %len12, align 4
  %1071 = load i32, i32* %bits11, align 4
  %1072 = load i32, i32* %len12, align 4
  %1073 = shl i32 1, %1072
  %1074 = sub i32 %1073, 1
  %1075 = icmp ule i32 %1071, %1074
  br i1 %1075, label %1076, label %1077

; <label>:1076                                    ; preds = %1058
  br label %1079

; <label>:1077                                    ; preds = %1058
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 1994, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.tdefl_start_dynamic_block, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %1079

; <label>:1079                                    ; preds = %1078, %1076
  %1080 = load i32, i32* %bits11, align 4
  %1081 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1082 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1081, i32 0, i32 16
  %1083 = load i32, i32* %1082, align 4
  %1084 = shl i32 %1080, %1083
  %1085 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1086 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1085, i32 0, i32 17
  %1087 = load i32, i32* %1086, align 8
  %1088 = or i32 %1087, %1084
  store i32 %1088, i32* %1086, align 8
  %1089 = load i32, i32* %len12, align 4
  %1090 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1091 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1090, i32 0, i32 16
  %1092 = load i32, i32* %1091, align 4
  %1093 = add i32 %1092, %1089
  store i32 %1093, i32* %1091, align 4
  br label %1094

; <label>:1094                                    ; preds = %1116, %1079
  %1095 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1096 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1095, i32 0, i32 16
  %1097 = load i32, i32* %1096, align 4
  %1098 = icmp uge i32 %1097, 8
  br i1 %1098, label %1099, label %1125

; <label>:1099                                    ; preds = %1094
  %1100 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1101 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1100, i32 0, i32 11
  %1102 = load i8*, i8** %1101, align 8
  %1103 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1104 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1103, i32 0, i32 12
  %1105 = load i8*, i8** %1104, align 8
  %1106 = icmp ult i8* %1102, %1105
  br i1 %1106, label %1107, label %1116

; <label>:1107                                    ; preds = %1099
  %1108 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1109 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1108, i32 0, i32 17
  %1110 = load i32, i32* %1109, align 8
  %1111 = trunc i32 %1110 to i8
  %1112 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1113 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1112, i32 0, i32 11
  %1114 = load i8*, i8** %1113, align 8
  %1115 = getelementptr inbounds i8, i8* %1114, i32 1
  store i8* %1115, i8** %1113, align 8
  store i8 %1111, i8* %1114, align 1
  br label %1116

; <label>:1116                                    ; preds = %1107, %1099
  %1117 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1118 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1117, i32 0, i32 17
  %1119 = load i32, i32* %1118, align 8
  %1120 = lshr i32 %1119, 8
  store i32 %1120, i32* %1118, align 8
  %1121 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %1122 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %1121, i32 0, i32 16
  %1123 = load i32, i32* %1122, align 4
  %1124 = sub i32 %1123, 8
  store i32 %1124, i32* %1122, align 4
  br label %1094

; <label>:1125                                    ; preds = %1094
  br label %1126

; <label>:1126                                    ; preds = %1125
  br label %1127

; <label>:1127                                    ; preds = %1126, %1054
  br label %965

; <label>:1128                                    ; preds = %965
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @tdefl_compress_lz_codes(%struct.tdefl_compressor* %d) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.tdefl_compressor*, align 8
  %flags = alloca i32, align 4
  %pLZ_codes = alloca i8*, align 8
  %pOutput_buf = alloca i8*, align 8
  %pLZ_code_buf_end = alloca i8*, align 8
  %bit_buffer = alloca i64, align 8
  %bits_in = alloca i32, align 4
  %s0 = alloca i32, align 4
  %s1 = alloca i32, align 4
  %n0 = alloca i32, align 4
  %n1 = alloca i32, align 4
  %sym = alloca i32, align 4
  %num_extra_bits = alloca i32, align 4
  %match_len = alloca i32, align 4
  %match_dist = alloca i32, align 4
  %lit = alloca i32, align 4
  %n = alloca i32, align 4
  %bits = alloca i32, align 4
  %len = alloca i32, align 4
  %bits1 = alloca i32, align 4
  %len2 = alloca i32, align 4
  store %struct.tdefl_compressor* %d, %struct.tdefl_compressor** %2, align 8
  %3 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %4 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %3, i32 0, i32 11
  %5 = load i8*, i8** %4, align 8
  store i8* %5, i8** %pOutput_buf, align 8
  %6 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %7 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %6, i32 0, i32 9
  %8 = load i8*, i8** %7, align 8
  store i8* %8, i8** %pLZ_code_buf_end, align 8
  %9 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %10 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %9, i32 0, i32 17
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %bit_buffer, align 8
  %13 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %14 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %13, i32 0, i32 16
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %bits_in, align 4
  store i32 1, i32* %flags, align 4
  %16 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %17 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %16, i32 0, i32 39
  %18 = getelementptr inbounds [65536 x i8], [65536 x i8]* %17, i32 0, i32 0
  store i8* %18, i8** %pLZ_codes, align 8
  br label %19

; <label>:19                                      ; preds = %372, %0
  %20 = load i8*, i8** %pLZ_codes, align 8
  %21 = load i8*, i8** %pLZ_code_buf_end, align 8
  %22 = icmp ult i8* %20, %21
  br i1 %22, label %23, label %375

; <label>:23                                      ; preds = %19
  %24 = load i32, i32* %flags, align 4
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %32

; <label>:26                                      ; preds = %23
  %27 = load i8*, i8** %pLZ_codes, align 8
  %28 = getelementptr inbounds i8, i8* %27, i32 1
  store i8* %28, i8** %pLZ_codes, align 8
  %29 = load i8, i8* %27, align 1
  %30 = zext i8 %29 to i32
  %31 = or i32 %30, 256
  store i32 %31, i32* %flags, align 4
  br label %32

; <label>:32                                      ; preds = %26, %23
  %33 = load i32, i32* %flags, align 4
  %34 = and i32 %33, 1
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %206

; <label>:36                                      ; preds = %32
  %37 = load i8*, i8** %pLZ_codes, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 0
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  store i32 %40, i32* %match_len, align 4
  %41 = load i8*, i8** %pLZ_codes, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 1
  %43 = bitcast i8* %42 to i16*
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  store i32 %45, i32* %match_dist, align 4
  %46 = load i8*, i8** %pLZ_codes, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 3
  store i8* %47, i8** %pLZ_codes, align 8
  %48 = load i32, i32* %match_len, align 4
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds [256 x i16], [256 x i16]* @s_tdefl_len_sym, i64 0, i64 %49
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i64
  %53 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %54 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %53, i32 0, i32 38
  %55 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %54, i64 0, i64 0
  %56 = getelementptr inbounds [288 x i8], [288 x i8]* %55, i64 0, i64 %52
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %61

; <label>:60                                      ; preds = %36
  br label %63

; <label>:61                                      ; preds = %36
  call void @__assert_fail(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2041, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_lz_codes, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %63

; <label>:63                                      ; preds = %62, %60
  %64 = load i32, i32* %match_len, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds [256 x i16], [256 x i16]* @s_tdefl_len_sym, i64 0, i64 %65
  %67 = load i16, i16* %66, align 2
  %68 = zext i16 %67 to i64
  %69 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %70 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %69, i32 0, i32 37
  %71 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %70, i64 0, i64 0
  %72 = getelementptr inbounds [288 x i16], [288 x i16]* %71, i64 0, i64 %68
  %73 = load i16, i16* %72, align 2
  %74 = zext i16 %73 to i64
  %75 = load i32, i32* %bits_in, align 4
  %76 = zext i32 %75 to i64
  %77 = shl i64 %74, %76
  %78 = load i64, i64* %bit_buffer, align 8
  %79 = or i64 %78, %77
  store i64 %79, i64* %bit_buffer, align 8
  %80 = load i32, i32* %match_len, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds [256 x i16], [256 x i16]* @s_tdefl_len_sym, i64 0, i64 %81
  %83 = load i16, i16* %82, align 2
  %84 = zext i16 %83 to i64
  %85 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %86 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %85, i32 0, i32 38
  %87 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %86, i64 0, i64 0
  %88 = getelementptr inbounds [288 x i8], [288 x i8]* %87, i64 0, i64 %84
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = load i32, i32* %bits_in, align 4
  %92 = add i32 %91, %90
  store i32 %92, i32* %bits_in, align 4
  %93 = load i32, i32* %match_len, align 4
  %94 = load i32, i32* %match_len, align 4
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds [256 x i8], [256 x i8]* @s_tdefl_len_extra, i64 0, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i64
  %99 = getelementptr inbounds [17 x i32], [17 x i32]* @mz_bitmasks, i64 0, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = and i32 %93, %100
  %102 = zext i32 %101 to i64
  %103 = load i32, i32* %bits_in, align 4
  %104 = zext i32 %103 to i64
  %105 = shl i64 %102, %104
  %106 = load i64, i64* %bit_buffer, align 8
  %107 = or i64 %106, %105
  store i64 %107, i64* %bit_buffer, align 8
  %108 = load i32, i32* %match_len, align 4
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds [256 x i8], [256 x i8]* @s_tdefl_len_extra, i64 0, i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = load i32, i32* %bits_in, align 4
  %114 = add i32 %113, %112
  store i32 %114, i32* %bits_in, align 4
  %115 = load i32, i32* %match_dist, align 4
  %116 = and i32 %115, 511
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds [512 x i8], [512 x i8]* @s_tdefl_small_dist_sym, i64 0, i64 %117
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  store i32 %120, i32* %s0, align 4
  %121 = load i32, i32* %match_dist, align 4
  %122 = and i32 %121, 511
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds [512 x i8], [512 x i8]* @s_tdefl_small_dist_extra, i64 0, i64 %123
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  store i32 %126, i32* %n0, align 4
  %127 = load i32, i32* %match_dist, align 4
  %128 = lshr i32 %127, 8
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds [128 x i8], [128 x i8]* @s_tdefl_large_dist_sym, i64 0, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  store i32 %132, i32* %s1, align 4
  %133 = load i32, i32* %match_dist, align 4
  %134 = lshr i32 %133, 8
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds [128 x i8], [128 x i8]* @s_tdefl_large_dist_extra, i64 0, i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  store i32 %138, i32* %n1, align 4
  %139 = load i32, i32* %match_dist, align 4
  %140 = icmp ult i32 %139, 512
  br i1 %140, label %141, label %143

; <label>:141                                     ; preds = %63
  %142 = load i32, i32* %s0, align 4
  br label %145

; <label>:143                                     ; preds = %63
  %144 = load i32, i32* %s1, align 4
  br label %145

; <label>:145                                     ; preds = %143, %141
  %146 = phi i32 [ %142, %141 ], [ %144, %143 ]
  store i32 %146, i32* %sym, align 4
  %147 = load i32, i32* %match_dist, align 4
  %148 = icmp ult i32 %147, 512
  br i1 %148, label %149, label %151

; <label>:149                                     ; preds = %145
  %150 = load i32, i32* %n0, align 4
  br label %153

; <label>:151                                     ; preds = %145
  %152 = load i32, i32* %n1, align 4
  br label %153

; <label>:153                                     ; preds = %151, %149
  %154 = phi i32 [ %150, %149 ], [ %152, %151 ]
  store i32 %154, i32* %num_extra_bits, align 4
  %155 = load i32, i32* %sym, align 4
  %156 = zext i32 %155 to i64
  %157 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %158 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %157, i32 0, i32 38
  %159 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %158, i64 0, i64 1
  %160 = getelementptr inbounds [288 x i8], [288 x i8]* %159, i64 0, i64 %156
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i32
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %164, label %165

; <label>:164                                     ; preds = %153
  br label %167

; <label>:165                                     ; preds = %153
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2053, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_lz_codes, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %167

; <label>:167                                     ; preds = %166, %164
  %168 = load i32, i32* %sym, align 4
  %169 = zext i32 %168 to i64
  %170 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %171 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %170, i32 0, i32 37
  %172 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %171, i64 0, i64 1
  %173 = getelementptr inbounds [288 x i16], [288 x i16]* %172, i64 0, i64 %169
  %174 = load i16, i16* %173, align 2
  %175 = zext i16 %174 to i64
  %176 = load i32, i32* %bits_in, align 4
  %177 = zext i32 %176 to i64
  %178 = shl i64 %175, %177
  %179 = load i64, i64* %bit_buffer, align 8
  %180 = or i64 %179, %178
  store i64 %180, i64* %bit_buffer, align 8
  %181 = load i32, i32* %sym, align 4
  %182 = zext i32 %181 to i64
  %183 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %184 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %183, i32 0, i32 38
  %185 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %184, i64 0, i64 1
  %186 = getelementptr inbounds [288 x i8], [288 x i8]* %185, i64 0, i64 %182
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  %189 = load i32, i32* %bits_in, align 4
  %190 = add i32 %189, %188
  store i32 %190, i32* %bits_in, align 4
  %191 = load i32, i32* %match_dist, align 4
  %192 = load i32, i32* %num_extra_bits, align 4
  %193 = zext i32 %192 to i64
  %194 = getelementptr inbounds [17 x i32], [17 x i32]* @mz_bitmasks, i64 0, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = and i32 %191, %195
  %197 = zext i32 %196 to i64
  %198 = load i32, i32* %bits_in, align 4
  %199 = zext i32 %198 to i64
  %200 = shl i64 %197, %199
  %201 = load i64, i64* %bit_buffer, align 8
  %202 = or i64 %201, %200
  store i64 %202, i64* %bit_buffer, align 8
  %203 = load i32, i32* %num_extra_bits, align 4
  %204 = load i32, i32* %bits_in, align 4
  %205 = add i32 %204, %203
  store i32 %205, i32* %bits_in, align 4
  br label %349

; <label>:206                                     ; preds = %32
  %207 = load i8*, i8** %pLZ_codes, align 8
  %208 = getelementptr inbounds i8, i8* %207, i32 1
  store i8* %208, i8** %pLZ_codes, align 8
  %209 = load i8, i8* %207, align 1
  %210 = zext i8 %209 to i32
  store i32 %210, i32* %lit, align 4
  %211 = load i32, i32* %lit, align 4
  %212 = zext i32 %211 to i64
  %213 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %214 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %213, i32 0, i32 38
  %215 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %214, i64 0, i64 0
  %216 = getelementptr inbounds [288 x i8], [288 x i8]* %215, i64 0, i64 %212
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i32
  %219 = icmp ne i32 %218, 0
  br i1 %219, label %220, label %221

; <label>:220                                     ; preds = %206
  br label %223

; <label>:221                                     ; preds = %206
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2060, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_lz_codes, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %223

; <label>:223                                     ; preds = %222, %220
  %224 = load i32, i32* %lit, align 4
  %225 = zext i32 %224 to i64
  %226 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %227 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %226, i32 0, i32 37
  %228 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %227, i64 0, i64 0
  %229 = getelementptr inbounds [288 x i16], [288 x i16]* %228, i64 0, i64 %225
  %230 = load i16, i16* %229, align 2
  %231 = zext i16 %230 to i64
  %232 = load i32, i32* %bits_in, align 4
  %233 = zext i32 %232 to i64
  %234 = shl i64 %231, %233
  %235 = load i64, i64* %bit_buffer, align 8
  %236 = or i64 %235, %234
  store i64 %236, i64* %bit_buffer, align 8
  %237 = load i32, i32* %lit, align 4
  %238 = zext i32 %237 to i64
  %239 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %240 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %239, i32 0, i32 38
  %241 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %240, i64 0, i64 0
  %242 = getelementptr inbounds [288 x i8], [288 x i8]* %241, i64 0, i64 %238
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i32
  %245 = load i32, i32* %bits_in, align 4
  %246 = add i32 %245, %244
  store i32 %246, i32* %bits_in, align 4
  %247 = load i32, i32* %flags, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %348

; <label>:250                                     ; preds = %223
  %251 = load i8*, i8** %pLZ_codes, align 8
  %252 = load i8*, i8** %pLZ_code_buf_end, align 8
  %253 = icmp ult i8* %251, %252
  br i1 %253, label %254, label %348

; <label>:254                                     ; preds = %250
  %255 = load i32, i32* %flags, align 4
  %256 = lshr i32 %255, 1
  store i32 %256, i32* %flags, align 4
  %257 = load i8*, i8** %pLZ_codes, align 8
  %258 = getelementptr inbounds i8, i8* %257, i32 1
  store i8* %258, i8** %pLZ_codes, align 8
  %259 = load i8, i8* %257, align 1
  %260 = zext i8 %259 to i32
  store i32 %260, i32* %lit, align 4
  %261 = load i32, i32* %lit, align 4
  %262 = zext i32 %261 to i64
  %263 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %264 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %263, i32 0, i32 38
  %265 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %264, i64 0, i64 0
  %266 = getelementptr inbounds [288 x i8], [288 x i8]* %265, i64 0, i64 %262
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i32
  %269 = icmp ne i32 %268, 0
  br i1 %269, label %270, label %271

; <label>:270                                     ; preds = %254
  br label %273

; <label>:271                                     ; preds = %254
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2067, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_lz_codes, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %273

; <label>:273                                     ; preds = %272, %270
  %274 = load i32, i32* %lit, align 4
  %275 = zext i32 %274 to i64
  %276 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %277 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %276, i32 0, i32 37
  %278 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %277, i64 0, i64 0
  %279 = getelementptr inbounds [288 x i16], [288 x i16]* %278, i64 0, i64 %275
  %280 = load i16, i16* %279, align 2
  %281 = zext i16 %280 to i64
  %282 = load i32, i32* %bits_in, align 4
  %283 = zext i32 %282 to i64
  %284 = shl i64 %281, %283
  %285 = load i64, i64* %bit_buffer, align 8
  %286 = or i64 %285, %284
  store i64 %286, i64* %bit_buffer, align 8
  %287 = load i32, i32* %lit, align 4
  %288 = zext i32 %287 to i64
  %289 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %290 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %289, i32 0, i32 38
  %291 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %290, i64 0, i64 0
  %292 = getelementptr inbounds [288 x i8], [288 x i8]* %291, i64 0, i64 %288
  %293 = load i8, i8* %292, align 1
  %294 = zext i8 %293 to i32
  %295 = load i32, i32* %bits_in, align 4
  %296 = add i32 %295, %294
  store i32 %296, i32* %bits_in, align 4
  %297 = load i32, i32* %flags, align 4
  %298 = and i32 %297, 2
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %347

; <label>:300                                     ; preds = %273
  %301 = load i8*, i8** %pLZ_codes, align 8
  %302 = load i8*, i8** %pLZ_code_buf_end, align 8
  %303 = icmp ult i8* %301, %302
  br i1 %303, label %304, label %347

; <label>:304                                     ; preds = %300
  %305 = load i32, i32* %flags, align 4
  %306 = lshr i32 %305, 1
  store i32 %306, i32* %flags, align 4
  %307 = load i8*, i8** %pLZ_codes, align 8
  %308 = getelementptr inbounds i8, i8* %307, i32 1
  store i8* %308, i8** %pLZ_codes, align 8
  %309 = load i8, i8* %307, align 1
  %310 = zext i8 %309 to i32
  store i32 %310, i32* %lit, align 4
  %311 = load i32, i32* %lit, align 4
  %312 = zext i32 %311 to i64
  %313 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %314 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %313, i32 0, i32 38
  %315 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %314, i64 0, i64 0
  %316 = getelementptr inbounds [288 x i8], [288 x i8]* %315, i64 0, i64 %312
  %317 = load i8, i8* %316, align 1
  %318 = zext i8 %317 to i32
  %319 = icmp ne i32 %318, 0
  br i1 %319, label %320, label %321

; <label>:320                                     ; preds = %304
  br label %323

; <label>:321                                     ; preds = %304
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2074, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_lz_codes, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %323

; <label>:323                                     ; preds = %322, %320
  %324 = load i32, i32* %lit, align 4
  %325 = zext i32 %324 to i64
  %326 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %327 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %326, i32 0, i32 37
  %328 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %327, i64 0, i64 0
  %329 = getelementptr inbounds [288 x i16], [288 x i16]* %328, i64 0, i64 %325
  %330 = load i16, i16* %329, align 2
  %331 = zext i16 %330 to i64
  %332 = load i32, i32* %bits_in, align 4
  %333 = zext i32 %332 to i64
  %334 = shl i64 %331, %333
  %335 = load i64, i64* %bit_buffer, align 8
  %336 = or i64 %335, %334
  store i64 %336, i64* %bit_buffer, align 8
  %337 = load i32, i32* %lit, align 4
  %338 = zext i32 %337 to i64
  %339 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %340 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %339, i32 0, i32 38
  %341 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %340, i64 0, i64 0
  %342 = getelementptr inbounds [288 x i8], [288 x i8]* %341, i64 0, i64 %338
  %343 = load i8, i8* %342, align 1
  %344 = zext i8 %343 to i32
  %345 = load i32, i32* %bits_in, align 4
  %346 = add i32 %345, %344
  store i32 %346, i32* %bits_in, align 4
  br label %347

; <label>:347                                     ; preds = %323, %300, %273
  br label %348

; <label>:348                                     ; preds = %347, %250, %223
  br label %349

; <label>:349                                     ; preds = %348, %167
  %350 = load i8*, i8** %pOutput_buf, align 8
  %351 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %352 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %351, i32 0, i32 12
  %353 = load i8*, i8** %352, align 8
  %354 = icmp uge i8* %350, %353
  br i1 %354, label %355, label %356

; <label>:355                                     ; preds = %349
  store i32 0, i32* %1, align 4
  br label %544

; <label>:356                                     ; preds = %349
  %357 = load i64, i64* %bit_buffer, align 8
  %358 = load i8*, i8** %pOutput_buf, align 8
  %359 = bitcast i8* %358 to i64*
  store i64 %357, i64* %359, align 8
  %360 = load i32, i32* %bits_in, align 4
  %361 = lshr i32 %360, 3
  %362 = load i8*, i8** %pOutput_buf, align 8
  %363 = zext i32 %361 to i64
  %364 = getelementptr inbounds i8, i8* %362, i64 %363
  store i8* %364, i8** %pOutput_buf, align 8
  %365 = load i32, i32* %bits_in, align 4
  %366 = and i32 %365, -8
  %367 = load i64, i64* %bit_buffer, align 8
  %368 = zext i32 %366 to i64
  %369 = lshr i64 %367, %368
  store i64 %369, i64* %bit_buffer, align 8
  %370 = load i32, i32* %bits_in, align 4
  %371 = and i32 %370, 7
  store i32 %371, i32* %bits_in, align 4
  br label %372

; <label>:372                                     ; preds = %356
  %373 = load i32, i32* %flags, align 4
  %374 = lshr i32 %373, 1
  store i32 %374, i32* %flags, align 4
  br label %19

; <label>:375                                     ; preds = %19
  %376 = load i8*, i8** %pOutput_buf, align 8
  %377 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %378 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %377, i32 0, i32 11
  store i8* %376, i8** %378, align 8
  %379 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %380 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %379, i32 0, i32 16
  store i32 0, i32* %380, align 4
  %381 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %382 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %381, i32 0, i32 17
  store i32 0, i32* %382, align 8
  br label %383

; <label>:383                                     ; preds = %458, %375
  %384 = load i32, i32* %bits_in, align 4
  %385 = icmp ne i32 %384, 0
  br i1 %385, label %386, label %466

; <label>:386                                     ; preds = %383
  %387 = load i32, i32* %bits_in, align 4
  %388 = icmp ult i32 %387, 16
  br i1 %388, label %389, label %391

; <label>:389                                     ; preds = %386
  %390 = load i32, i32* %bits_in, align 4
  br label %392

; <label>:391                                     ; preds = %386
  br label %392

; <label>:392                                     ; preds = %391, %389
  %393 = phi i32 [ %390, %389 ], [ 16, %391 ]
  store i32 %393, i32* %n, align 4
  br label %394

; <label>:394                                     ; preds = %392
  %395 = load i64, i64* %bit_buffer, align 8
  %396 = trunc i64 %395 to i32
  %397 = load i32, i32* %n, align 4
  %398 = zext i32 %397 to i64
  %399 = getelementptr inbounds [17 x i32], [17 x i32]* @mz_bitmasks, i64 0, i64 %398
  %400 = load i32, i32* %399, align 4
  %401 = and i32 %396, %400
  store i32 %401, i32* %bits, align 4
  %402 = load i32, i32* %n, align 4
  store i32 %402, i32* %len, align 4
  %403 = load i32, i32* %bits, align 4
  %404 = load i32, i32* %len, align 4
  %405 = shl i32 1, %404
  %406 = sub i32 %405, 1
  %407 = icmp ule i32 %403, %406
  br i1 %407, label %408, label %409

; <label>:408                                     ; preds = %394
  br label %411

; <label>:409                                     ; preds = %394
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2098, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_lz_codes, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %411

; <label>:411                                     ; preds = %410, %408
  %412 = load i32, i32* %bits, align 4
  %413 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %414 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %413, i32 0, i32 16
  %415 = load i32, i32* %414, align 4
  %416 = shl i32 %412, %415
  %417 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %418 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %417, i32 0, i32 17
  %419 = load i32, i32* %418, align 8
  %420 = or i32 %419, %416
  store i32 %420, i32* %418, align 8
  %421 = load i32, i32* %len, align 4
  %422 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %423 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %422, i32 0, i32 16
  %424 = load i32, i32* %423, align 4
  %425 = add i32 %424, %421
  store i32 %425, i32* %423, align 4
  br label %426

; <label>:426                                     ; preds = %448, %411
  %427 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %428 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %427, i32 0, i32 16
  %429 = load i32, i32* %428, align 4
  %430 = icmp uge i32 %429, 8
  br i1 %430, label %431, label %457

; <label>:431                                     ; preds = %426
  %432 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %433 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %432, i32 0, i32 11
  %434 = load i8*, i8** %433, align 8
  %435 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %436 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %435, i32 0, i32 12
  %437 = load i8*, i8** %436, align 8
  %438 = icmp ult i8* %434, %437
  br i1 %438, label %439, label %448

; <label>:439                                     ; preds = %431
  %440 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %441 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %440, i32 0, i32 17
  %442 = load i32, i32* %441, align 8
  %443 = trunc i32 %442 to i8
  %444 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %445 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %444, i32 0, i32 11
  %446 = load i8*, i8** %445, align 8
  %447 = getelementptr inbounds i8, i8* %446, i32 1
  store i8* %447, i8** %445, align 8
  store i8 %443, i8* %446, align 1
  br label %448

; <label>:448                                     ; preds = %439, %431
  %449 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %450 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %449, i32 0, i32 17
  %451 = load i32, i32* %450, align 8
  %452 = lshr i32 %451, 8
  store i32 %452, i32* %450, align 8
  %453 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %454 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %453, i32 0, i32 16
  %455 = load i32, i32* %454, align 4
  %456 = sub i32 %455, 8
  store i32 %456, i32* %454, align 4
  br label %426

; <label>:457                                     ; preds = %426
  br label %458

; <label>:458                                     ; preds = %457
  %459 = load i32, i32* %n, align 4
  %460 = load i64, i64* %bit_buffer, align 8
  %461 = zext i32 %459 to i64
  %462 = lshr i64 %460, %461
  store i64 %462, i64* %bit_buffer, align 8
  %463 = load i32, i32* %n, align 4
  %464 = load i32, i32* %bits_in, align 4
  %465 = sub i32 %464, %463
  store i32 %465, i32* %bits_in, align 4
  br label %383

; <label>:466                                     ; preds = %383
  br label %467

; <label>:467                                     ; preds = %466
  %468 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %469 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %468, i32 0, i32 37
  %470 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %469, i64 0, i64 0
  %471 = getelementptr inbounds [288 x i16], [288 x i16]* %470, i64 0, i64 256
  %472 = load i16, i16* %471, align 2
  %473 = zext i16 %472 to i32
  store i32 %473, i32* %bits1, align 4
  %474 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %475 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %474, i32 0, i32 38
  %476 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %475, i64 0, i64 0
  %477 = getelementptr inbounds [288 x i8], [288 x i8]* %476, i64 0, i64 256
  %478 = load i8, i8* %477, align 2
  %479 = zext i8 %478 to i32
  store i32 %479, i32* %len2, align 4
  %480 = load i32, i32* %bits1, align 4
  %481 = load i32, i32* %len2, align 4
  %482 = shl i32 1, %481
  %483 = sub i32 %482, 1
  %484 = icmp ule i32 %480, %483
  br i1 %484, label %485, label %486

; <label>:485                                     ; preds = %467
  br label %488

; <label>:486                                     ; preds = %467
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2103, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.tdefl_compress_lz_codes, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %488

; <label>:488                                     ; preds = %487, %485
  %489 = load i32, i32* %bits1, align 4
  %490 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %491 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %490, i32 0, i32 16
  %492 = load i32, i32* %491, align 4
  %493 = shl i32 %489, %492
  %494 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %495 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %494, i32 0, i32 17
  %496 = load i32, i32* %495, align 8
  %497 = or i32 %496, %493
  store i32 %497, i32* %495, align 8
  %498 = load i32, i32* %len2, align 4
  %499 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %500 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %499, i32 0, i32 16
  %501 = load i32, i32* %500, align 4
  %502 = add i32 %501, %498
  store i32 %502, i32* %500, align 4
  br label %503

; <label>:503                                     ; preds = %525, %488
  %504 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %505 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %504, i32 0, i32 16
  %506 = load i32, i32* %505, align 4
  %507 = icmp uge i32 %506, 8
  br i1 %507, label %508, label %534

; <label>:508                                     ; preds = %503
  %509 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %510 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %509, i32 0, i32 11
  %511 = load i8*, i8** %510, align 8
  %512 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %513 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %512, i32 0, i32 12
  %514 = load i8*, i8** %513, align 8
  %515 = icmp ult i8* %511, %514
  br i1 %515, label %516, label %525

; <label>:516                                     ; preds = %508
  %517 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %518 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %517, i32 0, i32 17
  %519 = load i32, i32* %518, align 8
  %520 = trunc i32 %519 to i8
  %521 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %522 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %521, i32 0, i32 11
  %523 = load i8*, i8** %522, align 8
  %524 = getelementptr inbounds i8, i8* %523, i32 1
  store i8* %524, i8** %522, align 8
  store i8 %520, i8* %523, align 1
  br label %525

; <label>:525                                     ; preds = %516, %508
  %526 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %527 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %526, i32 0, i32 17
  %528 = load i32, i32* %527, align 8
  %529 = lshr i32 %528, 8
  store i32 %529, i32* %527, align 8
  %530 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %531 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %530, i32 0, i32 16
  %532 = load i32, i32* %531, align 4
  %533 = sub i32 %532, 8
  store i32 %533, i32* %531, align 4
  br label %503

; <label>:534                                     ; preds = %503
  br label %535

; <label>:535                                     ; preds = %534
  %536 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %537 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %536, i32 0, i32 11
  %538 = load i8*, i8** %537, align 8
  %539 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %2, align 8
  %540 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %539, i32 0, i32 12
  %541 = load i8*, i8** %540, align 8
  %542 = icmp ult i8* %538, %541
  %543 = zext i1 %542 to i32
  store i32 %543, i32* %1, align 4
  br label %544

; <label>:544                                     ; preds = %535, %355
  %545 = load i32, i32* %1, align 4
  ret i32 %545
}

; Function Attrs: nounwind uwtable
define internal void @tdefl_optimize_huffman_table(%struct.tdefl_compressor* %d, i32 %table_num, i32 %table_len, i32 %code_size_limit, i32 %static_table) #0 {
  %1 = alloca %struct.tdefl_compressor*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %l = alloca i32, align 4
  %num_codes = alloca [33 x i32], align 16
  %next_code = alloca [33 x i32], align 16
  %syms0 = alloca [288 x %struct.tdefl_sym_freq], align 16
  %syms1 = alloca [288 x %struct.tdefl_sym_freq], align 16
  %pSyms = alloca %struct.tdefl_sym_freq*, align 8
  %num_used_syms = alloca i32, align 4
  %pSym_count = alloca i16*, align 8
  %rev_code = alloca i32, align 4
  %code = alloca i32, align 4
  %code_size = alloca i32, align 4
  store %struct.tdefl_compressor* %d, %struct.tdefl_compressor** %1, align 8
  store i32 %table_num, i32* %2, align 4
  store i32 %table_len, i32* %3, align 4
  store i32 %code_size_limit, i32* %4, align 4
  store i32 %static_table, i32* %5, align 4
  %6 = bitcast [33 x i32]* %num_codes to i8*
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 132, i32 16, i1 false)
  %7 = load i32, i32* %5, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %32

; <label>:9                                       ; preds = %0
  store i32 0, i32* %i, align 4
  br label %10

; <label>:10                                      ; preds = %28, %9
  %11 = load i32, i32* %i, align 4
  %12 = load i32, i32* %3, align 4
  %13 = icmp slt i32 %11, %12
  br i1 %13, label %14, label %31

; <label>:14                                      ; preds = %10
  %15 = load i32, i32* %i, align 4
  %16 = sext i32 %15 to i64
  %17 = load i32, i32* %2, align 4
  %18 = sext i32 %17 to i64
  %19 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %20 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %19, i32 0, i32 38
  %21 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %20, i64 0, i64 %18
  %22 = getelementptr inbounds [288 x i8], [288 x i8]* %21, i64 0, i64 %16
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i64
  %25 = getelementptr inbounds [33 x i32], [33 x i32]* %num_codes, i64 0, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %25, align 4
  br label %28

; <label>:28                                      ; preds = %14
  %29 = load i32, i32* %i, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %i, align 4
  br label %10

; <label>:31                                      ; preds = %10
  br label %150

; <label>:32                                      ; preds = %0
  store i32 0, i32* %num_used_syms, align 4
  %33 = load i32, i32* %2, align 4
  %34 = sext i32 %33 to i64
  %35 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %36 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %35, i32 0, i32 36
  %37 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %36, i64 0, i64 %34
  %38 = getelementptr inbounds [288 x i16], [288 x i16]* %37, i64 0, i64 0
  store i16* %38, i16** %pSym_count, align 8
  store i32 0, i32* %i, align 4
  br label %39

; <label>:39                                      ; preds = %68, %32
  %40 = load i32, i32* %i, align 4
  %41 = load i32, i32* %3, align 4
  %42 = icmp slt i32 %40, %41
  br i1 %42, label %43, label %71

; <label>:43                                      ; preds = %39
  %44 = load i32, i32* %i, align 4
  %45 = sext i32 %44 to i64
  %46 = load i16*, i16** %pSym_count, align 8
  %47 = getelementptr inbounds i16, i16* %46, i64 %45
  %48 = load i16, i16* %47, align 2
  %49 = icmp ne i16 %48, 0
  br i1 %49, label %50, label %67

; <label>:50                                      ; preds = %43
  %51 = load i32, i32* %i, align 4
  %52 = sext i32 %51 to i64
  %53 = load i16*, i16** %pSym_count, align 8
  %54 = getelementptr inbounds i16, i16* %53, i64 %52
  %55 = load i16, i16* %54, align 2
  %56 = load i32, i32* %num_used_syms, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [288 x %struct.tdefl_sym_freq], [288 x %struct.tdefl_sym_freq]* %syms0, i64 0, i64 %57
  %59 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %58, i32 0, i32 0
  store i16 %55, i16* %59, align 4
  %60 = load i32, i32* %i, align 4
  %61 = trunc i32 %60 to i16
  %62 = load i32, i32* %num_used_syms, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %num_used_syms, align 4
  %64 = sext i32 %62 to i64
  %65 = getelementptr inbounds [288 x %struct.tdefl_sym_freq], [288 x %struct.tdefl_sym_freq]* %syms0, i64 0, i64 %64
  %66 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %65, i32 0, i32 1
  store i16 %61, i16* %66, align 2
  br label %67

; <label>:67                                      ; preds = %50, %43
  br label %68

; <label>:68                                      ; preds = %67
  %69 = load i32, i32* %i, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %i, align 4
  br label %39

; <label>:71                                      ; preds = %39
  %72 = load i32, i32* %num_used_syms, align 4
  %73 = getelementptr inbounds [288 x %struct.tdefl_sym_freq], [288 x %struct.tdefl_sym_freq]* %syms0, i32 0, i32 0
  %74 = getelementptr inbounds [288 x %struct.tdefl_sym_freq], [288 x %struct.tdefl_sym_freq]* %syms1, i32 0, i32 0
  %75 = call %struct.tdefl_sym_freq* @tdefl_radix_sort_syms(i32 %72, %struct.tdefl_sym_freq* %73, %struct.tdefl_sym_freq* %74)
  store %struct.tdefl_sym_freq* %75, %struct.tdefl_sym_freq** %pSyms, align 8
  %76 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %pSyms, align 8
  %77 = load i32, i32* %num_used_syms, align 4
  call void @tdefl_calculate_minimum_redundancy(%struct.tdefl_sym_freq* %76, i32 %77)
  store i32 0, i32* %i, align 4
  br label %78

; <label>:78                                      ; preds = %93, %71
  %79 = load i32, i32* %i, align 4
  %80 = load i32, i32* %num_used_syms, align 4
  %81 = icmp slt i32 %79, %80
  br i1 %81, label %82, label %96

; <label>:82                                      ; preds = %78
  %83 = load i32, i32* %i, align 4
  %84 = sext i32 %83 to i64
  %85 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %pSyms, align 8
  %86 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %85, i64 %84
  %87 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %86, i32 0, i32 0
  %88 = load i16, i16* %87, align 2
  %89 = zext i16 %88 to i64
  %90 = getelementptr inbounds [33 x i32], [33 x i32]* %num_codes, i64 0, i64 %89
  %91 = load i32, i32* %90, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %90, align 4
  br label %93

; <label>:93                                      ; preds = %82
  %94 = load i32, i32* %i, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %i, align 4
  br label %78

; <label>:96                                      ; preds = %78
  %97 = getelementptr inbounds [33 x i32], [33 x i32]* %num_codes, i32 0, i32 0
  %98 = load i32, i32* %num_used_syms, align 4
  %99 = load i32, i32* %4, align 4
  call void @tdefl_huffman_enforce_max_code_size(i32* %97, i32 %98, i32 %99)
  %100 = load i32, i32* %2, align 4
  %101 = sext i32 %100 to i64
  %102 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %103 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %102, i32 0, i32 38
  %104 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %103, i64 0, i64 %101
  %105 = bitcast [288 x i8]* %104 to i8*
  call void @llvm.memset.p0i8.i64(i8* %105, i8 0, i64 288, i32 2, i1 false)
  %106 = load i32, i32* %2, align 4
  %107 = sext i32 %106 to i64
  %108 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %109 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %108, i32 0, i32 37
  %110 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %109, i64 0, i64 %107
  %111 = bitcast [288 x i16]* %110 to i8*
  call void @llvm.memset.p0i8.i64(i8* %111, i8 0, i64 576, i32 2, i1 false)
  store i32 1, i32* %i, align 4
  %112 = load i32, i32* %num_used_syms, align 4
  store i32 %112, i32* %j, align 4
  br label %113

; <label>:113                                     ; preds = %146, %96
  %114 = load i32, i32* %i, align 4
  %115 = load i32, i32* %4, align 4
  %116 = icmp sle i32 %114, %115
  br i1 %116, label %117, label %149

; <label>:117                                     ; preds = %113
  %118 = load i32, i32* %i, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [33 x i32], [33 x i32]* %num_codes, i64 0, i64 %119
  %121 = load i32, i32* %120, align 4
  store i32 %121, i32* %l, align 4
  br label %122

; <label>:122                                     ; preds = %142, %117
  %123 = load i32, i32* %l, align 4
  %124 = icmp sgt i32 %123, 0
  br i1 %124, label %125, label %145

; <label>:125                                     ; preds = %122
  %126 = load i32, i32* %i, align 4
  %127 = trunc i32 %126 to i8
  %128 = load i32, i32* %j, align 4
  %129 = add nsw i32 %128, -1
  store i32 %129, i32* %j, align 4
  %130 = sext i32 %129 to i64
  %131 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %pSyms, align 8
  %132 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %131, i64 %130
  %133 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %132, i32 0, i32 1
  %134 = load i16, i16* %133, align 2
  %135 = zext i16 %134 to i64
  %136 = load i32, i32* %2, align 4
  %137 = sext i32 %136 to i64
  %138 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %139 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %138, i32 0, i32 38
  %140 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %139, i64 0, i64 %137
  %141 = getelementptr inbounds [288 x i8], [288 x i8]* %140, i64 0, i64 %135
  store i8 %127, i8* %141, align 1
  br label %142

; <label>:142                                     ; preds = %125
  %143 = load i32, i32* %l, align 4
  %144 = add nsw i32 %143, -1
  store i32 %144, i32* %l, align 4
  br label %122

; <label>:145                                     ; preds = %122
  br label %146

; <label>:146                                     ; preds = %145
  %147 = load i32, i32* %i, align 4
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %i, align 4
  br label %113

; <label>:149                                     ; preds = %113
  br label %150

; <label>:150                                     ; preds = %149, %31
  %151 = getelementptr inbounds [33 x i32], [33 x i32]* %next_code, i64 0, i64 1
  store i32 0, i32* %151, align 4
  store i32 0, i32* %j, align 4
  store i32 2, i32* %i, align 4
  br label %152

; <label>:152                                     ; preds = %168, %150
  %153 = load i32, i32* %i, align 4
  %154 = load i32, i32* %4, align 4
  %155 = icmp sle i32 %153, %154
  br i1 %155, label %156, label %171

; <label>:156                                     ; preds = %152
  %157 = load i32, i32* %j, align 4
  %158 = load i32, i32* %i, align 4
  %159 = sub nsw i32 %158, 1
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds [33 x i32], [33 x i32]* %num_codes, i64 0, i64 %160
  %162 = load i32, i32* %161, align 4
  %163 = add nsw i32 %157, %162
  %164 = shl i32 %163, 1
  store i32 %164, i32* %j, align 4
  %165 = load i32, i32* %i, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds [33 x i32], [33 x i32]* %next_code, i64 0, i64 %166
  store i32 %164, i32* %167, align 4
  br label %168

; <label>:168                                     ; preds = %156
  %169 = load i32, i32* %i, align 4
  %170 = add nsw i32 %169, 1
  store i32 %170, i32* %i, align 4
  br label %152

; <label>:171                                     ; preds = %152
  store i32 0, i32* %i, align 4
  br label %172

; <label>:172                                     ; preds = %221, %171
  %173 = load i32, i32* %i, align 4
  %174 = load i32, i32* %3, align 4
  %175 = icmp slt i32 %173, %174
  br i1 %175, label %176, label %224

; <label>:176                                     ; preds = %172
  store i32 0, i32* %rev_code, align 4
  %177 = load i32, i32* %i, align 4
  %178 = sext i32 %177 to i64
  %179 = load i32, i32* %2, align 4
  %180 = sext i32 %179 to i64
  %181 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %182 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %181, i32 0, i32 38
  %183 = getelementptr inbounds [3 x [288 x i8]], [3 x [288 x i8]]* %182, i64 0, i64 %180
  %184 = getelementptr inbounds [288 x i8], [288 x i8]* %183, i64 0, i64 %178
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  store i32 %186, i32* %code_size, align 4
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %189

; <label>:188                                     ; preds = %176
  br label %221

; <label>:189                                     ; preds = %176
  %190 = load i32, i32* %code_size, align 4
  %191 = zext i32 %190 to i64
  %192 = getelementptr inbounds [33 x i32], [33 x i32]* %next_code, i64 0, i64 %191
  %193 = load i32, i32* %192, align 4
  %194 = add i32 %193, 1
  store i32 %194, i32* %192, align 4
  store i32 %193, i32* %code, align 4
  %195 = load i32, i32* %code_size, align 4
  store i32 %195, i32* %l, align 4
  br label %196

; <label>:196                                     ; preds = %205, %189
  %197 = load i32, i32* %l, align 4
  %198 = icmp sgt i32 %197, 0
  br i1 %198, label %199, label %210

; <label>:199                                     ; preds = %196
  %200 = load i32, i32* %rev_code, align 4
  %201 = shl i32 %200, 1
  %202 = load i32, i32* %code, align 4
  %203 = and i32 %202, 1
  %204 = or i32 %201, %203
  store i32 %204, i32* %rev_code, align 4
  br label %205

; <label>:205                                     ; preds = %199
  %206 = load i32, i32* %l, align 4
  %207 = add nsw i32 %206, -1
  store i32 %207, i32* %l, align 4
  %208 = load i32, i32* %code, align 4
  %209 = lshr i32 %208, 1
  store i32 %209, i32* %code, align 4
  br label %196

; <label>:210                                     ; preds = %196
  %211 = load i32, i32* %rev_code, align 4
  %212 = trunc i32 %211 to i16
  %213 = load i32, i32* %i, align 4
  %214 = sext i32 %213 to i64
  %215 = load i32, i32* %2, align 4
  %216 = sext i32 %215 to i64
  %217 = load %struct.tdefl_compressor*, %struct.tdefl_compressor** %1, align 8
  %218 = getelementptr inbounds %struct.tdefl_compressor, %struct.tdefl_compressor* %217, i32 0, i32 37
  %219 = getelementptr inbounds [3 x [288 x i16]], [3 x [288 x i16]]* %218, i64 0, i64 %216
  %220 = getelementptr inbounds [288 x i16], [288 x i16]* %219, i64 0, i64 %214
  store i16 %212, i16* %220, align 2
  br label %221

; <label>:221                                     ; preds = %210, %188
  %222 = load i32, i32* %i, align 4
  %223 = add nsw i32 %222, 1
  store i32 %223, i32* %i, align 4
  br label %172

; <label>:224                                     ; preds = %172
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.tdefl_sym_freq* @tdefl_radix_sort_syms(i32 %num_syms, %struct.tdefl_sym_freq* %pSyms0, %struct.tdefl_sym_freq* %pSyms1) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.tdefl_sym_freq*, align 8
  %3 = alloca %struct.tdefl_sym_freq*, align 8
  %total_passes = alloca i32, align 4
  %pass_shift = alloca i32, align 4
  %pass = alloca i32, align 4
  %i = alloca i32, align 4
  %hist = alloca [512 x i32], align 16
  %pCur_syms = alloca %struct.tdefl_sym_freq*, align 8
  %pNew_syms = alloca %struct.tdefl_sym_freq*, align 8
  %freq = alloca i32, align 4
  %pHist = alloca i32*, align 8
  %offsets = alloca [256 x i32], align 16
  %cur_ofs = alloca i32, align 4
  %t = alloca %struct.tdefl_sym_freq*, align 8
  store i32 %num_syms, i32* %1, align 4
  store %struct.tdefl_sym_freq* %pSyms0, %struct.tdefl_sym_freq** %2, align 8
  store %struct.tdefl_sym_freq* %pSyms1, %struct.tdefl_sym_freq** %3, align 8
  store i32 2, i32* %total_passes, align 4
  %4 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %2, align 8
  store %struct.tdefl_sym_freq* %4, %struct.tdefl_sym_freq** %pCur_syms, align 8
  %5 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %3, align 8
  store %struct.tdefl_sym_freq* %5, %struct.tdefl_sym_freq** %pNew_syms, align 8
  %6 = bitcast [512 x i32]* %hist to i8*
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 2048, i32 16, i1 false)
  store i32 0, i32* %i, align 4
  br label %7

; <label>:7                                       ; preds = %33, %0
  %8 = load i32, i32* %i, align 4
  %9 = load i32, i32* %1, align 4
  %10 = icmp ult i32 %8, %9
  br i1 %10, label %11, label %36

; <label>:11                                      ; preds = %7
  %12 = load i32, i32* %i, align 4
  %13 = zext i32 %12 to i64
  %14 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %2, align 8
  %15 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %14, i64 %13
  %16 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %15, i32 0, i32 0
  %17 = load i16, i16* %16, align 2
  %18 = zext i16 %17 to i32
  store i32 %18, i32* %freq, align 4
  %19 = load i32, i32* %freq, align 4
  %20 = and i32 %19, 255
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds [512 x i32], [512 x i32]* %hist, i64 0, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %22, align 4
  %25 = load i32, i32* %freq, align 4
  %26 = lshr i32 %25, 8
  %27 = and i32 %26, 255
  %28 = add i32 256, %27
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds [512 x i32], [512 x i32]* %hist, i64 0, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %30, align 4
  br label %33

; <label>:33                                      ; preds = %11
  %34 = load i32, i32* %i, align 4
  %35 = add i32 %34, 1
  store i32 %35, i32* %i, align 4
  br label %7

; <label>:36                                      ; preds = %7
  br label %37

; <label>:37                                      ; preds = %51, %36
  %38 = load i32, i32* %total_passes, align 4
  %39 = icmp ugt i32 %38, 1
  br i1 %39, label %40, label %49

; <label>:40                                      ; preds = %37
  %41 = load i32, i32* %1, align 4
  %42 = load i32, i32* %total_passes, align 4
  %43 = sub i32 %42, 1
  %44 = mul i32 %43, 256
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds [512 x i32], [512 x i32]* %hist, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %41, %47
  br label %49

; <label>:49                                      ; preds = %40, %37
  %50 = phi i1 [ false, %37 ], [ %48, %40 ]
  br i1 %50, label %51, label %54

; <label>:51                                      ; preds = %49
  %52 = load i32, i32* %total_passes, align 4
  %53 = add i32 %52, -1
  store i32 %53, i32* %total_passes, align 4
  br label %37

; <label>:54                                      ; preds = %49
  store i32 0, i32* %pass_shift, align 4
  store i32 0, i32* %pass, align 4
  br label %55

; <label>:55                                      ; preds = %118, %54
  %56 = load i32, i32* %pass, align 4
  %57 = load i32, i32* %total_passes, align 4
  %58 = icmp ult i32 %56, %57
  br i1 %58, label %59, label %123

; <label>:59                                      ; preds = %55
  %60 = load i32, i32* %pass, align 4
  %61 = shl i32 %60, 8
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds [512 x i32], [512 x i32]* %hist, i64 0, i64 %62
  store i32* %63, i32** %pHist, align 8
  store i32 0, i32* %cur_ofs, align 4
  store i32 0, i32* %i, align 4
  br label %64

; <label>:64                                      ; preds = %79, %59
  %65 = load i32, i32* %i, align 4
  %66 = icmp ult i32 %65, 256
  br i1 %66, label %67, label %82

; <label>:67                                      ; preds = %64
  %68 = load i32, i32* %cur_ofs, align 4
  %69 = load i32, i32* %i, align 4
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds [256 x i32], [256 x i32]* %offsets, i64 0, i64 %70
  store i32 %68, i32* %71, align 4
  %72 = load i32, i32* %i, align 4
  %73 = zext i32 %72 to i64
  %74 = load i32*, i32** %pHist, align 8
  %75 = getelementptr inbounds i32, i32* %74, i64 %73
  %76 = load i32, i32* %75, align 4
  %77 = load i32, i32* %cur_ofs, align 4
  %78 = add i32 %77, %76
  store i32 %78, i32* %cur_ofs, align 4
  br label %79

; <label>:79                                      ; preds = %67
  %80 = load i32, i32* %i, align 4
  %81 = add i32 %80, 1
  store i32 %81, i32* %i, align 4
  br label %64

; <label>:82                                      ; preds = %64
  store i32 0, i32* %i, align 4
  br label %83

; <label>:83                                      ; preds = %111, %82
  %84 = load i32, i32* %i, align 4
  %85 = load i32, i32* %1, align 4
  %86 = icmp ult i32 %84, %85
  br i1 %86, label %87, label %114

; <label>:87                                      ; preds = %83
  %88 = load i32, i32* %i, align 4
  %89 = zext i32 %88 to i64
  %90 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %pCur_syms, align 8
  %91 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %90, i64 %89
  %92 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %91, i32 0, i32 0
  %93 = load i16, i16* %92, align 2
  %94 = zext i16 %93 to i32
  %95 = load i32, i32* %pass_shift, align 4
  %96 = ashr i32 %94, %95
  %97 = and i32 %96, 255
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds [256 x i32], [256 x i32]* %offsets, i64 0, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = add i32 %100, 1
  store i32 %101, i32* %99, align 4
  %102 = zext i32 %100 to i64
  %103 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %pNew_syms, align 8
  %104 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %103, i64 %102
  %105 = load i32, i32* %i, align 4
  %106 = zext i32 %105 to i64
  %107 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %pCur_syms, align 8
  %108 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %107, i64 %106
  %109 = bitcast %struct.tdefl_sym_freq* %104 to i8*
  %110 = bitcast %struct.tdefl_sym_freq* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %109, i8* %110, i64 4, i32 2, i1 false)
  br label %111

; <label>:111                                     ; preds = %87
  %112 = load i32, i32* %i, align 4
  %113 = add i32 %112, 1
  store i32 %113, i32* %i, align 4
  br label %83

; <label>:114                                     ; preds = %83
  %115 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %pCur_syms, align 8
  store %struct.tdefl_sym_freq* %115, %struct.tdefl_sym_freq** %t, align 8
  %116 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %pNew_syms, align 8
  store %struct.tdefl_sym_freq* %116, %struct.tdefl_sym_freq** %pCur_syms, align 8
  %117 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %t, align 8
  store %struct.tdefl_sym_freq* %117, %struct.tdefl_sym_freq** %pNew_syms, align 8
  br label %118

; <label>:118                                     ; preds = %114
  %119 = load i32, i32* %pass, align 4
  %120 = add i32 %119, 1
  store i32 %120, i32* %pass, align 4
  %121 = load i32, i32* %pass_shift, align 4
  %122 = add i32 %121, 8
  store i32 %122, i32* %pass_shift, align 4
  br label %55

; <label>:123                                     ; preds = %55
  %124 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %pCur_syms, align 8
  ret %struct.tdefl_sym_freq* %124
}

; Function Attrs: nounwind uwtable
define internal void @tdefl_calculate_minimum_redundancy(%struct.tdefl_sym_freq* %A, i32 %n) #0 {
  %1 = alloca %struct.tdefl_sym_freq*, align 8
  %2 = alloca i32, align 4
  %root = alloca i32, align 4
  %leaf = alloca i32, align 4
  %next = alloca i32, align 4
  %avbl = alloca i32, align 4
  %used = alloca i32, align 4
  %dpth = alloca i32, align 4
  store %struct.tdefl_sym_freq* %A, %struct.tdefl_sym_freq** %1, align 8
  store i32 %n, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %6

; <label>:5                                       ; preds = %0
  br label %251

; <label>:6                                       ; preds = %0
  %7 = load i32, i32* %2, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %13

; <label>:9                                       ; preds = %6
  %10 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %11 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %10, i64 0
  %12 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %11, i32 0, i32 0
  store i16 1, i16* %12, align 2
  br label %251

; <label>:13                                      ; preds = %6
  br label %14

; <label>:14                                      ; preds = %13
  %15 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %16 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %15, i64 1
  %17 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %16, i32 0, i32 0
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %21 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %20, i64 0
  %22 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %21, i32 0, i32 0
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = add nsw i32 %24, %19
  %26 = trunc i32 %25 to i16
  store i16 %26, i16* %22, align 2
  store i32 0, i32* %root, align 4
  store i32 2, i32* %leaf, align 4
  store i32 1, i32* %next, align 4
  br label %27

; <label>:27                                      ; preds = %163, %14
  %28 = load i32, i32* %next, align 4
  %29 = load i32, i32* %2, align 4
  %30 = sub nsw i32 %29, 1
  %31 = icmp slt i32 %28, %30
  br i1 %31, label %32, label %166

; <label>:32                                      ; preds = %27
  %33 = load i32, i32* %leaf, align 4
  %34 = load i32, i32* %2, align 4
  %35 = icmp sge i32 %33, %34
  br i1 %35, label %52, label %36

; <label>:36                                      ; preds = %32
  %37 = load i32, i32* %root, align 4
  %38 = sext i32 %37 to i64
  %39 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %40 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %39, i64 %38
  %41 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %40, i32 0, i32 0
  %42 = load i16, i16* %41, align 2
  %43 = zext i16 %42 to i32
  %44 = load i32, i32* %leaf, align 4
  %45 = sext i32 %44 to i64
  %46 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %47 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %46, i64 %45
  %48 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %47, i32 0, i32 0
  %49 = load i16, i16* %48, align 2
  %50 = zext i16 %49 to i32
  %51 = icmp slt i32 %43, %50
  br i1 %51, label %52, label %72

; <label>:52                                      ; preds = %36, %32
  %53 = load i32, i32* %root, align 4
  %54 = sext i32 %53 to i64
  %55 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %56 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %55, i64 %54
  %57 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %56, i32 0, i32 0
  %58 = load i16, i16* %57, align 2
  %59 = load i32, i32* %next, align 4
  %60 = sext i32 %59 to i64
  %61 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %62 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %61, i64 %60
  %63 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %62, i32 0, i32 0
  store i16 %58, i16* %63, align 2
  %64 = load i32, i32* %next, align 4
  %65 = trunc i32 %64 to i16
  %66 = load i32, i32* %root, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %root, align 4
  %68 = sext i32 %66 to i64
  %69 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %70 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %69, i64 %68
  %71 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %70, i32 0, i32 0
  store i16 %65, i16* %71, align 2
  br label %85

; <label>:72                                      ; preds = %36
  %73 = load i32, i32* %leaf, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %leaf, align 4
  %75 = sext i32 %73 to i64
  %76 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %77 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %76, i64 %75
  %78 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %77, i32 0, i32 0
  %79 = load i16, i16* %78, align 2
  %80 = load i32, i32* %next, align 4
  %81 = sext i32 %80 to i64
  %82 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %83 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %82, i64 %81
  %84 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %83, i32 0, i32 0
  store i16 %79, i16* %84, align 2
  br label %85

; <label>:85                                      ; preds = %72, %52
  %86 = load i32, i32* %leaf, align 4
  %87 = load i32, i32* %2, align 4
  %88 = icmp sge i32 %86, %87
  br i1 %88, label %109, label %89

; <label>:89                                      ; preds = %85
  %90 = load i32, i32* %root, align 4
  %91 = load i32, i32* %next, align 4
  %92 = icmp slt i32 %90, %91
  br i1 %92, label %93, label %139

; <label>:93                                      ; preds = %89
  %94 = load i32, i32* %root, align 4
  %95 = sext i32 %94 to i64
  %96 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %97 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %96, i64 %95
  %98 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %97, i32 0, i32 0
  %99 = load i16, i16* %98, align 2
  %100 = zext i16 %99 to i32
  %101 = load i32, i32* %leaf, align 4
  %102 = sext i32 %101 to i64
  %103 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %104 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %103, i64 %102
  %105 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %104, i32 0, i32 0
  %106 = load i16, i16* %105, align 2
  %107 = zext i16 %106 to i32
  %108 = icmp slt i32 %100, %107
  br i1 %108, label %109, label %139

; <label>:109                                     ; preds = %93, %85
  %110 = load i32, i32* %next, align 4
  %111 = sext i32 %110 to i64
  %112 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %113 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %112, i64 %111
  %114 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %113, i32 0, i32 0
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = load i32, i32* %root, align 4
  %118 = sext i32 %117 to i64
  %119 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %120 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %119, i64 %118
  %121 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %120, i32 0, i32 0
  %122 = load i16, i16* %121, align 2
  %123 = zext i16 %122 to i32
  %124 = add nsw i32 %116, %123
  %125 = trunc i32 %124 to i16
  %126 = load i32, i32* %next, align 4
  %127 = sext i32 %126 to i64
  %128 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %129 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %128, i64 %127
  %130 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %129, i32 0, i32 0
  store i16 %125, i16* %130, align 2
  %131 = load i32, i32* %next, align 4
  %132 = trunc i32 %131 to i16
  %133 = load i32, i32* %root, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %root, align 4
  %135 = sext i32 %133 to i64
  %136 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %137 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %136, i64 %135
  %138 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %137, i32 0, i32 0
  store i16 %132, i16* %138, align 2
  br label %162

; <label>:139                                     ; preds = %93, %89
  %140 = load i32, i32* %next, align 4
  %141 = sext i32 %140 to i64
  %142 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %143 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %142, i64 %141
  %144 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %143, i32 0, i32 0
  %145 = load i16, i16* %144, align 2
  %146 = zext i16 %145 to i32
  %147 = load i32, i32* %leaf, align 4
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %leaf, align 4
  %149 = sext i32 %147 to i64
  %150 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %151 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %150, i64 %149
  %152 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %151, i32 0, i32 0
  %153 = load i16, i16* %152, align 2
  %154 = zext i16 %153 to i32
  %155 = add nsw i32 %146, %154
  %156 = trunc i32 %155 to i16
  %157 = load i32, i32* %next, align 4
  %158 = sext i32 %157 to i64
  %159 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %160 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %159, i64 %158
  %161 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %160, i32 0, i32 0
  store i16 %156, i16* %161, align 2
  br label %162

; <label>:162                                     ; preds = %139, %109
  br label %163

; <label>:163                                     ; preds = %162
  %164 = load i32, i32* %next, align 4
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %next, align 4
  br label %27

; <label>:166                                     ; preds = %27
  %167 = load i32, i32* %2, align 4
  %168 = sub nsw i32 %167, 2
  %169 = sext i32 %168 to i64
  %170 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %171 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %170, i64 %169
  %172 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %171, i32 0, i32 0
  store i16 0, i16* %172, align 2
  %173 = load i32, i32* %2, align 4
  %174 = sub nsw i32 %173, 3
  store i32 %174, i32* %next, align 4
  br label %175

; <label>:175                                     ; preds = %198, %166
  %176 = load i32, i32* %next, align 4
  %177 = icmp sge i32 %176, 0
  br i1 %177, label %178, label %201

; <label>:178                                     ; preds = %175
  %179 = load i32, i32* %next, align 4
  %180 = sext i32 %179 to i64
  %181 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %182 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %181, i64 %180
  %183 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %182, i32 0, i32 0
  %184 = load i16, i16* %183, align 2
  %185 = zext i16 %184 to i64
  %186 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %187 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %186, i64 %185
  %188 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %187, i32 0, i32 0
  %189 = load i16, i16* %188, align 2
  %190 = zext i16 %189 to i32
  %191 = add nsw i32 %190, 1
  %192 = trunc i32 %191 to i16
  %193 = load i32, i32* %next, align 4
  %194 = sext i32 %193 to i64
  %195 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %196 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %195, i64 %194
  %197 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %196, i32 0, i32 0
  store i16 %192, i16* %197, align 2
  br label %198

; <label>:198                                     ; preds = %178
  %199 = load i32, i32* %next, align 4
  %200 = add nsw i32 %199, -1
  store i32 %200, i32* %next, align 4
  br label %175

; <label>:201                                     ; preds = %175
  store i32 1, i32* %avbl, align 4
  store i32 0, i32* %dpth, align 4
  store i32 0, i32* %used, align 4
  %202 = load i32, i32* %2, align 4
  %203 = sub nsw i32 %202, 2
  store i32 %203, i32* %root, align 4
  %204 = load i32, i32* %2, align 4
  %205 = sub nsw i32 %204, 1
  store i32 %205, i32* %next, align 4
  br label %206

; <label>:206                                     ; preds = %246, %201
  %207 = load i32, i32* %avbl, align 4
  %208 = icmp sgt i32 %207, 0
  br i1 %208, label %209, label %251

; <label>:209                                     ; preds = %206
  br label %210

; <label>:210                                     ; preds = %225, %209
  %211 = load i32, i32* %root, align 4
  %212 = icmp sge i32 %211, 0
  br i1 %212, label %213, label %223

; <label>:213                                     ; preds = %210
  %214 = load i32, i32* %root, align 4
  %215 = sext i32 %214 to i64
  %216 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %217 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %216, i64 %215
  %218 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %217, i32 0, i32 0
  %219 = load i16, i16* %218, align 2
  %220 = zext i16 %219 to i32
  %221 = load i32, i32* %dpth, align 4
  %222 = icmp eq i32 %220, %221
  br label %223

; <label>:223                                     ; preds = %213, %210
  %224 = phi i1 [ false, %210 ], [ %222, %213 ]
  br i1 %224, label %225, label %230

; <label>:225                                     ; preds = %223
  %226 = load i32, i32* %used, align 4
  %227 = add nsw i32 %226, 1
  store i32 %227, i32* %used, align 4
  %228 = load i32, i32* %root, align 4
  %229 = add nsw i32 %228, -1
  store i32 %229, i32* %root, align 4
  br label %210

; <label>:230                                     ; preds = %223
  br label %231

; <label>:231                                     ; preds = %235, %230
  %232 = load i32, i32* %avbl, align 4
  %233 = load i32, i32* %used, align 4
  %234 = icmp sgt i32 %232, %233
  br i1 %234, label %235, label %246

; <label>:235                                     ; preds = %231
  %236 = load i32, i32* %dpth, align 4
  %237 = trunc i32 %236 to i16
  %238 = load i32, i32* %next, align 4
  %239 = add nsw i32 %238, -1
  store i32 %239, i32* %next, align 4
  %240 = sext i32 %238 to i64
  %241 = load %struct.tdefl_sym_freq*, %struct.tdefl_sym_freq** %1, align 8
  %242 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %241, i64 %240
  %243 = getelementptr inbounds %struct.tdefl_sym_freq, %struct.tdefl_sym_freq* %242, i32 0, i32 0
  store i16 %237, i16* %243, align 2
  %244 = load i32, i32* %avbl, align 4
  %245 = add nsw i32 %244, -1
  store i32 %245, i32* %avbl, align 4
  br label %231

; <label>:246                                     ; preds = %231
  %247 = load i32, i32* %used, align 4
  %248 = mul nsw i32 2, %247
  store i32 %248, i32* %avbl, align 4
  %249 = load i32, i32* %dpth, align 4
  %250 = add nsw i32 %249, 1
  store i32 %250, i32* %dpth, align 4
  store i32 0, i32* %used, align 4
  br label %206

; <label>:251                                     ; preds = %5, %9, %206
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @tdefl_huffman_enforce_max_code_size(i32* %pNum_codes, i32 %code_list_len, i32 %max_code_size) #0 {
  %1 = alloca i32*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %i = alloca i32, align 4
  %total = alloca i32, align 4
  store i32* %pNum_codes, i32** %1, align 8
  store i32 %code_list_len, i32* %2, align 4
  store i32 %max_code_size, i32* %3, align 4
  store i32 0, i32* %total, align 4
  %4 = load i32, i32* %2, align 4
  %5 = icmp sle i32 %4, 1
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  br label %96

; <label>:7                                       ; preds = %0
  %8 = load i32, i32* %3, align 4
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %i, align 4
  br label %10

; <label>:10                                      ; preds = %25, %7
  %11 = load i32, i32* %i, align 4
  %12 = icmp sle i32 %11, 32
  br i1 %12, label %13, label %28

; <label>:13                                      ; preds = %10
  %14 = load i32, i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i32*, i32** %1, align 8
  %17 = getelementptr inbounds i32, i32* %16, i64 %15
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* %3, align 4
  %20 = sext i32 %19 to i64
  %21 = load i32*, i32** %1, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 %20
  %23 = load i32, i32* %22, align 4
  %24 = add nsw i32 %23, %18
  store i32 %24, i32* %22, align 4
  br label %25

; <label>:25                                      ; preds = %13
  %26 = load i32, i32* %i, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %i, align 4
  br label %10

; <label>:28                                      ; preds = %10
  %29 = load i32, i32* %3, align 4
  store i32 %29, i32* %i, align 4
  br label %30

; <label>:30                                      ; preds = %45, %28
  %31 = load i32, i32* %i, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %48

; <label>:33                                      ; preds = %30
  %34 = load i32, i32* %i, align 4
  %35 = sext i32 %34 to i64
  %36 = load i32*, i32** %1, align 8
  %37 = getelementptr inbounds i32, i32* %36, i64 %35
  %38 = load i32, i32* %37, align 4
  %39 = load i32, i32* %3, align 4
  %40 = load i32, i32* %i, align 4
  %41 = sub nsw i32 %39, %40
  %42 = shl i32 %38, %41
  %43 = load i32, i32* %total, align 4
  %44 = add i32 %43, %42
  store i32 %44, i32* %total, align 4
  br label %45

; <label>:45                                      ; preds = %33
  %46 = load i32, i32* %i, align 4
  %47 = add nsw i32 %46, -1
  store i32 %47, i32* %i, align 4
  br label %30

; <label>:48                                      ; preds = %30
  br label %49

; <label>:49                                      ; preds = %93, %48
  %50 = load i32, i32* %total, align 4
  %51 = zext i32 %50 to i64
  %52 = load i32, i32* %3, align 4
  %53 = zext i32 %52 to i64
  %54 = shl i64 1, %53
  %55 = icmp ne i64 %51, %54
  br i1 %55, label %56, label %96

; <label>:56                                      ; preds = %49
  %57 = load i32, i32* %3, align 4
  %58 = sext i32 %57 to i64
  %59 = load i32*, i32** %1, align 8
  %60 = getelementptr inbounds i32, i32* %59, i64 %58
  %61 = load i32, i32* %60, align 4
  %62 = add nsw i32 %61, -1
  store i32 %62, i32* %60, align 4
  %63 = load i32, i32* %3, align 4
  %64 = sub nsw i32 %63, 1
  store i32 %64, i32* %i, align 4
  br label %65

; <label>:65                                      ; preds = %90, %56
  %66 = load i32, i32* %i, align 4
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %68, label %93

; <label>:68                                      ; preds = %65
  %69 = load i32, i32* %i, align 4
  %70 = sext i32 %69 to i64
  %71 = load i32*, i32** %1, align 8
  %72 = getelementptr inbounds i32, i32* %71, i64 %70
  %73 = load i32, i32* %72, align 4
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %89

; <label>:75                                      ; preds = %68
  %76 = load i32, i32* %i, align 4
  %77 = sext i32 %76 to i64
  %78 = load i32*, i32** %1, align 8
  %79 = getelementptr inbounds i32, i32* %78, i64 %77
  %80 = load i32, i32* %79, align 4
  %81 = add nsw i32 %80, -1
  store i32 %81, i32* %79, align 4
  %82 = load i32, i32* %i, align 4
  %83 = add nsw i32 %82, 1
  %84 = sext i32 %83 to i64
  %85 = load i32*, i32** %1, align 8
  %86 = getelementptr inbounds i32, i32* %85, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = add nsw i32 %87, 2
  store i32 %88, i32* %86, align 4
  br label %93

; <label>:89                                      ; preds = %68
  br label %90

; <label>:90                                      ; preds = %89
  %91 = load i32, i32* %i, align 4
  %92 = add nsw i32 %91, -1
  store i32 %92, i32* %i, align 4
  br label %65

; <label>:93                                      ; preds = %75, %65
  %94 = load i32, i32* %total, align 4
  %95 = add i32 %94, -1
  store i32 %95, i32* %total, align 4
  br label %49

; <label>:96                                      ; preds = %6, %49
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @mz_zip_reader_sort_central_dir_offsets_by_filename(%struct.mz_zip_archive_tag* %pZip) #0 {
  %1 = alloca %struct.mz_zip_array*, align 8
  %2 = alloca %struct.mz_zip_array*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %pL.i21 = alloca i8*, align 8
  %pE.i22 = alloca i8*, align 8
  %pR.i23 = alloca i8*, align 8
  %l_len.i24 = alloca i32, align 4
  %r_len.i25 = alloca i32, align 4
  %l.i26 = alloca i8, align 1
  %r.i27 = alloca i8, align 1
  %5 = alloca %struct.mz_zip_array*, align 8
  %6 = alloca %struct.mz_zip_array*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %pL.i13 = alloca i8*, align 8
  %pE.i14 = alloca i8*, align 8
  %pR.i15 = alloca i8*, align 8
  %l_len.i16 = alloca i32, align 4
  %r_len.i17 = alloca i32, align 4
  %l.i18 = alloca i8, align 1
  %r.i19 = alloca i8, align 1
  %9 = alloca %struct.mz_zip_array*, align 8
  %10 = alloca %struct.mz_zip_array*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %pL.i5 = alloca i8*, align 8
  %pE.i6 = alloca i8*, align 8
  %pR.i7 = alloca i8*, align 8
  %l_len.i8 = alloca i32, align 4
  %r_len.i9 = alloca i32, align 4
  %l.i10 = alloca i8, align 1
  %r.i11 = alloca i8, align 1
  %13 = alloca %struct.mz_zip_array*, align 8
  %14 = alloca %struct.mz_zip_array*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %pL.i = alloca i8*, align 8
  %pE.i = alloca i8*, align 8
  %pR.i = alloca i8*, align 8
  %l_len.i = alloca i32, align 4
  %r_len.i = alloca i32, align 4
  %l.i = alloca i8, align 1
  %r.i = alloca i8, align 1
  %17 = alloca %struct.mz_zip_archive_tag*, align 8
  %pState = alloca %struct.mz_zip_internal_state_tag*, align 8
  %pCentral_dir_offsets = alloca %struct.mz_zip_array*, align 8
  %pCentral_dir = alloca %struct.mz_zip_array*, align 8
  %pIndices = alloca i32*, align 8
  %size = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %child = alloca i32, align 4
  %root = alloca i32, align 4
  %t = alloca i32, align 4
  %child1 = alloca i32, align 4
  %root2 = alloca i32, align 4
  %t3 = alloca i32, align 4
  %t4 = alloca i32, align 4
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %17, align 8
  %18 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %19 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %18, i32 0, i32 12
  %20 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %19, align 8
  store %struct.mz_zip_internal_state_tag* %20, %struct.mz_zip_internal_state_tag** %pState, align 8
  %21 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %22 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %21, i32 0, i32 1
  store %struct.mz_zip_array* %22, %struct.mz_zip_array** %pCentral_dir_offsets, align 8
  %23 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %24 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %23, i32 0, i32 0
  store %struct.mz_zip_array* %24, %struct.mz_zip_array** %pCentral_dir, align 8
  %25 = load %struct.mz_zip_internal_state_tag*, %struct.mz_zip_internal_state_tag** %pState, align 8
  %26 = getelementptr inbounds %struct.mz_zip_internal_state_tag, %struct.mz_zip_internal_state_tag* %25, i32 0, i32 2
  %27 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %26, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i32, i32* %29, i64 0
  store i32* %30, i32** %pIndices, align 8
  %31 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %17, align 8
  %32 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %31, i32 0, i32 2
  %33 = load i32, i32* %32, align 8
  store i32 %33, i32* %size, align 4
  %34 = load i32, i32* %size, align 4
  %35 = sub nsw i32 %34, 2
  %36 = ashr i32 %35, 1
  store i32 %36, i32* %start, align 4
  br label %37

; <label>:37                                      ; preds = %365, %0
  %38 = load i32, i32* %start, align 4
  %39 = icmp sge i32 %38, 0
  br i1 %39, label %40, label %368

; <label>:40                                      ; preds = %37
  %41 = load i32, i32* %start, align 4
  store i32 %41, i32* %root, align 4
  br label %42

; <label>:42                                      ; preds = %363, %40
  %43 = load i32, i32* %root, align 4
  %44 = shl i32 %43, 1
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %child, align 4
  %46 = load i32, i32* %size, align 4
  %47 = icmp sge i32 %45, %46
  br i1 %47, label %48, label %49

; <label>:48                                      ; preds = %42
  br label %365

; <label>:49                                      ; preds = %42
  %50 = load i32, i32* %child, align 4
  %51 = add nsw i32 %50, 1
  %52 = load i32, i32* %size, align 4
  %53 = icmp slt i32 %51, %52
  br i1 %53, label %54, label %196

; <label>:54                                      ; preds = %49
  %55 = load %struct.mz_zip_array*, %struct.mz_zip_array** %pCentral_dir, align 8
  %56 = load %struct.mz_zip_array*, %struct.mz_zip_array** %pCentral_dir_offsets, align 8
  %57 = load i32, i32* %child, align 4
  %58 = sext i32 %57 to i64
  %59 = load i32*, i32** %pIndices, align 8
  %60 = getelementptr inbounds i32, i32* %59, i64 %58
  %61 = load i32, i32* %60, align 4
  %62 = load i32, i32* %child, align 4
  %63 = add nsw i32 %62, 1
  %64 = sext i32 %63 to i64
  %65 = load i32*, i32** %pIndices, align 8
  %66 = getelementptr inbounds i32, i32* %65, i64 %64
  %67 = load i32, i32* %66, align 4
  store %struct.mz_zip_array* %55, %struct.mz_zip_array** %13, align 8
  store %struct.mz_zip_array* %56, %struct.mz_zip_array** %14, align 8
  store i32 %61, i32* %15, align 4
  store i32 %67, i32* %16, align 4
  %68 = load i32, i32* %15, align 4
  %69 = zext i32 %68 to i64
  %70 = load %struct.mz_zip_array*, %struct.mz_zip_array** %14, align 8
  %71 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %70, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = bitcast i8* %72 to i32*
  %74 = getelementptr inbounds i32, i32* %73, i64 %69
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i64
  %77 = load %struct.mz_zip_array*, %struct.mz_zip_array** %13, align 8
  %78 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %77, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds i8, i8* %79, i64 %76
  store i8* %80, i8** %pL.i, align 8
  %81 = load i32, i32* %16, align 4
  %82 = zext i32 %81 to i64
  %83 = load %struct.mz_zip_array*, %struct.mz_zip_array** %14, align 8
  %84 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %83, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = bitcast i8* %85 to i32*
  %87 = getelementptr inbounds i32, i32* %86, i64 %82
  %88 = load i32, i32* %87, align 4
  %89 = zext i32 %88 to i64
  %90 = load %struct.mz_zip_array*, %struct.mz_zip_array** %13, align 8
  %91 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %90, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds i8, i8* %92, i64 %89
  store i8* %93, i8** %pR.i, align 8
  %94 = load i8*, i8** %pL.i, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 28
  %96 = bitcast i8* %95 to i16*
  %97 = load i16, i16* %96, align 2
  %98 = zext i16 %97 to i32
  store i32 %98, i32* %l_len.i, align 4
  %99 = load i8*, i8** %pR.i, align 8
  %100 = getelementptr inbounds i8, i8* %99, i64 28
  %101 = bitcast i8* %100 to i16*
  %102 = load i16, i16* %101, align 2
  %103 = zext i16 %102 to i32
  store i32 %103, i32* %r_len.i, align 4
  store i8 0, i8* %l.i, align 1
  store i8 0, i8* %r.i, align 1
  %104 = load i8*, i8** %pL.i, align 8
  %105 = getelementptr inbounds i8, i8* %104, i64 46
  store i8* %105, i8** %pL.i, align 8
  %106 = load i8*, i8** %pR.i, align 8
  %107 = getelementptr inbounds i8, i8* %106, i64 46
  store i8* %107, i8** %pR.i, align 8
  %108 = load i8*, i8** %pL.i, align 8
  %109 = load i32, i32* %l_len.i, align 4
  %110 = load i32, i32* %r_len.i, align 4
  %111 = icmp ult i32 %109, %110
  br i1 %111, label %112, label %114

; <label>:112                                     ; preds = %54
  %113 = load i32, i32* %l_len.i, align 4
  br label %116

; <label>:114                                     ; preds = %54
  %115 = load i32, i32* %r_len.i, align 4
  br label %116

; <label>:116                                     ; preds = %114, %112
  %117 = phi i32 [ %113, %112 ], [ %115, %114 ]
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds i8, i8* %108, i64 %118
  store i8* %119, i8** %pE.i, align 8
  br label %120

; <label>:120                                     ; preds = %173, %116
  %121 = load i8*, i8** %pL.i, align 8
  %122 = load i8*, i8** %pE.i, align 8
  %123 = icmp ult i8* %121, %122
  br i1 %123, label %124, label %178

; <label>:124                                     ; preds = %120
  %125 = load i8*, i8** %pL.i, align 8
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = icmp sge i32 %127, 65
  br i1 %128, label %129, label %140

; <label>:129                                     ; preds = %124
  %130 = load i8*, i8** %pL.i, align 8
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i32
  %133 = icmp sle i32 %132, 90
  br i1 %133, label %134, label %140

; <label>:134                                     ; preds = %129
  %135 = load i8*, i8** %pL.i, align 8
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i32
  %138 = sub nsw i32 %137, 65
  %139 = add nsw i32 %138, 97
  br label %144

; <label>:140                                     ; preds = %129, %124
  %141 = load i8*, i8** %pL.i, align 8
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  br label %144

; <label>:144                                     ; preds = %140, %134
  %145 = phi i32 [ %139, %134 ], [ %143, %140 ]
  %146 = trunc i32 %145 to i8
  store i8 %146, i8* %l.i, align 1
  %147 = zext i8 %146 to i32
  %148 = load i8*, i8** %pR.i, align 8
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  %151 = icmp sge i32 %150, 65
  br i1 %151, label %152, label %163

; <label>:152                                     ; preds = %144
  %153 = load i8*, i8** %pR.i, align 8
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = icmp sle i32 %155, 90
  br i1 %156, label %157, label %163

; <label>:157                                     ; preds = %152
  %158 = load i8*, i8** %pR.i, align 8
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = sub nsw i32 %160, 65
  %162 = add nsw i32 %161, 97
  br label %167

; <label>:163                                     ; preds = %152, %144
  %164 = load i8*, i8** %pR.i, align 8
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i32
  br label %167

; <label>:167                                     ; preds = %163, %157
  %168 = phi i32 [ %162, %157 ], [ %166, %163 ]
  %169 = trunc i32 %168 to i8
  store i8 %169, i8* %r.i, align 1
  %170 = zext i8 %169 to i32
  %171 = icmp ne i32 %147, %170
  br i1 %171, label %172, label %173

; <label>:172                                     ; preds = %167
  br label %178

; <label>:173                                     ; preds = %167
  %174 = load i8*, i8** %pL.i, align 8
  %175 = getelementptr inbounds i8, i8* %174, i32 1
  store i8* %175, i8** %pL.i, align 8
  %176 = load i8*, i8** %pR.i, align 8
  %177 = getelementptr inbounds i8, i8* %176, i32 1
  store i8* %177, i8** %pR.i, align 8
  br label %120

; <label>:178                                     ; preds = %172, %120
  %179 = load i8*, i8** %pL.i, align 8
  %180 = load i8*, i8** %pE.i, align 8
  %181 = icmp eq i8* %179, %180
  br i1 %181, label %182, label %187

; <label>:182                                     ; preds = %178
  %183 = load i32, i32* %l_len.i, align 4
  %184 = load i32, i32* %r_len.i, align 4
  %185 = icmp ult i32 %183, %184
  %186 = zext i1 %185 to i32
  br label %mz_zip_reader_filename_less.exit

; <label>:187                                     ; preds = %178
  %188 = load i8, i8* %l.i, align 1
  %189 = zext i8 %188 to i32
  %190 = load i8, i8* %r.i, align 1
  %191 = zext i8 %190 to i32
  %192 = icmp slt i32 %189, %191
  %193 = zext i1 %192 to i32
  br label %mz_zip_reader_filename_less.exit

mz_zip_reader_filename_less.exit:                 ; preds = %182, %187
  %194 = phi i32 [ %186, %182 ], [ %193, %187 ]
  %195 = icmp ne i32 %194, 0
  br label %196

; <label>:196                                     ; preds = %mz_zip_reader_filename_less.exit, %49
  %197 = phi i1 [ false, %49 ], [ %195, %mz_zip_reader_filename_less.exit ]
  %198 = zext i1 %197 to i32
  %199 = load i32, i32* %child, align 4
  %200 = add nsw i32 %199, %198
  store i32 %200, i32* %child, align 4
  %201 = load %struct.mz_zip_array*, %struct.mz_zip_array** %pCentral_dir, align 8
  %202 = load %struct.mz_zip_array*, %struct.mz_zip_array** %pCentral_dir_offsets, align 8
  %203 = load i32, i32* %root, align 4
  %204 = sext i32 %203 to i64
  %205 = load i32*, i32** %pIndices, align 8
  %206 = getelementptr inbounds i32, i32* %205, i64 %204
  %207 = load i32, i32* %206, align 4
  %208 = load i32, i32* %child, align 4
  %209 = sext i32 %208 to i64
  %210 = load i32*, i32** %pIndices, align 8
  %211 = getelementptr inbounds i32, i32* %210, i64 %209
  %212 = load i32, i32* %211, align 4
  store %struct.mz_zip_array* %201, %struct.mz_zip_array** %1, align 8
  store %struct.mz_zip_array* %202, %struct.mz_zip_array** %2, align 8
  store i32 %207, i32* %3, align 4
  store i32 %212, i32* %4, align 4
  %213 = load i32, i32* %3, align 4
  %214 = zext i32 %213 to i64
  %215 = load %struct.mz_zip_array*, %struct.mz_zip_array** %2, align 8
  %216 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %215, i32 0, i32 0
  %217 = load i8*, i8** %216, align 8
  %218 = bitcast i8* %217 to i32*
  %219 = getelementptr inbounds i32, i32* %218, i64 %214
  %220 = load i32, i32* %219, align 4
  %221 = zext i32 %220 to i64
  %222 = load %struct.mz_zip_array*, %struct.mz_zip_array** %1, align 8
  %223 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %222, i32 0, i32 0
  %224 = load i8*, i8** %223, align 8
  %225 = getelementptr inbounds i8, i8* %224, i64 %221
  store i8* %225, i8** %pL.i21, align 8
  %226 = load i32, i32* %4, align 4
  %227 = zext i32 %226 to i64
  %228 = load %struct.mz_zip_array*, %struct.mz_zip_array** %2, align 8
  %229 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %228, i32 0, i32 0
  %230 = load i8*, i8** %229, align 8
  %231 = bitcast i8* %230 to i32*
  %232 = getelementptr inbounds i32, i32* %231, i64 %227
  %233 = load i32, i32* %232, align 4
  %234 = zext i32 %233 to i64
  %235 = load %struct.mz_zip_array*, %struct.mz_zip_array** %1, align 8
  %236 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %235, i32 0, i32 0
  %237 = load i8*, i8** %236, align 8
  %238 = getelementptr inbounds i8, i8* %237, i64 %234
  store i8* %238, i8** %pR.i23, align 8
  %239 = load i8*, i8** %pL.i21, align 8
  %240 = getelementptr inbounds i8, i8* %239, i64 28
  %241 = bitcast i8* %240 to i16*
  %242 = load i16, i16* %241, align 2
  %243 = zext i16 %242 to i32
  store i32 %243, i32* %l_len.i24, align 4
  %244 = load i8*, i8** %pR.i23, align 8
  %245 = getelementptr inbounds i8, i8* %244, i64 28
  %246 = bitcast i8* %245 to i16*
  %247 = load i16, i16* %246, align 2
  %248 = zext i16 %247 to i32
  store i32 %248, i32* %r_len.i25, align 4
  store i8 0, i8* %l.i26, align 1
  store i8 0, i8* %r.i27, align 1
  %249 = load i8*, i8** %pL.i21, align 8
  %250 = getelementptr inbounds i8, i8* %249, i64 46
  store i8* %250, i8** %pL.i21, align 8
  %251 = load i8*, i8** %pR.i23, align 8
  %252 = getelementptr inbounds i8, i8* %251, i64 46
  store i8* %252, i8** %pR.i23, align 8
  %253 = load i8*, i8** %pL.i21, align 8
  %254 = load i32, i32* %l_len.i24, align 4
  %255 = load i32, i32* %r_len.i25, align 4
  %256 = icmp ult i32 %254, %255
  br i1 %256, label %257, label %259

; <label>:257                                     ; preds = %196
  %258 = load i32, i32* %l_len.i24, align 4
  br label %261

; <label>:259                                     ; preds = %196
  %260 = load i32, i32* %r_len.i25, align 4
  br label %261

; <label>:261                                     ; preds = %259, %257
  %262 = phi i32 [ %258, %257 ], [ %260, %259 ]
  %263 = zext i32 %262 to i64
  %264 = getelementptr inbounds i8, i8* %253, i64 %263
  store i8* %264, i8** %pE.i22, align 8
  br label %265

; <label>:265                                     ; preds = %318, %261
  %266 = load i8*, i8** %pL.i21, align 8
  %267 = load i8*, i8** %pE.i22, align 8
  %268 = icmp ult i8* %266, %267
  br i1 %268, label %269, label %323

; <label>:269                                     ; preds = %265
  %270 = load i8*, i8** %pL.i21, align 8
  %271 = load i8, i8* %270, align 1
  %272 = zext i8 %271 to i32
  %273 = icmp sge i32 %272, 65
  br i1 %273, label %274, label %285

; <label>:274                                     ; preds = %269
  %275 = load i8*, i8** %pL.i21, align 8
  %276 = load i8, i8* %275, align 1
  %277 = zext i8 %276 to i32
  %278 = icmp sle i32 %277, 90
  br i1 %278, label %279, label %285

; <label>:279                                     ; preds = %274
  %280 = load i8*, i8** %pL.i21, align 8
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i32
  %283 = sub nsw i32 %282, 65
  %284 = add nsw i32 %283, 97
  br label %289

; <label>:285                                     ; preds = %274, %269
  %286 = load i8*, i8** %pL.i21, align 8
  %287 = load i8, i8* %286, align 1
  %288 = zext i8 %287 to i32
  br label %289

; <label>:289                                     ; preds = %285, %279
  %290 = phi i32 [ %284, %279 ], [ %288, %285 ]
  %291 = trunc i32 %290 to i8
  store i8 %291, i8* %l.i26, align 1
  %292 = zext i8 %291 to i32
  %293 = load i8*, i8** %pR.i23, align 8
  %294 = load i8, i8* %293, align 1
  %295 = zext i8 %294 to i32
  %296 = icmp sge i32 %295, 65
  br i1 %296, label %297, label %308

; <label>:297                                     ; preds = %289
  %298 = load i8*, i8** %pR.i23, align 8
  %299 = load i8, i8* %298, align 1
  %300 = zext i8 %299 to i32
  %301 = icmp sle i32 %300, 90
  br i1 %301, label %302, label %308

; <label>:302                                     ; preds = %297
  %303 = load i8*, i8** %pR.i23, align 8
  %304 = load i8, i8* %303, align 1
  %305 = zext i8 %304 to i32
  %306 = sub nsw i32 %305, 65
  %307 = add nsw i32 %306, 97
  br label %312

; <label>:308                                     ; preds = %297, %289
  %309 = load i8*, i8** %pR.i23, align 8
  %310 = load i8, i8* %309, align 1
  %311 = zext i8 %310 to i32
  br label %312

; <label>:312                                     ; preds = %308, %302
  %313 = phi i32 [ %307, %302 ], [ %311, %308 ]
  %314 = trunc i32 %313 to i8
  store i8 %314, i8* %r.i27, align 1
  %315 = zext i8 %314 to i32
  %316 = icmp ne i32 %292, %315
  br i1 %316, label %317, label %318

; <label>:317                                     ; preds = %312
  br label %323

; <label>:318                                     ; preds = %312
  %319 = load i8*, i8** %pL.i21, align 8
  %320 = getelementptr inbounds i8, i8* %319, i32 1
  store i8* %320, i8** %pL.i21, align 8
  %321 = load i8*, i8** %pR.i23, align 8
  %322 = getelementptr inbounds i8, i8* %321, i32 1
  store i8* %322, i8** %pR.i23, align 8
  br label %265

; <label>:323                                     ; preds = %317, %265
  %324 = load i8*, i8** %pL.i21, align 8
  %325 = load i8*, i8** %pE.i22, align 8
  %326 = icmp eq i8* %324, %325
  br i1 %326, label %327, label %332

; <label>:327                                     ; preds = %323
  %328 = load i32, i32* %l_len.i24, align 4
  %329 = load i32, i32* %r_len.i25, align 4
  %330 = icmp ult i32 %328, %329
  %331 = zext i1 %330 to i32
  br label %mz_zip_reader_filename_less.exit28

; <label>:332                                     ; preds = %323
  %333 = load i8, i8* %l.i26, align 1
  %334 = zext i8 %333 to i32
  %335 = load i8, i8* %r.i27, align 1
  %336 = zext i8 %335 to i32
  %337 = icmp slt i32 %334, %336
  %338 = zext i1 %337 to i32
  br label %mz_zip_reader_filename_less.exit28

mz_zip_reader_filename_less.exit28:               ; preds = %327, %332
  %339 = phi i32 [ %331, %327 ], [ %338, %332 ]
  %340 = icmp ne i32 %339, 0
  br i1 %340, label %342, label %341

; <label>:341                                     ; preds = %mz_zip_reader_filename_less.exit28
  br label %365

; <label>:342                                     ; preds = %mz_zip_reader_filename_less.exit28
  br label %343

; <label>:343                                     ; preds = %342
  %344 = load i32, i32* %root, align 4
  %345 = sext i32 %344 to i64
  %346 = load i32*, i32** %pIndices, align 8
  %347 = getelementptr inbounds i32, i32* %346, i64 %345
  %348 = load i32, i32* %347, align 4
  store i32 %348, i32* %t, align 4
  %349 = load i32, i32* %child, align 4
  %350 = sext i32 %349 to i64
  %351 = load i32*, i32** %pIndices, align 8
  %352 = getelementptr inbounds i32, i32* %351, i64 %350
  %353 = load i32, i32* %352, align 4
  %354 = load i32, i32* %root, align 4
  %355 = sext i32 %354 to i64
  %356 = load i32*, i32** %pIndices, align 8
  %357 = getelementptr inbounds i32, i32* %356, i64 %355
  store i32 %353, i32* %357, align 4
  %358 = load i32, i32* %t, align 4
  %359 = load i32, i32* %child, align 4
  %360 = sext i32 %359 to i64
  %361 = load i32*, i32** %pIndices, align 8
  %362 = getelementptr inbounds i32, i32* %361, i64 %360
  store i32 %358, i32* %362, align 4
  br label %363

; <label>:363                                     ; preds = %343
  %364 = load i32, i32* %child, align 4
  store i32 %364, i32* %root, align 4
  br label %42

; <label>:365                                     ; preds = %341, %48
  %366 = load i32, i32* %start, align 4
  %367 = add nsw i32 %366, -1
  store i32 %367, i32* %start, align 4
  br label %37

; <label>:368                                     ; preds = %37
  %369 = load i32, i32* %size, align 4
  %370 = sub nsw i32 %369, 1
  store i32 %370, i32* %end, align 4
  br label %371

; <label>:371                                     ; preds = %715, %368
  %372 = load i32, i32* %end, align 4
  %373 = icmp sgt i32 %372, 0
  br i1 %373, label %374, label %718

; <label>:374                                     ; preds = %371
  store i32 0, i32* %root2, align 4
  br label %375

; <label>:375                                     ; preds = %374
  %376 = load i32, i32* %end, align 4
  %377 = sext i32 %376 to i64
  %378 = load i32*, i32** %pIndices, align 8
  %379 = getelementptr inbounds i32, i32* %378, i64 %377
  %380 = load i32, i32* %379, align 4
  store i32 %380, i32* %t3, align 4
  %381 = load i32*, i32** %pIndices, align 8
  %382 = getelementptr inbounds i32, i32* %381, i64 0
  %383 = load i32, i32* %382, align 4
  %384 = load i32, i32* %end, align 4
  %385 = sext i32 %384 to i64
  %386 = load i32*, i32** %pIndices, align 8
  %387 = getelementptr inbounds i32, i32* %386, i64 %385
  store i32 %383, i32* %387, align 4
  %388 = load i32, i32* %t3, align 4
  %389 = load i32*, i32** %pIndices, align 8
  %390 = getelementptr inbounds i32, i32* %389, i64 0
  store i32 %388, i32* %390, align 4
  br label %391

; <label>:391                                     ; preds = %375
  br label %392

; <label>:392                                     ; preds = %713, %391
  %393 = load i32, i32* %root2, align 4
  %394 = shl i32 %393, 1
  %395 = add nsw i32 %394, 1
  store i32 %395, i32* %child1, align 4
  %396 = load i32, i32* %end, align 4
  %397 = icmp sge i32 %395, %396
  br i1 %397, label %398, label %399

; <label>:398                                     ; preds = %392
  br label %715

; <label>:399                                     ; preds = %392
  %400 = load i32, i32* %child1, align 4
  %401 = add nsw i32 %400, 1
  %402 = load i32, i32* %end, align 4
  %403 = icmp slt i32 %401, %402
  br i1 %403, label %404, label %546

; <label>:404                                     ; preds = %399
  %405 = load %struct.mz_zip_array*, %struct.mz_zip_array** %pCentral_dir, align 8
  %406 = load %struct.mz_zip_array*, %struct.mz_zip_array** %pCentral_dir_offsets, align 8
  %407 = load i32, i32* %child1, align 4
  %408 = sext i32 %407 to i64
  %409 = load i32*, i32** %pIndices, align 8
  %410 = getelementptr inbounds i32, i32* %409, i64 %408
  %411 = load i32, i32* %410, align 4
  %412 = load i32, i32* %child1, align 4
  %413 = add nsw i32 %412, 1
  %414 = sext i32 %413 to i64
  %415 = load i32*, i32** %pIndices, align 8
  %416 = getelementptr inbounds i32, i32* %415, i64 %414
  %417 = load i32, i32* %416, align 4
  store %struct.mz_zip_array* %405, %struct.mz_zip_array** %5, align 8
  store %struct.mz_zip_array* %406, %struct.mz_zip_array** %6, align 8
  store i32 %411, i32* %7, align 4
  store i32 %417, i32* %8, align 4
  %418 = load i32, i32* %7, align 4
  %419 = zext i32 %418 to i64
  %420 = load %struct.mz_zip_array*, %struct.mz_zip_array** %6, align 8
  %421 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %420, i32 0, i32 0
  %422 = load i8*, i8** %421, align 8
  %423 = bitcast i8* %422 to i32*
  %424 = getelementptr inbounds i32, i32* %423, i64 %419
  %425 = load i32, i32* %424, align 4
  %426 = zext i32 %425 to i64
  %427 = load %struct.mz_zip_array*, %struct.mz_zip_array** %5, align 8
  %428 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %427, i32 0, i32 0
  %429 = load i8*, i8** %428, align 8
  %430 = getelementptr inbounds i8, i8* %429, i64 %426
  store i8* %430, i8** %pL.i13, align 8
  %431 = load i32, i32* %8, align 4
  %432 = zext i32 %431 to i64
  %433 = load %struct.mz_zip_array*, %struct.mz_zip_array** %6, align 8
  %434 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %433, i32 0, i32 0
  %435 = load i8*, i8** %434, align 8
  %436 = bitcast i8* %435 to i32*
  %437 = getelementptr inbounds i32, i32* %436, i64 %432
  %438 = load i32, i32* %437, align 4
  %439 = zext i32 %438 to i64
  %440 = load %struct.mz_zip_array*, %struct.mz_zip_array** %5, align 8
  %441 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %440, i32 0, i32 0
  %442 = load i8*, i8** %441, align 8
  %443 = getelementptr inbounds i8, i8* %442, i64 %439
  store i8* %443, i8** %pR.i15, align 8
  %444 = load i8*, i8** %pL.i13, align 8
  %445 = getelementptr inbounds i8, i8* %444, i64 28
  %446 = bitcast i8* %445 to i16*
  %447 = load i16, i16* %446, align 2
  %448 = zext i16 %447 to i32
  store i32 %448, i32* %l_len.i16, align 4
  %449 = load i8*, i8** %pR.i15, align 8
  %450 = getelementptr inbounds i8, i8* %449, i64 28
  %451 = bitcast i8* %450 to i16*
  %452 = load i16, i16* %451, align 2
  %453 = zext i16 %452 to i32
  store i32 %453, i32* %r_len.i17, align 4
  store i8 0, i8* %l.i18, align 1
  store i8 0, i8* %r.i19, align 1
  %454 = load i8*, i8** %pL.i13, align 8
  %455 = getelementptr inbounds i8, i8* %454, i64 46
  store i8* %455, i8** %pL.i13, align 8
  %456 = load i8*, i8** %pR.i15, align 8
  %457 = getelementptr inbounds i8, i8* %456, i64 46
  store i8* %457, i8** %pR.i15, align 8
  %458 = load i8*, i8** %pL.i13, align 8
  %459 = load i32, i32* %l_len.i16, align 4
  %460 = load i32, i32* %r_len.i17, align 4
  %461 = icmp ult i32 %459, %460
  br i1 %461, label %462, label %464

; <label>:462                                     ; preds = %404
  %463 = load i32, i32* %l_len.i16, align 4
  br label %466

; <label>:464                                     ; preds = %404
  %465 = load i32, i32* %r_len.i17, align 4
  br label %466

; <label>:466                                     ; preds = %464, %462
  %467 = phi i32 [ %463, %462 ], [ %465, %464 ]
  %468 = zext i32 %467 to i64
  %469 = getelementptr inbounds i8, i8* %458, i64 %468
  store i8* %469, i8** %pE.i14, align 8
  br label %470

; <label>:470                                     ; preds = %523, %466
  %471 = load i8*, i8** %pL.i13, align 8
  %472 = load i8*, i8** %pE.i14, align 8
  %473 = icmp ult i8* %471, %472
  br i1 %473, label %474, label %528

; <label>:474                                     ; preds = %470
  %475 = load i8*, i8** %pL.i13, align 8
  %476 = load i8, i8* %475, align 1
  %477 = zext i8 %476 to i32
  %478 = icmp sge i32 %477, 65
  br i1 %478, label %479, label %490

; <label>:479                                     ; preds = %474
  %480 = load i8*, i8** %pL.i13, align 8
  %481 = load i8, i8* %480, align 1
  %482 = zext i8 %481 to i32
  %483 = icmp sle i32 %482, 90
  br i1 %483, label %484, label %490

; <label>:484                                     ; preds = %479
  %485 = load i8*, i8** %pL.i13, align 8
  %486 = load i8, i8* %485, align 1
  %487 = zext i8 %486 to i32
  %488 = sub nsw i32 %487, 65
  %489 = add nsw i32 %488, 97
  br label %494

; <label>:490                                     ; preds = %479, %474
  %491 = load i8*, i8** %pL.i13, align 8
  %492 = load i8, i8* %491, align 1
  %493 = zext i8 %492 to i32
  br label %494

; <label>:494                                     ; preds = %490, %484
  %495 = phi i32 [ %489, %484 ], [ %493, %490 ]
  %496 = trunc i32 %495 to i8
  store i8 %496, i8* %l.i18, align 1
  %497 = zext i8 %496 to i32
  %498 = load i8*, i8** %pR.i15, align 8
  %499 = load i8, i8* %498, align 1
  %500 = zext i8 %499 to i32
  %501 = icmp sge i32 %500, 65
  br i1 %501, label %502, label %513

; <label>:502                                     ; preds = %494
  %503 = load i8*, i8** %pR.i15, align 8
  %504 = load i8, i8* %503, align 1
  %505 = zext i8 %504 to i32
  %506 = icmp sle i32 %505, 90
  br i1 %506, label %507, label %513

; <label>:507                                     ; preds = %502
  %508 = load i8*, i8** %pR.i15, align 8
  %509 = load i8, i8* %508, align 1
  %510 = zext i8 %509 to i32
  %511 = sub nsw i32 %510, 65
  %512 = add nsw i32 %511, 97
  br label %517

; <label>:513                                     ; preds = %502, %494
  %514 = load i8*, i8** %pR.i15, align 8
  %515 = load i8, i8* %514, align 1
  %516 = zext i8 %515 to i32
  br label %517

; <label>:517                                     ; preds = %513, %507
  %518 = phi i32 [ %512, %507 ], [ %516, %513 ]
  %519 = trunc i32 %518 to i8
  store i8 %519, i8* %r.i19, align 1
  %520 = zext i8 %519 to i32
  %521 = icmp ne i32 %497, %520
  br i1 %521, label %522, label %523

; <label>:522                                     ; preds = %517
  br label %528

; <label>:523                                     ; preds = %517
  %524 = load i8*, i8** %pL.i13, align 8
  %525 = getelementptr inbounds i8, i8* %524, i32 1
  store i8* %525, i8** %pL.i13, align 8
  %526 = load i8*, i8** %pR.i15, align 8
  %527 = getelementptr inbounds i8, i8* %526, i32 1
  store i8* %527, i8** %pR.i15, align 8
  br label %470

; <label>:528                                     ; preds = %522, %470
  %529 = load i8*, i8** %pL.i13, align 8
  %530 = load i8*, i8** %pE.i14, align 8
  %531 = icmp eq i8* %529, %530
  br i1 %531, label %532, label %537

; <label>:532                                     ; preds = %528
  %533 = load i32, i32* %l_len.i16, align 4
  %534 = load i32, i32* %r_len.i17, align 4
  %535 = icmp ult i32 %533, %534
  %536 = zext i1 %535 to i32
  br label %mz_zip_reader_filename_less.exit20

; <label>:537                                     ; preds = %528
  %538 = load i8, i8* %l.i18, align 1
  %539 = zext i8 %538 to i32
  %540 = load i8, i8* %r.i19, align 1
  %541 = zext i8 %540 to i32
  %542 = icmp slt i32 %539, %541
  %543 = zext i1 %542 to i32
  br label %mz_zip_reader_filename_less.exit20

mz_zip_reader_filename_less.exit20:               ; preds = %532, %537
  %544 = phi i32 [ %536, %532 ], [ %543, %537 ]
  %545 = icmp ne i32 %544, 0
  br label %546

; <label>:546                                     ; preds = %mz_zip_reader_filename_less.exit20, %399
  %547 = phi i1 [ false, %399 ], [ %545, %mz_zip_reader_filename_less.exit20 ]
  %548 = zext i1 %547 to i32
  %549 = load i32, i32* %child1, align 4
  %550 = add nsw i32 %549, %548
  store i32 %550, i32* %child1, align 4
  %551 = load %struct.mz_zip_array*, %struct.mz_zip_array** %pCentral_dir, align 8
  %552 = load %struct.mz_zip_array*, %struct.mz_zip_array** %pCentral_dir_offsets, align 8
  %553 = load i32, i32* %root2, align 4
  %554 = sext i32 %553 to i64
  %555 = load i32*, i32** %pIndices, align 8
  %556 = getelementptr inbounds i32, i32* %555, i64 %554
  %557 = load i32, i32* %556, align 4
  %558 = load i32, i32* %child1, align 4
  %559 = sext i32 %558 to i64
  %560 = load i32*, i32** %pIndices, align 8
  %561 = getelementptr inbounds i32, i32* %560, i64 %559
  %562 = load i32, i32* %561, align 4
  store %struct.mz_zip_array* %551, %struct.mz_zip_array** %9, align 8
  store %struct.mz_zip_array* %552, %struct.mz_zip_array** %10, align 8
  store i32 %557, i32* %11, align 4
  store i32 %562, i32* %12, align 4
  %563 = load i32, i32* %11, align 4
  %564 = zext i32 %563 to i64
  %565 = load %struct.mz_zip_array*, %struct.mz_zip_array** %10, align 8
  %566 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %565, i32 0, i32 0
  %567 = load i8*, i8** %566, align 8
  %568 = bitcast i8* %567 to i32*
  %569 = getelementptr inbounds i32, i32* %568, i64 %564
  %570 = load i32, i32* %569, align 4
  %571 = zext i32 %570 to i64
  %572 = load %struct.mz_zip_array*, %struct.mz_zip_array** %9, align 8
  %573 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %572, i32 0, i32 0
  %574 = load i8*, i8** %573, align 8
  %575 = getelementptr inbounds i8, i8* %574, i64 %571
  store i8* %575, i8** %pL.i5, align 8
  %576 = load i32, i32* %12, align 4
  %577 = zext i32 %576 to i64
  %578 = load %struct.mz_zip_array*, %struct.mz_zip_array** %10, align 8
  %579 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %578, i32 0, i32 0
  %580 = load i8*, i8** %579, align 8
  %581 = bitcast i8* %580 to i32*
  %582 = getelementptr inbounds i32, i32* %581, i64 %577
  %583 = load i32, i32* %582, align 4
  %584 = zext i32 %583 to i64
  %585 = load %struct.mz_zip_array*, %struct.mz_zip_array** %9, align 8
  %586 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %585, i32 0, i32 0
  %587 = load i8*, i8** %586, align 8
  %588 = getelementptr inbounds i8, i8* %587, i64 %584
  store i8* %588, i8** %pR.i7, align 8
  %589 = load i8*, i8** %pL.i5, align 8
  %590 = getelementptr inbounds i8, i8* %589, i64 28
  %591 = bitcast i8* %590 to i16*
  %592 = load i16, i16* %591, align 2
  %593 = zext i16 %592 to i32
  store i32 %593, i32* %l_len.i8, align 4
  %594 = load i8*, i8** %pR.i7, align 8
  %595 = getelementptr inbounds i8, i8* %594, i64 28
  %596 = bitcast i8* %595 to i16*
  %597 = load i16, i16* %596, align 2
  %598 = zext i16 %597 to i32
  store i32 %598, i32* %r_len.i9, align 4
  store i8 0, i8* %l.i10, align 1
  store i8 0, i8* %r.i11, align 1
  %599 = load i8*, i8** %pL.i5, align 8
  %600 = getelementptr inbounds i8, i8* %599, i64 46
  store i8* %600, i8** %pL.i5, align 8
  %601 = load i8*, i8** %pR.i7, align 8
  %602 = getelementptr inbounds i8, i8* %601, i64 46
  store i8* %602, i8** %pR.i7, align 8
  %603 = load i8*, i8** %pL.i5, align 8
  %604 = load i32, i32* %l_len.i8, align 4
  %605 = load i32, i32* %r_len.i9, align 4
  %606 = icmp ult i32 %604, %605
  br i1 %606, label %607, label %609

; <label>:607                                     ; preds = %546
  %608 = load i32, i32* %l_len.i8, align 4
  br label %611

; <label>:609                                     ; preds = %546
  %610 = load i32, i32* %r_len.i9, align 4
  br label %611

; <label>:611                                     ; preds = %609, %607
  %612 = phi i32 [ %608, %607 ], [ %610, %609 ]
  %613 = zext i32 %612 to i64
  %614 = getelementptr inbounds i8, i8* %603, i64 %613
  store i8* %614, i8** %pE.i6, align 8
  br label %615

; <label>:615                                     ; preds = %668, %611
  %616 = load i8*, i8** %pL.i5, align 8
  %617 = load i8*, i8** %pE.i6, align 8
  %618 = icmp ult i8* %616, %617
  br i1 %618, label %619, label %673

; <label>:619                                     ; preds = %615
  %620 = load i8*, i8** %pL.i5, align 8
  %621 = load i8, i8* %620, align 1
  %622 = zext i8 %621 to i32
  %623 = icmp sge i32 %622, 65
  br i1 %623, label %624, label %635

; <label>:624                                     ; preds = %619
  %625 = load i8*, i8** %pL.i5, align 8
  %626 = load i8, i8* %625, align 1
  %627 = zext i8 %626 to i32
  %628 = icmp sle i32 %627, 90
  br i1 %628, label %629, label %635

; <label>:629                                     ; preds = %624
  %630 = load i8*, i8** %pL.i5, align 8
  %631 = load i8, i8* %630, align 1
  %632 = zext i8 %631 to i32
  %633 = sub nsw i32 %632, 65
  %634 = add nsw i32 %633, 97
  br label %639

; <label>:635                                     ; preds = %624, %619
  %636 = load i8*, i8** %pL.i5, align 8
  %637 = load i8, i8* %636, align 1
  %638 = zext i8 %637 to i32
  br label %639

; <label>:639                                     ; preds = %635, %629
  %640 = phi i32 [ %634, %629 ], [ %638, %635 ]
  %641 = trunc i32 %640 to i8
  store i8 %641, i8* %l.i10, align 1
  %642 = zext i8 %641 to i32
  %643 = load i8*, i8** %pR.i7, align 8
  %644 = load i8, i8* %643, align 1
  %645 = zext i8 %644 to i32
  %646 = icmp sge i32 %645, 65
  br i1 %646, label %647, label %658

; <label>:647                                     ; preds = %639
  %648 = load i8*, i8** %pR.i7, align 8
  %649 = load i8, i8* %648, align 1
  %650 = zext i8 %649 to i32
  %651 = icmp sle i32 %650, 90
  br i1 %651, label %652, label %658

; <label>:652                                     ; preds = %647
  %653 = load i8*, i8** %pR.i7, align 8
  %654 = load i8, i8* %653, align 1
  %655 = zext i8 %654 to i32
  %656 = sub nsw i32 %655, 65
  %657 = add nsw i32 %656, 97
  br label %662

; <label>:658                                     ; preds = %647, %639
  %659 = load i8*, i8** %pR.i7, align 8
  %660 = load i8, i8* %659, align 1
  %661 = zext i8 %660 to i32
  br label %662

; <label>:662                                     ; preds = %658, %652
  %663 = phi i32 [ %657, %652 ], [ %661, %658 ]
  %664 = trunc i32 %663 to i8
  store i8 %664, i8* %r.i11, align 1
  %665 = zext i8 %664 to i32
  %666 = icmp ne i32 %642, %665
  br i1 %666, label %667, label %668

; <label>:667                                     ; preds = %662
  br label %673

; <label>:668                                     ; preds = %662
  %669 = load i8*, i8** %pL.i5, align 8
  %670 = getelementptr inbounds i8, i8* %669, i32 1
  store i8* %670, i8** %pL.i5, align 8
  %671 = load i8*, i8** %pR.i7, align 8
  %672 = getelementptr inbounds i8, i8* %671, i32 1
  store i8* %672, i8** %pR.i7, align 8
  br label %615

; <label>:673                                     ; preds = %667, %615
  %674 = load i8*, i8** %pL.i5, align 8
  %675 = load i8*, i8** %pE.i6, align 8
  %676 = icmp eq i8* %674, %675
  br i1 %676, label %677, label %682

; <label>:677                                     ; preds = %673
  %678 = load i32, i32* %l_len.i8, align 4
  %679 = load i32, i32* %r_len.i9, align 4
  %680 = icmp ult i32 %678, %679
  %681 = zext i1 %680 to i32
  br label %mz_zip_reader_filename_less.exit12

; <label>:682                                     ; preds = %673
  %683 = load i8, i8* %l.i10, align 1
  %684 = zext i8 %683 to i32
  %685 = load i8, i8* %r.i11, align 1
  %686 = zext i8 %685 to i32
  %687 = icmp slt i32 %684, %686
  %688 = zext i1 %687 to i32
  br label %mz_zip_reader_filename_less.exit12

mz_zip_reader_filename_less.exit12:               ; preds = %677, %682
  %689 = phi i32 [ %681, %677 ], [ %688, %682 ]
  %690 = icmp ne i32 %689, 0
  br i1 %690, label %692, label %691

; <label>:691                                     ; preds = %mz_zip_reader_filename_less.exit12
  br label %715

; <label>:692                                     ; preds = %mz_zip_reader_filename_less.exit12
  br label %693

; <label>:693                                     ; preds = %692
  %694 = load i32, i32* %root2, align 4
  %695 = sext i32 %694 to i64
  %696 = load i32*, i32** %pIndices, align 8
  %697 = getelementptr inbounds i32, i32* %696, i64 %695
  %698 = load i32, i32* %697, align 4
  store i32 %698, i32* %t4, align 4
  %699 = load i32, i32* %child1, align 4
  %700 = sext i32 %699 to i64
  %701 = load i32*, i32** %pIndices, align 8
  %702 = getelementptr inbounds i32, i32* %701, i64 %700
  %703 = load i32, i32* %702, align 4
  %704 = load i32, i32* %root2, align 4
  %705 = sext i32 %704 to i64
  %706 = load i32*, i32** %pIndices, align 8
  %707 = getelementptr inbounds i32, i32* %706, i64 %705
  store i32 %703, i32* %707, align 4
  %708 = load i32, i32* %t4, align 4
  %709 = load i32, i32* %child1, align 4
  %710 = sext i32 %709 to i64
  %711 = load i32*, i32** %pIndices, align 8
  %712 = getelementptr inbounds i32, i32* %711, i64 %710
  store i32 %708, i32* %712, align 4
  br label %713

; <label>:713                                     ; preds = %693
  %714 = load i32, i32* %child1, align 4
  store i32 %714, i32* %root2, align 4
  br label %392

; <label>:715                                     ; preds = %691, %398
  %716 = load i32, i32* %end, align 4
  %717 = add nsw i32 %716, -1
  store i32 %717, i32* %end, align 4
  br label %371

; <label>:718                                     ; preds = %371
  ret void
}

; Function Attrs: nounwind
declare i64 @mktime(%struct.tm*) #1

declare i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #4

; Function Attrs: nounwind
declare i32 @utime(i8*, %struct.utimbuf*) #1

; Function Attrs: nounwind
declare %struct.tm* @localtime(i64*) #1

; Function Attrs: nounwind uwtable
define internal i32 @mz_zip_array_ensure_capacity(%struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_array* %pArray, i64 %min_new_capacity, i32 %growing) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.mz_zip_archive_tag*, align 8
  %3 = alloca %struct.mz_zip_array*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %pNew_p = alloca i8*, align 8
  %new_capacity = alloca i64, align 8
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %2, align 8
  store %struct.mz_zip_array* %pArray, %struct.mz_zip_array** %3, align 8
  store i64 %min_new_capacity, i64* %4, align 8
  store i32 %growing, i32* %5, align 4
  %6 = load i64, i64* %4, align 8
  store i64 %6, i64* %new_capacity, align 8
  %7 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %8 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %7, i32 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %0
  br label %14

; <label>:12                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i32 0, i32 0), i32 2998, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__.mz_zip_array_ensure_capacity, i32 0, i32 0)) #7
  unreachable
                                                  ; No predecessors!
  br label %14

; <label>:14                                      ; preds = %13, %11
  %15 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %16 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %15, i32 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = icmp uge i64 %17, %18
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %14
  store i32 1, i32* %1, align 4
  br label %69

; <label>:21                                      ; preds = %14
  %22 = load i32, i32* %5, align 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %44

; <label>:24                                      ; preds = %21
  %25 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %26 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %25, i32 0, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = icmp ugt i64 1, %27
  br i1 %28, label %29, label %30

; <label>:29                                      ; preds = %24
  br label %34

; <label>:30                                      ; preds = %24
  %31 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %32 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %31, i32 0, i32 2
  %33 = load i64, i64* %32, align 8
  br label %34

; <label>:34                                      ; preds = %30, %29
  %35 = phi i64 [ 1, %29 ], [ %33, %30 ]
  store i64 %35, i64* %new_capacity, align 8
  br label %36

; <label>:36                                      ; preds = %40, %34
  %37 = load i64, i64* %new_capacity, align 8
  %38 = load i64, i64* %4, align 8
  %39 = icmp ult i64 %37, %38
  br i1 %39, label %40, label %43

; <label>:40                                      ; preds = %36
  %41 = load i64, i64* %new_capacity, align 8
  %42 = mul i64 %41, 2
  store i64 %42, i64* %new_capacity, align 8
  br label %36

; <label>:43                                      ; preds = %36
  br label %44

; <label>:44                                      ; preds = %43, %21
  %45 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %46 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %45, i32 0, i32 7
  %47 = load i8* (i8*, i8*, i64, i64)*, i8* (i8*, i8*, i64, i64)** %46, align 8
  %48 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %2, align 8
  %49 = getelementptr inbounds %struct.mz_zip_archive_tag, %struct.mz_zip_archive_tag* %48, i32 0, i32 8
  %50 = load i8*, i8** %49, align 8
  %51 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %52 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %51, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %55 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %54, i32 0, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = zext i32 %56 to i64
  %58 = load i64, i64* %new_capacity, align 8
  %59 = call i8* %47(i8* %50, i8* %53, i64 %57, i64 %58)
  store i8* %59, i8** %pNew_p, align 8
  %60 = icmp eq i8* null, %59
  br i1 %60, label %61, label %62

; <label>:61                                      ; preds = %44
  store i32 0, i32* %1, align 4
  br label %69

; <label>:62                                      ; preds = %44
  %63 = load i8*, i8** %pNew_p, align 8
  %64 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %65 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %64, i32 0, i32 0
  store i8* %63, i8** %65, align 8
  %66 = load i64, i64* %new_capacity, align 8
  %67 = load %struct.mz_zip_array*, %struct.mz_zip_array** %3, align 8
  %68 = getelementptr inbounds %struct.mz_zip_array, %struct.mz_zip_array* %67, i32 0, i32 2
  store i64 %66, i64* %68, align 8
  store i32 1, i32* %1, align 4
  br label %69

; <label>:69                                      ; preds = %62, %61, %20
  %70 = load i32, i32* %1, align 4
  ret i32 %70
}

; Function Attrs: nounwind uwtable
define internal i32 @mz_zip_writer_create_central_dir_header(%struct.mz_zip_archive_tag* %pZip, i8* %pDst, i16 zeroext %filename_size, i16 zeroext %extra_size, i16 zeroext %comment_size, i64 %uncomp_size, i64 %comp_size, i32 %uncomp_crc32, i16 zeroext %method, i16 zeroext %bit_flags, i16 zeroext %dos_time, i16 zeroext %dos_date, i64 %local_header_ofs, i32 %ext_attributes) #0 {
  %1 = alloca %struct.mz_zip_archive_tag*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = alloca i16, align 2
  %12 = alloca i16, align 2
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  store %struct.mz_zip_archive_tag* %pZip, %struct.mz_zip_archive_tag** %1, align 8
  store i8* %pDst, i8** %2, align 8
  store i16 %filename_size, i16* %3, align 2
  store i16 %extra_size, i16* %4, align 2
  store i16 %comment_size, i16* %5, align 2
  store i64 %uncomp_size, i64* %6, align 8
  store i64 %comp_size, i64* %7, align 8
  store i32 %uncomp_crc32, i32* %8, align 4
  store i16 %method, i16* %9, align 2
  store i16 %bit_flags, i16* %10, align 2
  store i16 %dos_time, i16* %11, align 2
  store i16 %dos_date, i16* %12, align 2
  store i64 %local_header_ofs, i64* %13, align 8
  store i32 %ext_attributes, i32* %14, align 4
  %15 = load %struct.mz_zip_archive_tag*, %struct.mz_zip_archive_tag** %1, align 8
  %16 = load i8*, i8** %2, align 8
  call void @llvm.memset.p0i8.i64(i8* %16, i8 0, i64 46, i32 1, i1 false)
  %17 = load i8*, i8** %2, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  call void @mz_write_le32(i8* %18, i32 33639248)
  %19 = load i8*, i8** %2, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 6
  %21 = load i16, i16* %9, align 2
  %22 = zext i16 %21 to i32
  %23 = icmp ne i32 %22, 0
  %24 = select i1 %23, i32 20, i32 0
  %25 = trunc i32 %24 to i16
  call void @mz_write_le16(i8* %20, i16 zeroext %25)
  %26 = load i8*, i8** %2, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 8
  %28 = load i16, i16* %10, align 2
  call void @mz_write_le16(i8* %27, i16 zeroext %28)
  %29 = load i8*, i8** %2, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 10
  %31 = load i16, i16* %9, align 2
  call void @mz_write_le16(i8* %30, i16 zeroext %31)
  %32 = load i8*, i8** %2, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 12
  %34 = load i16, i16* %11, align 2
  call void @mz_write_le16(i8* %33, i16 zeroext %34)
  %35 = load i8*, i8** %2, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 14
  %37 = load i16, i16* %12, align 2
  call void @mz_write_le16(i8* %36, i16 zeroext %37)
  %38 = load i8*, i8** %2, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 16
  %40 = load i32, i32* %8, align 4
  call void @mz_write_le32(i8* %39, i32 %40)
  %41 = load i8*, i8** %2, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 20
  %43 = load i64, i64* %7, align 8
  %44 = trunc i64 %43 to i32
  call void @mz_write_le32(i8* %42, i32 %44)
  %45 = load i8*, i8** %2, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 24
  %47 = load i64, i64* %6, align 8
  %48 = trunc i64 %47 to i32
  call void @mz_write_le32(i8* %46, i32 %48)
  %49 = load i8*, i8** %2, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 28
  %51 = load i16, i16* %3, align 2
  call void @mz_write_le16(i8* %50, i16 zeroext %51)
  %52 = load i8*, i8** %2, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 30
  %54 = load i16, i16* %4, align 2
  call void @mz_write_le16(i8* %53, i16 zeroext %54)
  %55 = load i8*, i8** %2, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 32
  %57 = load i16, i16* %5, align 2
  call void @mz_write_le16(i8* %56, i16 zeroext %57)
  %58 = load i8*, i8** %2, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 38
  %60 = load i32, i32* %14, align 4
  call void @mz_write_le32(i8* %59, i32 %60)
  %61 = load i8*, i8** %2, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 42
  %63 = load i64, i64* %13, align 8
  %64 = trunc i64 %63 to i32
  call void @mz_write_le32(i8* %62, i32 %64)
  ret i32 1
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { nounwind readonly }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.8.1-24 (tags/RELEASE_381/final)"}
